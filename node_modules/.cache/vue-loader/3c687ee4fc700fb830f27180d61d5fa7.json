{"remainingRequest":"/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/src/views/teachers/TeacherAssignments/Create/CreateQuestionForm.vue?vue&type=template&id=5655734e&scoped=true&","dependencies":[{"path":"/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/src/views/teachers/TeacherAssignments/Create/CreateQuestionForm.vue","mtime":1680747060260},{"path":"/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/node_modules/cache-loader/dist/cjs.js","mtime":1680070113546},{"path":"/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/node_modules/cache-loader/dist/cjs.js","mtime":1680070113546},{"path":"/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/node_modules/babel-loader/lib/index.js","mtime":1680059914906},{"path":"/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1680070113769},{"path":"/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/node_modules/cache-loader/dist/cjs.js","mtime":1680070113546},{"path":"/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/node_modules/vue-loader/lib/index.js","mtime":1680070113705}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}