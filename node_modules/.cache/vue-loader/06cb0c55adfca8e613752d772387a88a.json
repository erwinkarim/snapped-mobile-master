{"remainingRequest":"/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/src/components/ZoomQuestionForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/src/components/ZoomQuestionForm.vue","mtime":1679379067237},{"path":"/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/node_modules/cache-loader/dist/cjs.js","mtime":1680070113546},{"path":"/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/node_modules/babel-loader/lib/index.js","mtime":1680059914906},{"path":"/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/node_modules/cache-loader/dist/cjs.js","mtime":1680070113546},{"path":"/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/node_modules/vue-loader/lib/index.js","mtime":1680070113705}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ZoomQuestionForm.vue"],"names":[],"mappings":";AAuLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"ZoomQuestionForm.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <!-- FORM: Zoom Question -->\n    <div v-if=\"$store.state.teacherCreateAssignment.states.isCreatingZoomQuestion\">\n      <p>Works best in Google Chrome. Some features may not be available in other browsers.</p>\n\n      <!-- Join / leave meeting -->\n      <div class=\"flex -mx-1 mb-4\" >\n        <div class=\"px-1 w-1/2 h-28\">\n          <button @click=\"createZoomMeeting\"\n            class=\"mt-2 w-full text-lg font-normal leading-tight rounded-md border border-none appearance-none bg-gray-secondary text-purple-secondary focus:outline-none focus:shadow-outline\"\n          >\n            <div class=\"flex col-span-1 row-span-1 justify-center py-4\">\n              <icon-base-two class=\"w-12\">\n                <phone-icon class=\"w-12\"/>\n              </icon-base-two>\n            </div>\n            <div class=\"flex col-span-1 row-span-2 justify-center py-2\">\n              Join\n            </div>\n          </button>\n        </div>\n        <div class=\"px-1 w-1/2 h-28\">\n          <button @click=\"leaveZoomMeeting\"\n                  class=\"mt-2 w-full text-lg font-normal leading-tight rounded-md border border-none appearance-none bg-gray-secondary text-purple-secondary focus:outline-none focus:shadow-outline\"\n          >\n            <div class=\"flex col-span-1 row-span-1 justify-center py-4\">\n              <icon-base-two class=\"w-12\">\n                <person-to-door-icon class=\"w-12\"/>\n              </icon-base-two>\n            </div>\n            <div class=\"flex col-span-1 row-span-2 justify-center py-2\">\n              Leave\n            </div>\n          </button>\n        </div>\n      </div>\n\n      <!-- Status Bar -->\n      <div class=\"flex -mx-1 mb-4\" >\n        <div class=\"py-2 mt-2 w-full text-lg font-normal leading-tight rounded-md border border-none appearance-none bg-gray-secondary text-purple-secondary focus:outline-none focus:shadow-outline\">\n          Status: {{ status }}\n        </div>\n\n      </div>\n\n      <!-- video canvas -->\n      <p>Video panel</p>\n      <div class=\"flex -mx-1 mb-4\" >\n        <div id=\"the-view\" class=\"px-1 w-full\">\n        </div>\n      </div>\n\n      <p>Audio Waveform</p>\n      <div class=\"flex -mx-1 mb-4\">\n        <canvas id=\"the-audio\" class=\"px-1 w-full border-2 border-solid\"> </canvas>\n      </div>\n\n      <!-- screen share  video test -->\n      <p>Screen Share Panel</p>\n      <div class=\"flex -mx-1 mb-4\">\n        <div id=\"the-screen\" class=\"px-1 w-full\">\n        </div>\n      </div>\n\n      <!-- final render test -->\n      <p>Final render test</p>\n      <div class=\"flex -mx-1 mb-4\">\n        <canvas width=\"300\" height=\"150\" id=\"canvas-render\" class=\"border-2 border-black h-auto h-20 w-full md:w-screen max-w-xl \"></canvas>\n      </div>\n\n      <!-- camera and mic controls -->\n      <div class=\"flex -mx-1 mb-4\" >\n        <div class=\"px-1 w-1/3 h-28\">\n          <button @click=\"toggleVideoButton\"\n            id=\"video-button\"\n            class=\"mt-2 w-full text-lg font-normal leading-tight rounded-md border border-none appearance-none bg-gray-secondary text-purple-secondary focus:outline-none focus:shadow-outline\"\n            :disabled=\"!$store.getters['teacherCreateAssignment/hasZoomMeeting']\"\n          >\n            <div class=\"flex col-span-1 row-span-1 justify-center py-4\">\n              <icon-base-two class=\"w-12\">\n                <video-icon v-if=\"$store.state.teacherCreateAssignment.states.isVideoOn\" class=\"w-12\" />\n                <video-slash-icon v-else class=\"w-12\" />\n              </icon-base-two>\n            </div>\n            <div class=\"flex col-span-1 row-span-2 justify-center py-2\">\n              Camera\n            </div>\n          </button>\n        </div>\n        <div class=\"px-1 w-1/3 h-28\">\n          <button @click=\"toggleMicButton\"\n            id=\"mic-button\"\n            class=\"mt-2 w-full text-lg font-normal leading-tight rounded-md border border-none appearance-none bg-gray-secondary text-purple-secondary focus:outline-none focus:shadow-outline\"\n            :disabled=\"!$store.getters['teacherCreateAssignment/hasZoomMeeting']\"\n          >\n            <div class=\"flex col-span-1 row-span-1 justify-center py-4\">\n              <icon-base-two class=\"w-12\">\n                <microphone-icon v-if=\"$store.state.teacherCreateAssignment.states.isMicOn\" class=\"w-12\"/>\n                <microphone-slash-icon v-else class=\"w-12\"/>\n              </icon-base-two>\n            </div>\n            <div class=\"flex col-span-1 row-span-2 justify-center py-2\">\n              Microphone \n            </div>\n          </button>\n        </div>\n        <div class=\"px-1 w-1/3 h-28\">\n          <button @click=\"toggleShareScreenButton\"\n            id=\"screen-button\"\n            class=\"mt-2 w-full text-lg font-normal leading-tight rounded-md border border-none appearance-none bg-gray-secondary text-purple-secondary focus:outline-none focus:shadow-outline\"\n            :disabled=\"!$store.getters['teacherCreateAssignment/hasZoomMeeting']\"\n          >\n            <div class=\"flex col-span-1 row-span-1 justify-center py-4\">\n              <icon-base-two class=\"w-12\">\n                <display-icon v-if=\"$store.state.teacherCreateAssignment.states.isScreenShare\" class=\"w-12\" />\n                <display-slash-icon v-else class=\"w-12\"/>\n              </icon-base-two>\n            </div>\n            <div class=\"flex col-span-1 row-span-2 justify-center py-2\">\n              Screen\n            </div>\n          </button>\n        </div>\n      </div>\n\n      <!-- recording controls -->\n      <div class=\"flex -mx-1 mb-4\" >\n        <div class=\"px-1 w-1/2 h-28\">\n          <button @click=\"startRecording\"\n            class=\"mt-2 w-full text-lg font-normal leading-tight rounded-md border border-none appearance-none bg-gray-secondary text-purple-secondary focus:outline-none focus:shadow-outline\"\n            :disabled=\"!$store.getters['teacherCreateAssignment/hasZoomMeeting'] || $store.getters['teacherCreateAssignment/hasZoomRecording']\"\n          >\n            <div class=\"flex col-span-1 row-span-1 justify-center py-4\" :class=\"{ 'text-red-500': $store.getters['teacherCreateAssignment/hasZoomRecording'] }\">\n              <icon-base-two class=\"w-12\">\n                <circle-icon class=\"w-12\"/>\n              </icon-base-two>\n            </div>\n            <div class=\"flex col-span-1 row-span-2 justify-center py-2\">\n              Rec Start\n            </div>\n          </button>\n        </div>\n        <div class=\"px-1 w-1/2 h-28\">\n          <button @click=\"stopRecording\"\n            class=\"mt-2 w-full text-lg font-normal leading-tight rounded-md border border-none appearance-none bg-gray-secondary text-purple-secondary focus:outline-none focus:shadow-outline\"\n            :disabled=\"!$store.getters['teacherCreateAssignment/hasZoomMeeting'] || !$store.getters['teacherCreateAssignment/hasZoomRecording']\"\n          >\n            <div class=\"flex col-span-1 row-span-1 justify-center py-4\">\n              <icon-base-two class=\"w-12\">\n                <stop-icon class=\"w-12\"/>\n              </icon-base-two>\n            </div>\n            <div class=\"flex col-span-1 row-span-2 justify-center py-2\">\n              Rec Stop\n            </div>\n          </button>\n        </div>\n      </div>\n\n\n      <!-- recording gallery-->\n      <div class=\"flex -mx-1 mb-4\" >\n        <p>recording gallery here</p>\n      </div>\n      <div id=\"video-preview-gallery\" class=\"flex -mx-1 mb-4\" >\n        <div v-if=\"$store.state.teacherCreateAssignment.creatingQuestionDetails.zoomMeetings\">\n          <video\n            width=\"854\" height=\"480\"\n            controls=\"\" :src=\"$store.state.teacherCreateAssignment.creatingQuestionDetails.zoomMeetings\">\n          </video>\n        </div>\n      </div>\n\n      <div class=\"flex -mx-1 mb-4\" >\n        <p>A session by {{ $store.state.authUser.fullname }} ({{ $store.state.authUser.email }}). Session topic: {{ sessionTopic }} / session pasword: {{ sessionPassword }}</p>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport IconBaseTwo from \"@/components/IconBaseTwo\";\nimport TrashIcon from \"@/components/icons/TrashIcon\";\nimport CameraIcon from \"@/components/icons/CameraIcon\";\nimport PenIcon from \"@/components/icons/PenIcon\";\nimport CropIcon from \"@/components/icons/CropIcon\";\nimport PhoneIcon from \"@/components/icons/PhoneIcon\";\nimport PlusIcon from \"@/components/icons/PlusIcon\";\nimport ArrowRightIcon from \"@/components/icons/ArrowRightIcon\";\nimport ZoomIcon from \"@/components/icons/ZoomIcon\";\nimport MicrophoneIcon from \"@/components/icons/MicrophoneIcon\";\nimport MicrophoneSlashIcon from \"@/components/icons/MicrophoneSlashIcon\";\nimport StopIcon from \"@/components/icons/StopIcon\";\nimport CircleIcon from \"@/components/icons/CircleIcon\";\nimport PersonToDoorIcon from \"@/components/icons/PersonToDoorIcon\";\nimport DisplayIcon from \"@/components/icons/DisplayIcon\";\nimport DisplaySlashIcon from \"@/components/icons/DisplaySlashIcon\";\nimport VideoIcon from \"@/components/icons/VideoIcon\";\nimport VideoSlashIcon from \"@/components/icons/VideoSlashIcon\";\nimport VueCropper from 'vue-cropperjs';\nimport 'cropperjs/dist/cropper.css';\nimport ZoomVideo from '@zoom/videosdk';\nimport KJUR from 'jsrsasign';\n\nconst genRanHex = size => [...Array(size)].map(() => Math.floor(Math.random() * 16).toString(16)).join('');\nlet stream; // zoom stream\nconst client = ZoomVideo.createClient(); // zoom client\n\nlet canvasHandler = null; // canvas / video tag to be loaded to show video cam\nlet screenHandler = null; // canvas / video tag to show screen share\nlet audioCanvas = null;\nlet audioCanvasCtx = null;\n\nlet mcstream = null; // canvas stream\nlet mc = null; // local media record to record zoom stream (theorically)\nlet mcMimeType = !!window.safari ? \"video/mp4\" : \"video/webm\";\nlet ms = null; // local media stream representing the canvas/video\nlet micTrack = null; // local media stream representing user's mic\nlet chunks = [];\nlet safariAudioDecode;\nlet safariAudioEncode;\nlet sessionTopic = genRanHex(6);\nlet sessionPassword = genRanHex(6);\n\n// final rending place\nlet canvasRenderHandle = null;\nlet canvasRenderHandleStream = null;\nlet canvasRenderHandleCtx = null; \n\n/*\n  some issues / features\n  1. picture-in-picture when starting zoom & share screen\n  2. mic feedback problem on chrome\n    - problem when starting recording\n  3. scope display when recording only sound\n  4. media recorder state, something get lost after a recording session.\n\n  // new plan: rebuilding the mediarecorder and zoom controls\n  1. mediarecorder needs streams \n  2. tie video/canvas tag to stream, record anything on that\n  3. tie mic as a new stream, record anything on that. (find if can resolve the feedback problem)\n*/\n\nexport default {\n  name: \"ZoomQuestionForm\",\n  data () {\n    return { status: 'Ready', sessionTopic, sessionPassword };\n  }, \n  async updated() { \n    // called everytime the form gets updated. wanted to do mounted, but that will only called once.\n\n    console.log('ZoomQuestionForm updated');\n    console.log(`Using Zoom VIDEO SDK version ${ZoomVideo.VERSION}`);\n\n    /*\n      plan: \n      - check if canvas is there; if not there:\n      - to add canvas(es) or video tag based on browser\n      - setup audio waveform draw fn\n      - setup composite draw fn\n      - setup media recorder to record the composite canvas / mic\n    */\n\n    // if there already there, skip checking\n    let canvasCheck = document.querySelector('#self-view-canvas');\n    let videoCheck = document.querySelector('#self-view-video');\n\n\n    // check if canvas is already there, if already there, skip the rest of the step \n    if(canvasCheck !== null || videoCheck !== null){\n      return;\n    }\n\n    // ---- SETUP THE CANVAS / MEDIA RECORDER IF IT'S NOT THERE ----\n\n    // setup the composite canvas , which will be later use for recording.\n    canvasRenderHandle = document.querySelector('#canvas-render');\n    canvasRenderHandleCtx = canvasRenderHandle.getContext('2d');\n    canvasRenderHandleStream = canvasRenderHandle.captureStream();\n\n    // add video / canvas tag based on browser and there's shared array buffer disabled\n    let theView = document.querySelector('#the-view')\n    //if(!!window.chrome && !(typeof SharedArrayBuffer === 'function')){\n    /*\n    if(navigator.userAgent.toLowerCase().indexOf('firefox') > -1){\n      // debug: trying to force firefox to use canvas\n      canvasHandler = document.createElement('canvas');\n      canvasHandler.id='self-view-canvas';\n    } else if(typeof SharedArrayBuffer === 'function'){\n    */\n    if(typeof SharedArrayBuffer === 'function'){\n      // have shared array buffer enabled\n      canvasHandler = document.createElement('canvas');\n      canvasHandler.id='self-view-canvas';\n    } else {\n      // doesn't have shared array buffer enable (like chrome)\n      canvasHandler = document.createElement('video');\n      canvasHandler.id='self-view-video';\n    }\n    canvasHandler.height='325';\n    canvasHandler.width='576';\n    canvasHandler.className='border-2 border-black h-auto h-20 w-full md:w-screen max-w-xl';\n    theView.textContent = '';\n    theView.appendChild(canvasHandler);\n\n    // add video / canvas tag for the screen share based on browser\n    let theScreen = document.querySelector('#the-screen');\n    if(!!window.chrome){\n      screenHandler = document.createElement('video');\n      screenHandler.id = 'screen-share-video';\n    } else {\n      screenHandler = document.createElement('canvas');\n      screenHandler.id = 'screen-share-canvas';\n      screenHandler.onplay = () => {\n        console.log('screen share detected');\n      }\n    }\n    screenHandler.className='border-2 border-black h-auto h-20 w-full md:w-screen max-w-xl';\n    theScreen.appendChild(screenHandler);\n\n    // test: capture everything from share screen video / canvas\n    // canvasRenderHandleStream = screenHandler.captureStream();\n\n    // capture the mic, and put it in a audioContext, so we can analyse and draw\n    // also, put the stream in the final render stream, so can record things. \n    const audioContext = new AudioContext();\n    micTrack = await navigator.mediaDevices.getUserMedia({ audio: true });\n    micTrack.getAudioTracks()[0].enabled = false;\n    canvasRenderHandleStream.addTrack(micTrack.getAudioTracks()[0]);\n\n    const source = audioContext.createMediaStreamSource(micTrack)\n    const analyser = audioContext.createAnalyser();\n    analyser.fftSize = 2048;\n\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    analyser.getByteTimeDomainData(dataArray);\n\n    // Connect the source to be analysed\n    source.connect(analyser);\n\n    // canvas to draw the sound\n    audioCanvas = document.querySelector('#the-audio');\n    audioCanvasCtx = audioCanvas.getContext('2d');\n\n    // debug, check audio Context\n    // console.log('audioContext', audioContext);\n\n    // draw the waveform\n    function draw() {\n      requestAnimationFrame(draw);\n\n      analyser.getByteTimeDomainData(dataArray);\n\n      audioCanvasCtx.fillStyle = \"rgb(200, 200, 200)\";\n      audioCanvasCtx.fillRect(0, 0, audioCanvas.width, audioCanvas.height);\n\n      audioCanvasCtx.lineWidth = 2;\n      audioCanvasCtx.strokeStyle = \"rgb(0, 0, 0)\";\n\n      audioCanvasCtx.beginPath();\n\n      const sliceWidth = (audioCanvas.width * 1.0) / bufferLength;\n      let x = 0;\n\n      for (let i = 0; i < bufferLength; i++) {\n        const v = dataArray[i] / 128.0;\n        const y = (v * audioCanvas.height) / 2;\n\n        if (i === 0) {\n          audioCanvasCtx.moveTo(x, y);\n        } else {\n          audioCanvasCtx.lineTo(x, y);\n        }\n\n        x += sliceWidth;\n      }\n\n      audioCanvasCtx.lineTo(audioCanvas.width, audioCanvas.height / 2);\n      audioCanvasCtx.stroke();\n    }\n    draw();\n\n    // draw composite based on source canvas/video\n    let drawComposite = () => {\n      //requestAnimationFrame(drawComposite);\n\n      let micOn = this.$store.state.teacherCreateAssignment.states.isMicOn;\n      let videoOn = this.$store.state.teacherCreateAssignment.states.isVideoOn;\n      let screenShareOn = this.$store.state.teacherCreateAssignment.states.isScreenShare;\n\n      // clear the picture first\n      //canvasRenderHandleCtx.clearRect(0,0, canvasRenderHandle.width, canvasRenderHandle.height);\n\n      if (videoOn && !screenShareOn) {\n        // camera on, but not screen share\n        canvasRenderHandleCtx.drawImage(canvasHandler, 0,0, \n          canvasRenderHandle.width, canvasRenderHandle.height);\n      } else if (!videoOn && screenShareOn) {\n        // camera off, but screen is shared\n        // need to figure out a way that doesn't produced clipping when recording\n        // canvasRenderHandleCtx.drawImage(screenHandler, 0,0 , canvasRenderHandle.width, canvasRenderHandle.height)\n        //canvasRenderHandleCtx.drawImage(screenHandler, 0, 0);\n        canvasRenderHandleCtx.drawImage(screenHandler, 0,0 ,\n          canvasRenderHandle.width, canvasRenderHandle.height);\n      } else if (videoOn && screenShareOn) {\n        // both video and screen share is on, do PiP\n        // canvasRenderHandleCtx.clearRect(0,0, canvasRenderHandle.width, canvasRenderHandle.height);\n        canvasRenderHandleCtx.drawImage(screenHandler, 0,0 ,\n          canvasRenderHandle.width, canvasRenderHandle.height);\n        canvasRenderHandleCtx.drawImage(canvasHandler, \n          0,0, canvasHandler.width, canvasHandler.height,\n          canvasRenderHandle.width*3/4, canvasRenderHandle.height*3/4,\n          canvasRenderHandle.width/4, canvasRenderHandle.height/4\n        );\n      } else if (micOn && !videoOn && !screenShareOn) {\n        // only the mic is on\n        canvasRenderHandleCtx.drawImage(audioCanvas, \n          0,0, canvasRenderHandle.width, canvasRenderHandle.height\n        );\n      } else {\n        // default, no input\n        canvasRenderHandleCtx.fillText(\"NO INPUT\", canvasRenderHandle.width/2, canvasRenderHandle.height/2);\n      }\n    }; \n    // drawComposite();\n    // redraw the composite canvas 60 times / second. would like to use requestAnimationFrame, \n    // but it pauses if the browser is off focus. \n    setInterval(drawComposite, 1000/60);\n\n    // start building the media recorder\n    // capture what's going on in the render canvas and the mic\n    mc = new MediaRecorder(canvasRenderHandleStream, { type: mcMimeType });\n    mc.onstart = () => {\n      // start recording\n      console.log('mc onstart');\n    }\n    mc.onstop = (e) => {\n      console.log('mc onstop');\n\n      //collect all data and dump it\n      //const blob = new Blob(chunks, {type: 'video/webm'});\n      // each browser has different idea what mimeType is supported. so safari: video/mp4, firefox & chrome: video/webm\n      const blob = new Blob(chunks, { type: mcMimeType });\n      chunks = [];\n\n      //put the blob in a video gallery\n      console.log('pushing new blob with memeType', mcMimeType );\n      var url = URL.createObjectURL(blob);\n      // console.log('url', url);\n      var videoTag = document.createElement('video');\n      videoTag.autoplay = true;\n      videoTag.controls = true;\n      videoTag.height = 480;\n      videoTag.width = 854;\n      videoTag.src = url;\n\n      //always replace what's ever in the preview gallery\n      document.querySelector('#video-preview-gallery').textContent = '';\n      document.querySelector('#video-preview-gallery').appendChild(videoTag);\n\n\n      //trigger to push video content to questionDetails.zoomMeetings\n      this.$store.dispatch('teacherCreateAssignment/handleZoomQuestion', url);\n      // URL.revokeObjectURL(url);\n\n      // for debug, video content for debugging\n      // console.log('record url dump', url);\n    }\n    mc.ondataavailable = (e) => {\n      // move data from buffer to array\n      console.log('mc ondataavailable');\n\n      //pump data in the chunks array.\n      chunks.push(e.data);\n\n      // after stop `dataavilable` event run one more time\n      if (mc.state === 'recording') {\n          mc.stop();\n      }\n      this.status = \"Recording. Pushing data to cache ...\";\n    }\n\n  },\n  methods: {\n    async createZoomMeeting(e) {\n      //happens when create a zoom meeting clicked\n\n      console.log('create a zoom meeting');\n      this.status = \"Joining meeting ...\"\n      client.init('en-US', 'CDN');\n\n      //create session\n      // 1. generate jwt\n\n      //console.log('generate jwt');\n      const iat = Math.round((new Date().getTime() - 30000) / 1000)\n      const exp = iat + 60 * 60 * 2\n\n      const oHeader = { alg: 'HS256', typ: 'JWT' }\n\n      const oPayload = {\n        app_key: process.env.VUE_APP_ZOOM_VIDEO_SDK_KEY,\n        tpc: sessionTopic,\n        version: 1,\n        role_type: 1,\n        iat: iat,\n        exp: exp,\n        pwd: sessionPassword,\n      }\n\n      const sHeader = JSON.stringify(oHeader)\n      const sPayload = JSON.stringify(oPayload)\n      const signature = KJUR.jws.JWS.sign('HS256', sHeader, sPayload, process.env.VUE_APP_ZOOM_VIDEO_SDK_SECRET);\n      //console.log('signature:', signature);\n\n      // 2. actually create the session\n      console.log('create a zoom session');\n      // await client.join('session', signature, 'erwinkarim@gmail.com', 'password').then((res) => {\n      await client.join(sessionTopic, signature, this.$store.state.authUser.email, sessionPassword).then((res) => {\n        stream = client.getMediaStream();\n        console.log('res', res);\n        this.status = `Join successful. Session ID: ${sessionTopic}, Password: ${sessionPassword}`;\n\n        /*\n        console.log('stream', stream);\n        console.log('client', client);\n        console.log('sessionInfo', client.getSessionInfo());\n        console.log('clientinfo', client.getCurrentUserInfo().userId);\n        */\n      }).catch((error) => {\n        this.status = \"Join Failed. Check if ad-blocker is active.\";\n        console.log('join failed; check connection or ad-blocks');\n        console.log(error)\n      })\n\n      // event listener to see when desktop Safari audio has been initialized\n      client.on('media-sdk-change', (payload) => {\n        if (payload.type === 'audio' && payload.result === 'success') {\n          if (payload.action === 'encode') {\n            // encode for sending audio stream (speak)\n            safariAudioEncode = true\n          } else if (payload.action === 'decode') {\n            // decode for receiving audio stream (hear)\n            safariAudioDecode = true\n          }\n        };\n\n        if(window.safari !== undefined) {\n          // desktop Safari, check if desktop Safari audio has been initialized\n          if (safariAudioEncode && safariAudioDecode) {\n            // desktop Safari audio has been initialized\n            try {\n              // try to start audio automatically in Safari\n              stream.startAudio({ autoStartAudioInSafari: true })\n            } catch (error) {\n              // starting audio automatically in Safari failed, retry or handle error\n              console.log(error)\n            }\n          } else {\n            // desktop Safari audio has not been initialized, retry or handle error\n            console.log('safari audio has not finished initializing')\n          }\n        };\n      })\n\n      console.log('join success');\n      this.$store.commit('teacherCreateAssignment/toggleIsInZoomMeeting');\n\n      // detect 'stop sharing' controlled by the browser\n      client.on('passively-stop-share', (payload) => {\n        console.log('detected screen share is off', payload);\n        this.toggleShareScreenButton();\n      });\n\n    },\n    leaveZoomMeeting(e) {\n      // switch off camera, mic, screen share and recording if they are on\n      if(this.$store.state.teacherCreateAssignment.states.isVideoOn){\n          this.toggleVideoButton();\n      }\n      if(this.$store.state.teacherCreateAssignment.states.isMicOn){\n        this.toggleMicButton();\n      }\n      if(this.$store.state.teacherCreateAssignment.states.isScreenShare){\n        this.toggleShareScreenButton();\n      }\n      if(this.$store.state.teacherCreateAssignment.states.isRecording){\n        this.stopRecording();\n      }\n\n      // leave zoom meeting\n      client.leave(true);\n\n      console.log('leave success');\n      this.status = \"Left the meeting.\";\n      this.$store.commit('teacherCreateAssignment/toggleIsInZoomMeeting');\n    },\n    async toggleVideoButton() {\n      var videoState = this.$store.state.teacherCreateAssignment.states.isVideoOn;\n\n      if (videoState){\n        // video is on, stop video\n        this.status = 'Camera turned off';\n        stream.stopVideo();\n        canvasRenderHandleCtx.clearRect(0,0, canvasRenderHandle.width, canvasRenderHandle.height);\n      } else {\n        // video is off, start video\n        this.status = 'Camera turned on';\n\n        console.log('checking SharedArrayBuffer', typeof SharedArrayBuffer);\n        if(!!window.chrome && !(typeof SharedArrayBuffer === 'function')) {\n        // if(!(typeof SharedArrayBuffer === 'function')) {\n          // if desktop Chrome or Edge (Chromium) with SharedArrayBuffer not enabled\n          console.log('site is chrome and w/o SharedArrayBuffer');\n          console.log('trying to put video on ', canvasHandler);\n\n          stream.startVideo({ videoElement: canvasHandler });\n\n        } else {\n          // all other browsers and desktop Chrome or Edge (Chromium) with SharedArrayBuffer enabled\n\n          console.log('other browsers or chrome w/ SharedArrayBuffer')\n          console.log('trying to put video on ', canvasHandler);\n\n          /*\n          stream.startVideo(() => {\n            stream.renderVideo(canvasHandler, client.getCurrentUserInfo().userId, 300, 200, 0, 0, 3);\n          })\n          */\n         stream.startVideo().then(() => {\n          stream.renderVideo(canvasHandler, client.getCurrentUserInfo().userId,\n            canvasHandler.width, canvasHandler.height, 0, 0, 3\n          ).then(() => {\n            console.log('succesfully rendered video');\n          }).catch((e) => {\n            console.log('error render video', e);\n          });\n         })\n        }\n\n        canvasRenderHandle.width = canvasHandler.width;\n        canvasRenderHandle.height = canvasHandler.height;\n      }\n      this.$store.commit('teacherCreateAssignment/toggleVideo');\n    },\n    async toggleShareScreenButton(e) {\n      /*\n        have to figure out how to do PiP when starting both video and share screen.\n        - see if i can use renderVideo fn to do this.\n      */\n      console.log('toggle share screen button pressed');\n\n      var screenShareState = this.$store.state.teacherCreateAssignment.states.isScreenShare;\n\n      if (screenShareState) {\n        console.log('turning screen share off');\n        // screen share is on, toggle off\n        stream.stopShareScreen();\n        canvasRenderHandleCtx.clearRect(0,0, canvasRenderHandle.width, canvasRenderHandle.height);\n        this.status = 'Screen share turned off';\n      } else {\n        // screen share is off, toggle on\n        console.log('starting screen share on', screenHandler);\n        stream.startShareScreen(screenHandler).then(() => {\n          console.log(`setting the render screen to ${screenHandler.width} x ${screenHandler.height}`)\n          if(screenHandler.width == 0) {\n            canvasRenderHandle.width=1024;\n            canvasRenderHandle.height=800;\n\n          } else {\n            canvasRenderHandle.width = screenHandler.width;\n            canvasRenderHandle.height = screenHandler.height;\n          }\n        }).catch((e) => {\n          console.log('error sharing screen', e);\n        });\n        this.status = 'Screen share turned on';\n\n      }\n\n      // update the toggle state\n      this.$store.commit('teacherCreateAssignment/toggleShareScreen');\n\n    },\n    async toggleMicButton(e){\n      console.log('toggle the mic');\n\n      var micState = this.$store.state.teacherCreateAssignment.states.isMicOn;\n\n      if (micState) {\n        // mic is on, turn it off\n        stream.stopAudio();\n        micTrack.getAudioTracks()[0].enabled = false;\n        canvasRenderHandleCtx.clearRect(0,0, canvasRenderHandle.width, canvasRenderHandle.height);\n        this.status = 'Microphone is turned off';\n      } else {\n        // mic is off, turn it on\n        stream.startAudio();\n        micTrack.getAudioTracks()[0].enabled = true;\n        this.status = 'Microphone is turned on';\n      }\n\n      // toggle the mic state\n      this.$store.commit('teacherCreateAssignment/toggleMic');\n    },\n    async startRecording(){\n      console.log('start record');\n\n      mc.start();\n\n      this.$store.commit('teacherCreateAssignment/toggleRecording');\n      this.status = 'Recording started';\n    },\n    stopRecording(){\n      console.log('stop record');\n\n      mc.stop();\n\n      this.$store.commit('teacherCreateAssignment/toggleRecording');\n      this.status = 'Recording stopped';\n    },\n  },\n  components: {\n    CropIcon, PenIcon, CameraIcon, TrashIcon, IconBaseTwo,\n    VueCropper, PhoneIcon, PlusIcon, ArrowRightIcon, ZoomIcon,\n    MicrophoneIcon, MicrophoneSlashIcon, StopIcon, CircleIcon, PersonToDoorIcon, \n    DisplayIcon, DisplaySlashIcon, VideoIcon, VideoSlashIcon,\n  },\n\n};\n\n</script>\n\n<style scoped>\n\n</style>\n"]}]}