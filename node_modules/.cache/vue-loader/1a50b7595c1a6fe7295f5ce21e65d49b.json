{"remainingRequest":"/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/src/components/SelectSubject.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/src/components/SelectSubject.vue","mtime":1679379067236},{"path":"/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/node_modules/cache-loader/dist/cjs.js","mtime":1680070113546},{"path":"/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/node_modules/babel-loader/lib/index.js","mtime":1680059914906},{"path":"/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/node_modules/cache-loader/dist/cjs.js","mtime":1680070113546},{"path":"/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/node_modules/vue-loader/lib/index.js","mtime":1680070113705}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBUZWFjaGVyUmVwb3NpdG9yeSBmcm9tICJAL3JlcG9zaXRvcmllcy9UZWFjaGVyUmVwb3NpdG9yeSI7CmltcG9ydCBTdHVkZW50UmVwb3NpdG9yeSBmcm9tICJAL3JlcG9zaXRvcmllcy9TdHVkZW50UmVwb3NpdG9yeSI7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlNlbGVjdFN1YmplY3QiLAogIHByb3BzOiB7CiAgICB1c2VyUm9sZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6IG51bGwKICAgIH0KICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzdWJqZWN0czogW10sCiAgICAgIHNlbGVjdGVkU3ViamVjdDogJycsCiAgICB9CiAgfSwKICB3YXRjaDogewogICAgJ3NlbGVjdGVkU3ViamVjdCc6ICdlbWl0U2VsZWN0ZWRTdWJqZWN0JwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0U3ViamVjdHMoKSB7CiAgICAgIGlmICh0aGlzLnVzZXJSb2xlID09PSAndGVhY2hlcicpIHsKICAgICAgICBUZWFjaGVyUmVwb3NpdG9yeS5nZXRUZWFjaGVyU3ViamVjdHMoKQogICAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7CgogICAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhLnN1Y2Nlc3MpIHsKICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSByZXNwb25zZS5kYXRhLmRhdGEKCiAgICAgICAgICAgICAgICBjb25zdCBudW1PZlN1YmplY3RzID0gZGF0YS5sZW5ndGgKCiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG51bU9mU3ViamVjdHM7IGkrKykgewoKICAgICAgICAgICAgICAgICAgbGV0IGl0ZW0gPSBkYXRhW2ldOwoKICAgICAgICAgICAgICAgICAgbGV0IHN1YmplY3REZXRhaWwgPSB7CiAgICAgICAgICAgICAgICAgICAgaWQ6IGl0ZW0uc3ViamVjdF9pZCwKICAgICAgICAgICAgICAgICAgICBuYW1lOiBpdGVtLnN1YmplY3RfbmFtZQogICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICB0aGlzLnN1YmplY3RzLnB1c2goc3ViamVjdERldGFpbCkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgIH0KCiAgICAgIGlmICh0aGlzLnVzZXJSb2xlID09PSAnc3R1ZGVudCcpIHsKICAgICAgICBTdHVkZW50UmVwb3NpdG9yeS5nZXRTdWJqZWN0cygpCiAgICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHsKCiAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEuc3VjY2VzcykgewogICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IHJlc3BvbnNlLmRhdGEuZGF0YQoKICAgICAgICAgICAgICAgIGNvbnN0IG51bU9mU3ViamVjdHMgPSBkYXRhLmxlbmd0aAoKICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbnVtT2ZTdWJqZWN0czsgaSsrKSB7CgogICAgICAgICAgICAgICAgICBsZXQgaXRlbSA9IGRhdGFbaV07CgogICAgICAgICAgICAgICAgICBsZXQgc3ViamVjdERldGFpbCA9IHsKICAgICAgICAgICAgICAgICAgICBpZDogaXRlbS5zdWJqZWN0X2lkLAogICAgICAgICAgICAgICAgICAgIG5hbWU6IGl0ZW0uc3ViamVjdF9uYW1lCiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIHRoaXMuc3ViamVjdHMucHVzaChzdWJqZWN0RGV0YWlsKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKICAgICAgfQogICAgfSwKCiAgICBlbWl0U2VsZWN0ZWRTdWJqZWN0KCkgewogICAgICB0aGlzLiRlbWl0KCdzZWxlY3RlZFN1YmplY3QnLCB0aGlzLnNlbGVjdGVkU3ViamVjdCkKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldFN1YmplY3RzKCkKICB9Cn0K"},{"version":3,"sources":["SelectSubject.vue"],"names":[],"mappings":";AASA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SelectSubject.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <select v-model=\"selectedSubject\"\n          class=\"pl-6 pr-2 py-5 mt-2  appearance-none border rounded-md border-none w-full bg-gray-secondary text-purple-secondary text-lg font-normal leading-tight focus:outline-none focus:shadow-outline placeholder-purple-secondary\">\n    <option disabled value=\"\">Select subject</option>\n    <option v-for=\"subject in subjects\" :value=\"subject.id\">{{ subject.name }}</option>\n  </select>\n</template>\n\n<script>\nimport TeacherRepository from \"@/repositories/TeacherRepository\";\nimport StudentRepository from \"@/repositories/StudentRepository\";\n\nexport default {\n  name: \"SelectSubject\",\n  props: {\n    userRole: {\n      type: String,\n      default: null\n    }\n  },\n  data() {\n    return {\n      subjects: [],\n      selectedSubject: '',\n    }\n  },\n  watch: {\n    'selectedSubject': 'emitSelectedSubject'\n  },\n  methods: {\n    getSubjects() {\n      if (this.userRole === 'teacher') {\n        TeacherRepository.getTeacherSubjects()\n            .then(response => {\n\n              if (response.data.success) {\n                const data = response.data.data\n\n                const numOfSubjects = data.length\n\n                for (let i = 0; i < numOfSubjects; i++) {\n\n                  let item = data[i];\n\n                  let subjectDetail = {\n                    id: item.subject_id,\n                    name: item.subject_name\n                  }\n\n                  this.subjects.push(subjectDetail)\n                }\n              }\n            })\n      }\n\n      if (this.userRole === 'student') {\n        StudentRepository.getSubjects()\n            .then(response => {\n\n              if (response.data.success) {\n                const data = response.data.data\n\n                const numOfSubjects = data.length\n\n                for (let i = 0; i < numOfSubjects; i++) {\n\n                  let item = data[i];\n\n                  let subjectDetail = {\n                    id: item.subject_id,\n                    name: item.subject_name\n                  }\n\n                  this.subjects.push(subjectDetail)\n                }\n              }\n            })\n      }\n    },\n\n    emitSelectedSubject() {\n      this.$emit('selectedSubject', this.selectedSubject)\n    }\n  },\n  mounted() {\n    this.getSubjects()\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}