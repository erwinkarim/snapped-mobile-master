{"remainingRequest":"/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/src/views/students/StudentAssignments/Answer/AnswerEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/src/views/students/StudentAssignments/Answer/AnswerEdit.vue","mtime":1679379067245},{"path":"/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/node_modules/cache-loader/dist/cjs.js","mtime":1680070113546},{"path":"/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/node_modules/babel-loader/lib/index.js","mtime":1680059914906},{"path":"/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/node_modules/cache-loader/dist/cjs.js","mtime":1680070113546},{"path":"/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/node_modules/vue-loader/lib/index.js","mtime":1680070113705}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["AnswerEdit.vue"],"names":[],"mappings":";AA+OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AnswerEdit.vue","sourceRoot":"src/views/students/StudentAssignments/Answer","sourcesContent":["<template>\n\n  <dashboard-layout :content-fills-screen=\"isEditingWrittenAnswer || isPreviewingSnappedAnswer\"\n                    :has-custom-bottom-bar=\"isMainPage\"\n                    :no-bottom-bar=\"isEditingWrittenAnswer || isPreviewingSnappedAnswer\"\n  >\n\n\n    <template v-slot:pageHeader>\n      <page-header-three>\n\n        <template v-slot:leftAction>\n          <nav-back v-if=\"isMainPage\" type=\"cancel\"\n                    :to=\"{name: 'student.assignments.show'}\"\n                    class=\"w-2/3 text-left\" stroke-color=\"red-primary\"/>\n\n          <div @click=\"toggleEditingMode\" v-if=\"isEditingWrittenAnswer\" class=\"pl-3\">\n            <icon-base-two class=\"w-2/7\">\n              <arrow-back-icon/>\n            </icon-base-two>\n          </div>\n\n          <div @click=\"toggleSnappedAnswerPreview\" v-if=\"isPreviewingSnappedAnswer\">\n            <icon-base-two class=\"w-2/7 ml-3\">\n              <arrow-back-icon/>\n            </icon-base-two>\n          </div>\n        </template>\n\n        <template v-slot:mini-title>\n          <div class=\"truncate\">\n            {{ pageTitle }}\n          </div>\n        </template>\n\n        <template v-if=\"isEditingWrittenAnswer\" v-slot:rightAction>\n          <div @click=\"compileWrittenAnswer\"\n               :class=\"newAnswer.length > 0 ? 'text-red-primary' : 'text-gray-primary'\"\n               class=\"font-bold\"\n          >\n            Save\n          </div>\n        </template>\n\n      </page-header-three>\n    </template>\n\n    <template v-slot:content v-if=\"isMainPage\">\n\n\n      <!-- OVERLAYS -->\n      <div v-if=\"isShowingModal\" @click=\"toggleModal\"\n           class=\"fixed w-full h-screen z-70 flex flex-col justify-center items-center inset-x-0 block top-0 bg-gray-primary bg-opacity-75 \">\n      </div>\n\n      <!-- MODAL -->\n      <div v-if=\"isShowingModal\"\n           class=\"fixed left-0 w-full items-center flex flex-col items-center justify-center top-1/4 z-70\">\n        <modal class=\"w-4/5 \"\n               :modal-type=\"submissionStatus\"\n               :redirect-route=\"{name: 'student.assignments.show'}\"\n               @toggleModal=\"toggleModal\"\n        >\n          <template slot=\"message\">\n            <div v-if=\"submissionStatus === 'success'\" class=\"w-full\">\n              Got something to change? Don't worry! You can always edit your published homework\n            </div>\n            <div v-if=\"submissionStatus === 'error'\" class=\"w-full\">\n              Oops! There seems to be an error in your submission.\n            </div>\n          </template>\n          <template slot=\"button\">\n            Okay\n          </template>\n        </modal>\n\n        <modal v-if=\"errors\"\n               modal-type=\"error\"\n               class=\"w-4/5 \"\n               @toggleModal=\"toggleModal\"\n        >\n          <template slot=\"message\">\n            <div>\n              {{ errors }}\n            </div>\n          </template>\n          <template slot=\"button\">\n            Okay\n          </template>\n        </modal>\n      </div>\n\n\n      <div class=\"relative pt-7/24 px-6 h-full w-full text-left text-purple-primary\">\n\n        <!-- SUBMISSION DETAIL -->\n        <div>\n          <div>\n            Your answer will be submitted to\n          </div>\n          <div class=\"font-bold mt-1 truncate\">\n            {{ assignmentDetails ? assignmentDetails.title : '' }}\n          </div>\n        </div>\n\n        <!-- VIEW EXISTING ANSWERS -->\n        <div class=\"mt-10\" v-if=\"isSnappedAnswer && existingSnappedAnswers.length\">\n          <div class=\"mb-4\">\n            Current Answers\n          </div>\n          <div v-for=\"(image,key) in existingSnappedAnswers\"\n               class=\"flex flex-col py-5 px-5 mt-2 mb-2 w-full text-lg font-normal leading-tight rounded-md border border-none appearance-none bg-gray-secondary text-purple-secondary focus:outline-none focus:shadow-outline placeholder-purple-secondary\"\n          >\n            <div class=\"mt-5 w-full\">\n              <img :src=\"image.path\"/>\n            </div>\n\n            <div class=\"flex flex-row items-center mt-2 md:mt-4 \">\n              <button @click=\"removeSnappedAnswer(key, 'existing')\"\n                      class=\"flex flex-row items-center w-full py-3 md:py-5 mr-1 rounded-lg bg-red-primary focus:outline-none\">\n                <div class=\"text-white text-sm md:text-lg w-3/4\">\n                  Remove\n                </div>\n                <div class=\"w-1/4\">\n                  <font-awesome-icon class=\"w-full fa-1x text-white\" :icon=\"icons.trash\"/>\n                </div>\n              </button>\n            </div>\n          </div>\n        </div>\n\n\n        <!-- VIEW NEW ANSWERS -->\n        <div class=\"mt-10\" v-if=\"isSnappedAnswer\">\n          <div class=\"mb-4\">\n            New Answers\n          </div>\n\n          <div v-for=\"(image,key) in snappedAnswerPreviews\"\n               class=\"flex flex-col py-5 px-5 mt-2 mb-2 w-full text-lg font-normal leading-tight rounded-md border border-none appearance-none bg-gray-secondary text-purple-secondary focus:outline-none focus:shadow-outline placeholder-purple-secondary\"\n          >\n\n            <div class=\"mt-5 w-full\">\n\n              <vue-cropper :ref=\"`cropper_${key}`\"\n                           :src=\"image.source\"\n                           alt=\"Source Image\"\n                           @ready=\"handleVueCropperReady\"\n              >\n              </vue-cropper>\n\n              <div v-if=\"image.cropping\" class=\"flex flex-row items-center mt-4 md:mt-4 \">\n                <button @click=\"toggleSnappedCroppingStatus(key)\"\n                        class=\"flex flex-row items-center w-1/2  py-3 md:py-5 mr-1 rounded-lg bg-red-primary focus:outline-none\">\n                  <div class=\"text-white text-sm md:text-lg w-full\">\n                    Cancel\n                  </div>\n                </button>\n                <button @click=\"saveCroppedSnappedAnswer(key)\"\n                        class=\"flex flex-row items-center  py-3  md:py-5 w-1/2 ml-1 rounded-lg bg-green-400 focus:outline-none\">\n                  <div class=\"text-white text-sm md:text-lg w-3/4\">\n                    Done\n                  </div>\n                  <div class=\"w-1/4\">\n                    <font-awesome-icon class=\"w-full fa-1x text-white\" :icon=\"icons.crop\"/>\n                  </div>\n                </button>\n              </div>\n\n              <div v-else class=\"flex flex-row items-center mt-2 md:mt-4 \">\n                <button @click=\"removeSnappedAnswer(key, 'new')\"\n                        class=\"flex flex-row items-center w-1/2  py-3 md:py-5 mr-1 rounded-lg bg-red-primary focus:outline-none\">\n                  <div class=\"text-white text-sm md:text-lg w-3/4\">\n                    Remove\n                  </div>\n                  <div class=\"w-1/4\">\n                    <font-awesome-icon class=\"w-full fa-1x text-white\" :icon=\"icons.trash\"/>\n                  </div>\n                </button>\n                <button @click=\"toggleSnappedCroppingStatus(key)\"\n                        class=\"flex flex-row items-center  py-3  md:py-5 w-1/2 ml-1 rounded-lg bg-purple-primary focus:outline-none\">\n                  <div class=\"text-white text-sm md:text-lg w-3/4\">\n                    Crop\n                  </div>\n                  <div class=\"w-1/4\">\n                    <font-awesome-icon class=\"w-full fa-1x text-white\" :icon=\"icons.crop\"/>\n                  </div>\n                </button>\n              </div>\n            </div>\n\n          </div>\n\n          <!-- ADD MORE PHOTO -->\n          <div class=\"flex mb-4 -mx-1\">\n            <label\n                class=\"text-center pl-6 pr-2 py-5 mt-2  appearance-none border rounded-md border-none w-full text-lg font-normal leading-tight focus:outline-none focus:shadow-outline text-red-primary\">\n              + Add more photo\n              <input class=\"hidden\" type=\"file\" accept=\"image/*\" multiple @change=\"onFileSelected\">\n            </label>\n          </div>\n\n        </div>\n\n        <div class=\"mt-6\">\n          <div>\n            Your remarks\n          </div>\n          <div class=\"mt-4 h-36 \">\n                    <textarea v-model=\"remarks\"\n                              class=\"resize-y text-purple-primary py-4 px-5 h-full w-full bg-gray-secondary rounded focus:outline-none placeholder-purple-secondary\"\n                              placeholder=\"Remarks\"></textarea>\n          </div>\n        </div>\n\n      </div>\n    </template>\n\n    <template v-if=\"isEditingWrittenAnswer\" slot=\"content\">\n      <div class=\" pt-32 px-6 h-full\">\n        <textarea v-model=\"newAnswer\"\n                  class=\"resize-y text-purple-primary  w-full h-full  rounded focus:outline-none\"\n        />\n      </div>\n    </template>\n\n    <template v-slot:bottomBar v-if=\"isMainPage\">\n      <div class=\"w-full md:max-w-xl px-2\">\n        <button @click=\"submit\"\n                class=\"w-full font-bold rounded-full bg-yellow-primary text-purple-primary text-sm  py-4 px-1 flex flex-row justify-center\">\n          Submit Answer\n        </button>\n      </div>\n    </template>\n  </dashboard-layout>\n\n</template>\n\n<script>\nimport DashboardLayout from \"@/views/layout/DashboardLayout\";\nimport PageHeaderThree from \"@/components/PageHeaderThree\";\nimport NavBack from \"@/components/NavBack\";\nimport IconBaseTwo from \"@/components/IconBaseTwo\";\nimport TrashIcon from \"@/components/icons/TrashIcon\";\nimport SubmissionRepository from \"@/repositories/SubmissionRepository\";\nimport ArrowBackIcon from \"@/components/icons/ArrowBackIcon\";\nimport Modal from \"@/components/Modal\";\n\n// Vue Cropper\nimport VueCropper from 'vue-cropperjs';\nimport 'cropperjs/dist/cropper.css';\n\n// FONT AWESOME\nimport {FontAwesomeIcon} from '@fortawesome/vue-fontawesome'\nimport {faTrash, faCropAlt} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default {\n  name: \"AnswerEdit\",\n  props: {\n    submissionID: [String, Number]\n  },\n  data() {\n    return {\n\n      // States\n      isMainPage: true,\n      isEditingWrittenAnswer: false,\n      isPreviewingSnappedAnswer: false,\n      isShowingModal: false,\n      submissionStatus: null,\n\n      backendStoragePath: `${process.env.VUE_APP_BACKEND_STORAGE}/submissions/`,\n\n      snappedAnswers: [],\n      snappedAnswerPreviews: [],\n\n      isPreviewingPath: null,\n\n      // Existing snapped answers\n      existingSnappedAnswers: [],\n      removedSnappedAnswers: [],\n      addedSnappedAnswers: [],\n\n      // Compiled answer\n      answer: {\n        type: null,\n        content: null\n      },\n\n      assignmentDetails: {\n        id: null,\n        title: null\n      },\n\n      newAnswer: [],\n      remarks: null,\n\n      // Icons\n      icons: {\n        crop: faCropAlt,\n        trash: faTrash\n      },\n\n      // Catch error\n      errors: null\n    }\n  },\n  computed: {\n    hasAnswer() {\n      return this.answer.type !== null && this.answer.content !== '';\n    },\n    isWrittenAnswer() {\n      return this.answer.type === 'written';\n    },\n    isSnappedAnswer() {\n      return this.answer.type === 'snapped';\n    },\n    pageTitle() {\n      if (this.isMainPage) return 'Answer';\n      if (this.isEditingWrittenAnswer) return 'Edit Answer'\n    },\n  },\n  methods: {\n\n    handleLoadedExistingAnswers(key) {\n\n      let answerKey = `answer_${key}`;\n      let image = this.$refs[answerKey];\n\n      this.$refs[`cropper_${key}`].replace(image)\n    },\n\n    fetchData() {\n\n      SubmissionRepository.find(this.submissionID)\n          .then(response => {\n\n            if (response.data.success) {\n\n              const data = response.data.data;\n\n              // Assignment details\n              this.assignmentDetails.id = data.assignment_id;\n              this.assignmentDetails.title = data.assignment_title;\n\n              // Processing existing Snapped Answer\n              if (data.snap_answer) {\n                this.answer.type = 'snapped';\n\n                let existingAnswerFileNames = data.snap_answer.split(',');\n                let existingAnswerFilePaths = data.snap_answer_url.split(',');\n\n                for (let i = 0; i < existingAnswerFileNames.length; i++) {\n                  this.existingSnappedAnswers.push({\n                    name: existingAnswerFileNames[i],\n                    path: existingAnswerFilePaths[i]\n                  })\n                }\n\n              }\n\n              if (data.written_answer) {\n                this.answer.type = 'written';\n                this.answer.content = data.written_answer;\n              }\n\n              this.remarks = data.remarks;\n            }\n\n          })\n    },\n\n    handleVueCropperReady(e) {\n      let cropper = e.target.cropper;\n\n      cropper.autoCrop = false;\n\n      cropper.clear();\n      cropper.disable();\n\n      // If this is new photo uploaded, add image to snapped answers array\n      if (!cropper.replaced) {\n\n        cropper.getCroppedCanvas({\n          maxWidth: 720,\n          maxHeight: 720,\n          fillColor: '#fff'\n        }).toBlob((blob) => {\n          this.addedSnappedAnswers.push(blob)\n        }, 'image/jpeg');\n      }\n    },\n\n    toggleSnappedCroppingStatus(key) {\n      this.snappedAnswerPreviews[key].cropping = !this.snappedAnswerPreviews[key].cropping;\n\n      let cropperKey = `cropper_${key}`\n      let cropper = this.$refs[cropperKey][0];\n\n      // If cropping, enable\n      if (this.snappedAnswerPreviews[key].cropping) {\n        cropper.enable();\n        // cropper.crop();\n      } else {\n        cropper.clear();\n        cropper.disable();\n      }\n    },\n\n    saveCroppedSnappedAnswer(key) {\n      let cropperKey = `cropper_${key}`\n\n      let cropper = this.$refs[cropperKey][0];\n\n      let cropped = cropper.getCroppedCanvas({\n        maxWidth: 720,\n        maxHeight: 720,\n        fillColor: '#fff'\n      });\n\n      let dataURL = cropped.toDataURL(\"image/jpeg\");\n      cropper.replace(dataURL);\n      this.snappedAnswerPreviews[key].source = dataURL;\n\n      cropped.toBlob((blob) => {\n        this.addedSnappedAnswers[key] = blob;\n      }, 'image/jpeg');\n\n      this.toggleSnappedCroppingStatus(key)\n\n    },\n\n    submit() {\n\n      // Compile Snapped Answers, to remove and newly added.\n      let data = {\n        toRemove: this.removedSnappedAnswers,\n        toAdd: this.addedSnappedAnswers\n      }\n\n      SubmissionRepository.update(\n          {\n            submissionID: this.submissionID,\n            assignmentID: this.assignmentDetails.id,\n            answerType: this.answer.type,\n            answerContent: data,\n            remarks: this.remarks,\n          })\n          .then(response => {\n            if (response.data.success) {\n              this.submissionStatus = 'success';\n              this.toggleModal();\n            } else {\n              this.submissionStatus = 'error';\n              this.toggleModal()\n            }\n          })\n          .catch(error => {\n                this.errors = error\n              }\n          )\n    },\n\n    editWrittenAnswer() {\n      this.toggleEditingMode();\n      this.newAnswer = this.answer.content;\n    },\n\n    compileWrittenAnswer() {\n      if (this.newAnswer.length > 0) {\n        this.answer.content = this.newAnswer;\n        this.toggleEditingMode();\n      }\n    },\n\n    handleSnappedAnswerPreview(index, type) {\n\n      this.isPreviewingPath = this.snappedAnswerPreviews[type][index];\n      this.toggleSnappedAnswerPreview();\n    },\n\n    onFileSelected(e) {\n\n      let files = e.target.files || e.dataTransfer.files\n\n      if (!files.length) {\n        return\n      }\n\n      if (files[0].type.match(\"image.*\")) {\n        this.generateSnappedAnswerPreview(files)\n      }\n\n      e.target.value = ''\n    },\n\n    generateSnappedAnswerPreview(files) {\n      files.forEach(f => {\n\n        if (!f.type.match(\"image.*\")) {\n          return;\n        }\n\n        let reader = new FileReader();\n        let that = this;\n\n        reader.onload = function (e) {\n\n          that.snappedAnswerPreviews.push({\n            source: e.target.result,\n            cropping: false\n          });\n        }\n\n        reader.readAsDataURL(f);\n      });\n    },\n\n    removeSnappedAnswer(index, type) {\n\n      if (type === 'existing') {\n        this.removedSnappedAnswers.push(this.existingSnappedAnswers[index].name)\n        this.existingSnappedAnswers.splice(index, 1);\n      }\n\n      if (type === 'new') {\n\n        let cropperKey = `cropper_${index}`\n\n        let cropper = this.$refs[cropperKey][0];\n        cropper.destroy();\n\n\n        this.addedSnappedAnswers.splice(index, 1);\n        this.snappedAnswerPreviews.splice(index, 1);\n      }\n\n    },\n\n    toggleSnappedAnswerPreview() {\n\n      if (this.isPreviewingSnappedAnswer) {\n        this.isMainPage = true;\n        this.isEditingWrittenAnswer = false;\n        this.isPreviewingSnappedAnswer = false;\n      } else {\n        this.isMainPage = false;\n        this.isEditingWrittenAnswer = false;\n        this.isPreviewingSnappedAnswer = true;\n      }\n    },\n\n    toggleEditingMode() {\n\n      if (this.isEditingWrittenAnswer) {\n        this.isMainPage = true;\n        this.isEditingWrittenAnswer = false;\n        this.isPreviewingSnappedAnswer = false;\n      } else {\n        this.isMainPage = false;\n        this.isEditingWrittenAnswer = true;\n        this.isPreviewingSnappedAnswer = false;\n      }\n\n    },\n\n    toggleModal() {\n      this.isShowingModal = !this.isShowingModal;\n    }\n  },\n  mounted() {\n    this.fetchData();\n  },\n  components: {\n    Modal, ArrowBackIcon, TrashIcon, IconBaseTwo, NavBack, PageHeaderThree, DashboardLayout,\n    VueCropper,\n    FontAwesomeIcon\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}