{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from 'vue';\nimport DashboardLayout from \"@/views/layout/DashboardLayout\";\nimport PageTitle from \"@/components/PageTitle\";\nimport IconBaseTwo from \"@/components/IconBaseTwo\";\nimport FilterIcon from \"@/components/icons/FilterIcon\";\nimport SectionTitle from \"@/components/SectionTitle\";\nimport AssignmentCalendar from \"@/components/AssignmentCalendar\";\nimport InfiniteLoading from \"vue-infinite-loading\";\nimport moment from \"moment\";\nimport SelectMonth from \"@/components/SelectMonth\";\nimport SelectYear from \"@/components/SelectYear\";\nimport SelectSubject from \"@/components/SelectSubject\";\nimport AssignmentCard from \"@/components/AssignmentCard\";\nimport AssignmentRepository from \"@/repositories/AssignmentRepository\";\nexport default {\n  name: \"TeacherAssignments\",\n  data() {\n    return {\n      // States\n      hasError: false,\n      modal: false,\n      filterCount: 0,\n      filters: {\n        pageNum: 1,\n        perPage: 50,\n        search: '',\n        date: null,\n        month: null,\n        year: null,\n        subjects: null\n      },\n      assignments: [],\n      meta: null\n    };\n  },\n  watch: {\n    'filters.date': function (newSelect) {\n      if (newSelect != null) {\n        this.updateFilter();\n      }\n    }\n  },\n  computed: {\n    selectedDate() {\n      if (this.filters.date) {\n        return moment(this.filters.date).format('DD MMMM YYYY');\n      }\n    },\n    requestFilter() {\n      return {\n        pageNum: this.filters.pageNum,\n        perPage: this.filters.perPage,\n        is_active: false,\n        date: this.filters.date,\n        month: this.filters.month,\n        year: this.filters.year,\n        subjects: this.filters.subjects !== undefined ? this.filters.subjects : null\n      };\n    },\n    hasLoadMore() {\n      if (this.meta) {\n        return this.filters.pageNum <= this.meta.last_page;\n      } else {\n        return true;\n      }\n    }\n  },\n  methods: {\n    handleInfiniteScroll($state) {\n      if (this.hasLoadMore) {\n        AssignmentRepository.all(this.requestFilter).then(response => {\n          if (response.data.success) {\n            const data = response.data.data;\n            for (let i = 0; i < data.length; i++) {\n              let item = data[i];\n              let assignmentDetail = {\n                assignmentID: item.assignment_id,\n                subjectName: item.subject_name,\n                classroomName: item.classroom_name,\n                title: item.title,\n                description: item.written_description,\n                dueDatetime: item.due_datetime,\n                totalSubmitted: item.number_of_submissions,\n                totalMarked: item.num_of_marked_submissions,\n                school_name: item.school_name\n              };\n              if (item.marks_id) {\n                assignmentDetail['marks'] = {\n                  id: item.marks_id,\n                  value: item.marks\n                };\n              }\n              this.assignments.push(assignmentDetail);\n              this.hasError = false;\n            }\n\n            // Update meta details and pageNum for filters\n            this.meta = response.data.meta;\n            this.filters.pageNum = this.meta.current_page + 1;\n            $state.loaded();\n          } else {\n            this.hasError = response.data.message;\n            $state.complete();\n          }\n        });\n        this.resetFilterModalOptions();\n      } else {\n        $state.complete();\n      }\n    },\n    handleSelectedDate(date) {\n      this.filters.date = date;\n    },\n    handleSelectedMonth(month) {\n      this.filters.month = month;\n      this.filters.date = null;\n    },\n    handleSelectedYear(year) {\n      this.filters.year = year;\n      this.filters.date = null;\n    },\n    handleSelectedSubject(subject) {\n      this.filters.subjects = [subject];\n      this.filters.date = null;\n    },\n    clickedFilterButton() {\n      this.toggleFilterModal();\n      this.updateFilter();\n    },\n    toggleFilterModal() {\n      this.modal = !this.modal;\n    },\n    resetFilterModalOptions() {\n      this.filters.month = null;\n      this.filters.year = null;\n      this.filters.subjects = null;\n    },\n    updateFilter() {\n      this.filters.pageNum = 1;\n      this.filters.perPage = 50;\n      this.assignments = [];\n      this.filterCount++;\n    }\n  },\n  components: {\n    AssignmentCard,\n    SelectSubject,\n    SelectYear,\n    SelectMonth,\n    AssignmentCalendar,\n    SectionTitle,\n    FilterIcon,\n    IconBaseTwo,\n    PageTitle,\n    DashboardLayout,\n    InfiniteLoading\n  }\n};","map":{"version":3,"names":["Vue","DashboardLayout","PageTitle","IconBaseTwo","FilterIcon","SectionTitle","AssignmentCalendar","InfiniteLoading","moment","SelectMonth","SelectYear","SelectSubject","AssignmentCard","AssignmentRepository","name","data","hasError","modal","filterCount","filters","pageNum","perPage","search","date","month","year","subjects","assignments","meta","watch","filters.date","newSelect","updateFilter","computed","selectedDate","format","requestFilter","is_active","undefined","hasLoadMore","last_page","methods","handleInfiniteScroll","$state","all","then","response","success","i","length","item","assignmentDetail","assignmentID","assignment_id","subjectName","subject_name","classroomName","classroom_name","title","description","written_description","dueDatetime","due_datetime","totalSubmitted","number_of_submissions","totalMarked","num_of_marked_submissions","school_name","marks_id","id","value","marks","push","current_page","loaded","message","complete","resetFilterModalOptions","handleSelectedDate","handleSelectedMonth","handleSelectedYear","handleSelectedSubject","subject","clickedFilterButton","toggleFilterModal","components"],"sources":["/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/src/views/teachers/TeacherAssignments/Index/TeacherAssignments.vue"],"sourcesContent":["<template>\n  <dashboard-layout :has-custom-bottom-bar=\"modal\">\n\n    <template v-slot:pageHeader>\n      <page-title title=\"Assignments\">\n        <template v-slot:rightAction>\n          <router-link :to=\"{name : 'teacher.assignments.create'}\"\n                       class=\"flex flex-row justify-end items-center font-bold text-red-primary text-right\"\n          >\n            Add New\n          </router-link>\n        </template>\n\n      </page-title>\n    </template>\n\n    <template v-slot:content>\n      <div class=\"px-5 w-full\">\n        <!-- Section Title -->\n        <div class=\"flex flex-row justify-between items-center mt-8\">\n          <section-title title=\"Due Dates\"/>\n          <div class=\"w-1/12\">\n            <button @click=\"modal = !modal\">\n              <icon-base-two stroke-color=\"purple-primary\">\n                <filter-icon/>\n              </icon-base-two>\n            </button>\n          </div>\n        </div>\n\n        <!-- SECTION: CALENDAR -->\n        <div class=\"bg-white border-2 border-purple-primary border-opacity-10 mt-6 rounded-xl\">\n          <assignment-calendar @selectedDate=\"handleSelectedDate\"/>\n        </div>\n\n        <!-- SECTION: ASSIGNMENT -->\n        <div class=\"mt-7 mb-16\">\n\n          <!-- Section Title -->\n          <div class=\"flex flex-row justify-between items-center\">\n            <section-title title=\"To-Do List\"/>\n            <div class=\"text-purple-primary\">\n              {{ selectedDate }}\n            </div>\n          </div>\n          <!-- Assignment List -->\n          <assignment-card\n              v-for=\"assignment in assignments\"\n              :key=\"assignment.assignmentID\"\n              :assignment=\"assignment\"\n              :route=\"{name: 'teacher.assignments.show', params: { assignmentID: assignment.assignmentID }}\"\n              :display-countdown-timer=\"assignment.totalMarked !== assignment.totalSubmitted\"\n              class=\"mt-4\"\n          >\n            <template v-slot:topRightAction>\n              <div class=\"flex flex-col\">\n                <div class=\"mb-1\">\n                  {{ assignment.totalSubmitted }} submitted\n                </div>\n                <div>\n                  {{ assignment.totalMarked }} marked\n                </div>\n              </div>\n            </template>\n          </assignment-card>\n\n          <infinite-loading :identifier=\"filterCount\"\n                            @infinite=\"handleInfiniteScroll\"\n                            spinner=\"bubbles\"\n                            force-use-infinite-wrapper\n          >\n            <div slot=\"spinner\" class=\"mt-10\">Loading...</div>\n            <div slot=\"no-more\"></div>\n            <div slot=\"no-results\" class=\"text-purple-secondary mt-12\">\n              No available data.\n            </div>\n          </infinite-loading>\n        </div>\n      </div>\n    </template>\n\n    <template v-slot:bottomBar>\n      <div class=\"w-full max-w-xl divide-y divide-transparent\">\n\n        <!-- FILTER SELECT OPTIONS -->\n        <div class=\"py-2\">\n          <div class=\"grid grid-cols-2 divide-x divide-transparent\">\n            <div class=\"text-left px-2\">\n              Month\n              <select-month @selectedMonth=\"handleSelectedMonth\"/>\n            </div>\n            <div class=\"text-left px-2\">\n              Year\n              <select-year @selectedYear=\"handleSelectedYear\"/>\n            </div>\n          </div>\n        </div>\n        <div class=\"text-center py-2\">\n          <select-subject user-role=\"teacher\" @selectedSubject=\"handleSelectedSubject\"/>\n        </div>\n\n        <!-- FILTER ACTIONS -->\n        <div class=\"py-2\">\n          <div class=\"grid grid-cols-2 divide-x divide-transparent\">\n            <div class=\"text-center\">\n              <button @click=\"toggleFilterModal\"\n                      class=\"w-full font-bold rounded-full text-purple-primary text-sm border-2 border-purple-primary bg-white py-3 px-1 flex flex-row justify-center\">\n                <div class=\"w-5/7\">\n                  Cancel\n                </div>\n              </button>\n            </div>\n            <div class=\"text-center\">\n              <button @click=\"clickedFilterButton\"\n                      class=\"w-full font-bold rounded-full text-purple-primary text-sm bg-yellow-primary py-3 px-1 flex flex-row justify-center\">\n                <div class=\"w-5/7\">\n                  Filter\n                </div>\n                <div class=\"w-1/7\">\n                  <icon-base-two class=\"w-full md:w-1/2\">\n                    <filter-icon/>\n                  </icon-base-two>\n                </div>\n              </button>\n            </div>\n          </div>\n          <div class=\"w-4/7 px-2\">\n\n          </div>\n          <div class=\"w-3/7 px-2\">\n\n          </div>\n        </div>\n\n      </div>\n    </template>\n  </dashboard-layout>\n</template>\n\n<script>\nimport Vue from 'vue';\nimport DashboardLayout from \"@/views/layout/DashboardLayout\";\nimport PageTitle from \"@/components/PageTitle\";\nimport IconBaseTwo from \"@/components/IconBaseTwo\";\nimport FilterIcon from \"@/components/icons/FilterIcon\";\nimport SectionTitle from \"@/components/SectionTitle\";\nimport AssignmentCalendar from \"@/components/AssignmentCalendar\";\nimport InfiniteLoading from \"vue-infinite-loading\";\n\nimport moment from \"moment\";\nimport SelectMonth from \"@/components/SelectMonth\";\nimport SelectYear from \"@/components/SelectYear\";\nimport SelectSubject from \"@/components/SelectSubject\";\nimport AssignmentCard from \"@/components/AssignmentCard\";\nimport AssignmentRepository from \"@/repositories/AssignmentRepository\";\n\nexport default {\n  name: \"TeacherAssignments\",\n  data() {\n    return {\n      // States\n      hasError: false,\n      modal: false,\n\n      filterCount: 0,\n      filters: {\n        pageNum: 1,\n        perPage: 50,\n        search: '',\n        date: null,\n        month: null,\n        year: null,\n        subjects: null\n      },\n\n      assignments: [],\n      meta: null\n\n    };\n  },\n\n  watch: {\n    'filters.date': function (newSelect) {\n      if (newSelect != null) {\n        this.updateFilter()\n      }\n    }\n  },\n  computed: {\n    selectedDate() {\n      if (this.filters.date) {\n        return moment(this.filters.date).format('DD MMMM YYYY')\n      }\n    },\n    requestFilter() {\n      return {\n        pageNum: this.filters.pageNum,\n        perPage: this.filters.perPage,\n        is_active: false,\n        date: this.filters.date,\n        month: this.filters.month,\n        year: this.filters.year,\n        subjects: this.filters.subjects !== undefined ? this.filters.subjects : null\n      }\n    },\n    hasLoadMore() {\n      if (this.meta) {\n        return this.filters.pageNum <= this.meta.last_page\n      } else {\n        return true;\n      }\n    },\n  },\n  methods: {\n\n    handleInfiniteScroll($state) {\n\n      if (this.hasLoadMore) {\n\n        AssignmentRepository.all(this.requestFilter)\n            .then(response => {\n\n              if (response.data.success) {\n\n                const data = response.data.data\n\n                for (let i = 0; i < data.length; i++) {\n\n                  let item = data[i];\n\n                  let assignmentDetail = {\n                    assignmentID: item.assignment_id,\n                    subjectName: item.subject_name,\n                    classroomName: item.classroom_name,\n                    title: item.title,\n                    description: item.written_description,\n                    dueDatetime: item.due_datetime,\n                    totalSubmitted: item.number_of_submissions,\n                    totalMarked: item.num_of_marked_submissions,\n                    school_name: item.school_name,\n                  }\n\n                  if (item.marks_id) {\n                    assignmentDetail['marks'] = {\n                      id: item.marks_id,\n                      value: item.marks\n                    }\n                  }\n\n                  this.assignments.push(assignmentDetail);\n                  this.hasError = false;\n                }\n\n                // Update meta details and pageNum for filters\n                this.meta = response.data.meta;\n                this.filters.pageNum = this.meta.current_page + 1;\n\n                $state.loaded();\n              } else {\n                this.hasError = response.data.message;\n                $state.complete()\n              }\n            })\n\n        this.resetFilterModalOptions()\n      } else {\n        $state.complete();\n      }\n\n    },\n\n    handleSelectedDate(date) {\n      this.filters.date = date;\n    },\n    handleSelectedMonth(month) {\n      this.filters.month = month;\n      this.filters.date = null;\n    },\n    handleSelectedYear(year) {\n      this.filters.year = year;\n      this.filters.date = null;\n    },\n    handleSelectedSubject(subject) {\n      this.filters.subjects = [subject]\n      this.filters.date = null;\n    },\n    clickedFilterButton() {\n      this.toggleFilterModal()\n      this.updateFilter();\n    },\n    toggleFilterModal() {\n      this.modal = !this.modal\n    },\n    resetFilterModalOptions() {\n      this.filters.month = null;\n      this.filters.year = null;\n      this.filters.subjects = null;\n    },\n    updateFilter() {\n      this.filters.pageNum = 1\n      this.filters.perPage = 50\n\n      this.assignments = [];\n      this.filterCount++;\n    }\n  },\n  components: {\n    AssignmentCard,\n    SelectSubject,\n    SelectYear,\n    SelectMonth,\n    AssignmentCalendar,\n    SectionTitle,\n    FilterIcon,\n    IconBaseTwo,\n    PageTitle,\n    DashboardLayout,\n    InfiniteLoading\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"mappings":";AA4IA,OAAOA,GAAE,MAAO,KAAK;AACrB,OAAOC,eAAc,MAAO,gCAAgC;AAC5D,OAAOC,SAAQ,MAAO,wBAAwB;AAC9C,OAAOC,WAAU,MAAO,0BAA0B;AAClD,OAAOC,UAAS,MAAO,+BAA+B;AACtD,OAAOC,YAAW,MAAO,2BAA2B;AACpD,OAAOC,kBAAiB,MAAO,iCAAiC;AAChE,OAAOC,eAAc,MAAO,sBAAsB;AAElD,OAAOC,MAAK,MAAO,QAAQ;AAC3B,OAAOC,WAAU,MAAO,0BAA0B;AAClD,OAAOC,UAAS,MAAO,yBAAyB;AAChD,OAAOC,aAAY,MAAO,4BAA4B;AACtD,OAAOC,cAAa,MAAO,6BAA6B;AACxD,OAAOC,oBAAmB,MAAO,qCAAqC;AAEtE,eAAe;EACbC,IAAI,EAAE,oBAAoB;EAC1BC,IAAIA,CAAA,EAAG;IACL,OAAO;MACL;MACAC,QAAQ,EAAE,KAAK;MACfC,KAAK,EAAE,KAAK;MAEZC,WAAW,EAAE,CAAC;MACdC,OAAO,EAAE;QACPC,OAAO,EAAE,CAAC;QACVC,OAAO,EAAE,EAAE;QACXC,MAAM,EAAE,EAAE;QACVC,IAAI,EAAE,IAAI;QACVC,KAAK,EAAE,IAAI;QACXC,IAAI,EAAE,IAAI;QACVC,QAAQ,EAAE;MACZ,CAAC;MAEDC,WAAW,EAAE,EAAE;MACfC,IAAI,EAAE;IAER,CAAC;EACH,CAAC;EAEDC,KAAK,EAAE;IACL,cAAc,EAAE,SAAAC,CAAUC,SAAS,EAAE;MACnC,IAAIA,SAAQ,IAAK,IAAI,EAAE;QACrB,IAAI,CAACC,YAAY,EAAC;MACpB;IACF;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,YAAYA,CAAA,EAAG;MACb,IAAI,IAAI,CAACf,OAAO,CAACI,IAAI,EAAE;QACrB,OAAOf,MAAM,CAAC,IAAI,CAACW,OAAO,CAACI,IAAI,CAAC,CAACY,MAAM,CAAC,cAAc;MACxD;IACF,CAAC;IACDC,aAAaA,CAAA,EAAG;MACd,OAAO;QACLhB,OAAO,EAAE,IAAI,CAACD,OAAO,CAACC,OAAO;QAC7BC,OAAO,EAAE,IAAI,CAACF,OAAO,CAACE,OAAO;QAC7BgB,SAAS,EAAE,KAAK;QAChBd,IAAI,EAAE,IAAI,CAACJ,OAAO,CAACI,IAAI;QACvBC,KAAK,EAAE,IAAI,CAACL,OAAO,CAACK,KAAK;QACzBC,IAAI,EAAE,IAAI,CAACN,OAAO,CAACM,IAAI;QACvBC,QAAQ,EAAE,IAAI,CAACP,OAAO,CAACO,QAAO,KAAMY,SAAQ,GAAI,IAAI,CAACnB,OAAO,CAACO,QAAO,GAAI;MAC1E;IACF,CAAC;IACDa,WAAWA,CAAA,EAAG;MACZ,IAAI,IAAI,CAACX,IAAI,EAAE;QACb,OAAO,IAAI,CAACT,OAAO,CAACC,OAAM,IAAK,IAAI,CAACQ,IAAI,CAACY,SAAQ;MACnD,OAAO;QACL,OAAO,IAAI;MACb;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IAEPC,oBAAoBA,CAACC,MAAM,EAAE;MAE3B,IAAI,IAAI,CAACJ,WAAW,EAAE;QAEpB1B,oBAAoB,CAAC+B,GAAG,CAAC,IAAI,CAACR,aAAa,EACtCS,IAAI,CAACC,QAAO,IAAK;UAEhB,IAAIA,QAAQ,CAAC/B,IAAI,CAACgC,OAAO,EAAE;YAEzB,MAAMhC,IAAG,GAAI+B,QAAQ,CAAC/B,IAAI,CAACA,IAAG;YAE9B,KAAK,IAAIiC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAIjC,IAAI,CAACkC,MAAM,EAAED,CAAC,EAAE,EAAE;cAEpC,IAAIE,IAAG,GAAInC,IAAI,CAACiC,CAAC,CAAC;cAElB,IAAIG,gBAAe,GAAI;gBACrBC,YAAY,EAAEF,IAAI,CAACG,aAAa;gBAChCC,WAAW,EAAEJ,IAAI,CAACK,YAAY;gBAC9BC,aAAa,EAAEN,IAAI,CAACO,cAAc;gBAClCC,KAAK,EAAER,IAAI,CAACQ,KAAK;gBACjBC,WAAW,EAAET,IAAI,CAACU,mBAAmB;gBACrCC,WAAW,EAAEX,IAAI,CAACY,YAAY;gBAC9BC,cAAc,EAAEb,IAAI,CAACc,qBAAqB;gBAC1CC,WAAW,EAAEf,IAAI,CAACgB,yBAAyB;gBAC3CC,WAAW,EAAEjB,IAAI,CAACiB;cACpB;cAEA,IAAIjB,IAAI,CAACkB,QAAQ,EAAE;gBACjBjB,gBAAgB,CAAC,OAAO,IAAI;kBAC1BkB,EAAE,EAAEnB,IAAI,CAACkB,QAAQ;kBACjBE,KAAK,EAAEpB,IAAI,CAACqB;gBACd;cACF;cAEA,IAAI,CAAC5C,WAAW,CAAC6C,IAAI,CAACrB,gBAAgB,CAAC;cACvC,IAAI,CAACnC,QAAO,GAAI,KAAK;YACvB;;YAEA;YACA,IAAI,CAACY,IAAG,GAAIkB,QAAQ,CAAC/B,IAAI,CAACa,IAAI;YAC9B,IAAI,CAACT,OAAO,CAACC,OAAM,GAAI,IAAI,CAACQ,IAAI,CAAC6C,YAAW,GAAI,CAAC;YAEjD9B,MAAM,CAAC+B,MAAM,EAAE;UACjB,OAAO;YACL,IAAI,CAAC1D,QAAO,GAAI8B,QAAQ,CAAC/B,IAAI,CAAC4D,OAAO;YACrChC,MAAM,CAACiC,QAAQ,EAAC;UAClB;QACF,CAAC;QAEL,IAAI,CAACC,uBAAuB,EAAC;MAC/B,OAAO;QACLlC,MAAM,CAACiC,QAAQ,EAAE;MACnB;IAEF,CAAC;IAEDE,kBAAkBA,CAACvD,IAAI,EAAE;MACvB,IAAI,CAACJ,OAAO,CAACI,IAAG,GAAIA,IAAI;IAC1B,CAAC;IACDwD,mBAAmBA,CAACvD,KAAK,EAAE;MACzB,IAAI,CAACL,OAAO,CAACK,KAAI,GAAIA,KAAK;MAC1B,IAAI,CAACL,OAAO,CAACI,IAAG,GAAI,IAAI;IAC1B,CAAC;IACDyD,kBAAkBA,CAACvD,IAAI,EAAE;MACvB,IAAI,CAACN,OAAO,CAACM,IAAG,GAAIA,IAAI;MACxB,IAAI,CAACN,OAAO,CAACI,IAAG,GAAI,IAAI;IAC1B,CAAC;IACD0D,qBAAqBA,CAACC,OAAO,EAAE;MAC7B,IAAI,CAAC/D,OAAO,CAACO,QAAO,GAAI,CAACwD,OAAO;MAChC,IAAI,CAAC/D,OAAO,CAACI,IAAG,GAAI,IAAI;IAC1B,CAAC;IACD4D,mBAAmBA,CAAA,EAAG;MACpB,IAAI,CAACC,iBAAiB,EAAC;MACvB,IAAI,CAACpD,YAAY,EAAE;IACrB,CAAC;IACDoD,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAACnE,KAAI,GAAI,CAAC,IAAI,CAACA,KAAI;IACzB,CAAC;IACD4D,uBAAuBA,CAAA,EAAG;MACxB,IAAI,CAAC1D,OAAO,CAACK,KAAI,GAAI,IAAI;MACzB,IAAI,CAACL,OAAO,CAACM,IAAG,GAAI,IAAI;MACxB,IAAI,CAACN,OAAO,CAACO,QAAO,GAAI,IAAI;IAC9B,CAAC;IACDM,YAAYA,CAAA,EAAG;MACb,IAAI,CAACb,OAAO,CAACC,OAAM,GAAI;MACvB,IAAI,CAACD,OAAO,CAACE,OAAM,GAAI,EAAC;MAExB,IAAI,CAACM,WAAU,GAAI,EAAE;MACrB,IAAI,CAACT,WAAW,EAAE;IACpB;EACF,CAAC;EACDmE,UAAU,EAAE;IACVzE,cAAc;IACdD,aAAa;IACbD,UAAU;IACVD,WAAW;IACXH,kBAAkB;IAClBD,YAAY;IACZD,UAAU;IACVD,WAAW;IACXD,SAAS;IACTD,eAAe;IACfM;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}