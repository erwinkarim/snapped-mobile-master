{"ast":null,"code":"import IconBaseTwo from \"@/components/IconBaseTwo\";\nimport TrashIcon from \"@/components/icons/TrashIcon\";\nimport CameraIcon from \"@/components/icons/CameraIcon\";\nimport PenIcon from \"@/components/icons/PenIcon\";\nimport CropIcon from \"@/components/icons/CropIcon\";\nimport PhoneIcon from \"@/components/icons/PhoneIcon\";\nimport PlusIcon from \"@/components/icons/PlusIcon\";\nimport ArrowRightIcon from \"@/components/icons/ArrowRightIcon\";\nimport ZoomIcon from \"@/components/icons/ZoomIcon\";\nimport MicrophoneIcon from \"@/components/icons/MicrophoneIcon\";\nconst VueCropper = () => import('vue-cropperjs');\n// import VueCropper from 'vue-cropperjs';\nimport 'cropperjs/dist/cropper.css';\nimport ZoomQuestionForm from '@/components/ZoomQuestionForm';\nexport default {\n  name: \"CreateQuestionForm\",\n  computed: {},\n  methods: {\n    handleSnappedQuestion(e) {\n      this.$store.dispatch('teacherCreateAssignment/beginSnappingQuestion');\n      this.$store.dispatch('teacherCreateAssignment/handleSnapQuestion', e);\n    },\n    saveCroppedSnappedQuestion(key) {\n      let cropper = `cropper_${key}`;\n      let payload = {\n        key: key,\n        dataURL: this.$refs[cropper][0].getCroppedCanvas().toDataURL()\n      };\n      this.$store.dispatch('teacherCreateAssignment/saveCroppedSnappedQuestion', payload);\n    }\n  },\n  components: {\n    CropIcon,\n    PenIcon,\n    CameraIcon,\n    TrashIcon,\n    IconBaseTwo,\n    VueCropper,\n    PhoneIcon,\n    PlusIcon,\n    ArrowRightIcon,\n    ZoomIcon,\n    MicrophoneIcon,\n    ZoomQuestionForm\n  }\n};","map":{"version":3,"names":["IconBaseTwo","TrashIcon","CameraIcon","PenIcon","CropIcon","PhoneIcon","PlusIcon","ArrowRightIcon","ZoomIcon","MicrophoneIcon","VueCropper","ZoomQuestionForm","name","computed","methods","handleSnappedQuestion","e","$store","dispatch","saveCroppedSnappedQuestion","key","cropper","payload","dataURL","$refs","getCroppedCanvas","toDataURL","components"],"sources":["/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/src/views/teachers/TeacherAssignments/Create/CreateQuestionForm.vue"],"sourcesContent":["<template>\n  <!-- FORM QUESTION -->\n  <div class=\"relative top-12 flex-wrap w-full\">\n\n    <!--  INSTRUCTION   -->\n    <div v-if=\"!$store.state.teacherCreateAssignment.states.isCroppingSnappedQuestion\"\n         class=\"px-7 w-full text-sm leading-snug text-left break-words mt-18 text-purple-secondary\">\n      <div v-if=\"!$store.getters['teacherCreateAssignment/creatingQuestionType']\"\n      >\n        Fill the title and select a type of question\n      </div>\n      <div v-else-if=\"$store.getters['teacherCreateAssignment/creatingQuestionType'] === 'written'\">\n        Fill the title and write your question\n      </div>\n      <div v-else-if=\"$store.getters['teacherCreateAssignment/creatingQuestionType'] === 'snapped'\">\n        Fill the title or add more photos\n      </div>\n    </div>\n\n\n    <!-----------------------\n       CREATING QUESTIONS\n    ------------------------>\n    <div class=\"relative px-7 mt-5 w-full max-h-full\">\n\n      <!-- TITLE -->\n      <input v-model=\"$store.state.teacherCreateAssignment.creatingQuestionDetails.title\"\n             v-if=\"!$store.state.teacherCreateAssignment.states.isCroppingSnappedQuestion\"\n             class=\"py-5 pr-2 pl-6 mt-2 w-full text-lg font-normal leading-tight rounded-md border border-none appearance-none bg-gray-secondary text-purple-secondary focus:outline-none focus:shadow-outline placeholder-purple-secondary\"\n             type=\"text\"\n             placeholder=\"Title\"\n             autocomplete=\"off\"\n      >\n\n      <div v-if=\"$store.state.teacherCreateAssignment.states.isSelectingQuestionType && !$store.getters['teacherCreateAssignment/hasEditableQuestion']\"\n          class=\"flex -mx-1 mb-4\"\n      >\n        <div class=\"px-1 w-1/2 h-28\">\n          <button @click=\"$store.dispatch('teacherCreateAssignment/beginWritingQuestion')\"\n                  class=\"mt-2 w-full text-lg font-normal leading-tight rounded-md border border-none appearance-none bg-gray-secondary text-purple-secondary focus:outline-none focus:shadow-outline\"\n          >\n            <div class=\"flex col-span-1 row-span-1 justify-center py-4\">\n              <icon-base-two class=\"w-12\">\n                <pen-icon class=\"w-12\"/>\n              </icon-base-two>\n            </div>\n            <div class=\"flex col-span-1 row-span-2 justify-center py-2\">\n              Write\n            </div>\n          </button>\n        </div>\n        <label class=\"px-1 w-1/2 h-12\">\n          <div\n              class=\"mt-2 w-full text-lg font-normal leading-tight rounded-md border border-none appearance-none bg-gray-secondary text-purple-secondary focus:outline-none focus:shadow-outline\">\n            <div class=\"flex col-span-1 row-span-1 justify-center py-4\">\n              <icon-base-two class=\"w-12\">\n                <camera-icon/>\n              </icon-base-two>\n            </div>\n            <div class=\"flex col-span-1 row-span-2 justify-center py-2\">\n              Snap\n            </div>\n            <input\n                @change=\"handleSnappedQuestion\"\n                type=\"file\"\n                accept='image/*'\n                multiple\n                class=\"hidden\"\n            >\n          </div>\n        </label>\n      </div>\n      <div v-if=\"$store.state.teacherCreateAssignment.states.isSelectingQuestionType && !$store.getters['teacherCreateAssignment/hasEditableQuestion']\"\n          class=\"flex -mx-1\"\n      >\n        <!-- zoom meeting-->\n        <div class=\"px-1 w-full h-12\">\n          <button @click=\"$store.dispatch('teacherCreateAssignment/beginWritingZoomQuestion')\"\n                  class=\"mt-2 w-full text-lg font-normal leading-tight rounded-md border border-none appearance-none bg-gray-secondary text-purple-secondary focus:outline-none focus:shadow-outline\"\n          >\n            <div class=\"flex col-span-1 row-span-1 justify-center py-4\">\n              <icon-base-two class=\"w-12\">\n                <zoom-icon class=\"w-12\"/>\n              </icon-base-two>\n            </div>\n            <div class=\"flex col-span-1 row-span-2 justify-center py-2\">\n              Zoom\n            </div>\n          </button>\n        </div>\n      </div>\n\n      <!-- FORM: Written Question -->\n      <div v-if=\"$store.state.teacherCreateAssignment.states.isWritingQuestion\" class=\"relative\">\n        <!-- DESCRIPTION -->\n        <textarea v-model=\"$store.state.teacherCreateAssignment.creatingQuestionDetails.writtenQuestion\"\n                  class=\"block py-5 px-5 mt-4 w-full text-lg leading-snug text-left break-words rounded-md h-half-screen bg-gray-secondary form-textarea focus:outline-none focus:shadow-outline text-purple-secondary placeholder-purple-secondary text-m\"\n                  placeholder=\"Enter question\"\n        />\n      </div>\n\n      <!--  If IMAGE HAS BEEN SELECTED  -->\n      <div v-if=\"$store.state.teacherCreateAssignment.states.isSnappingQuestion\">\n        <div v-for=\"(image, key) in $store.state.teacherCreateAssignment.creatingQuestionDetails.snappedPreviews\"\n             class=\"flex flex-col py-5 px-5 mt-2 mb-2 w-full text-lg font-normal leading-tight rounded-md border border-none appearance-none bg-gray-secondary text-purple-secondary focus:outline-none focus:shadow-outline placeholder-purple-secondary\"\n        >\n\n          <div class=\"flex flex-row items-center\">\n            <div class=\"w-6/7 text-left text-blue-secondary\">\n              <button @click=\"$store.commit('teacherCreateAssignment/toggleSnappedQuestionPreviewStatus', key)\"\n                      class=\"focus:outline-none\"\n              >\n                {{ image.preview ? 'Hide image' : image.cropping ? `Return to Preview ` : 'Preview Image' }}\n              </button>\n            </div>\n            <div v-if=\"!image.preview && !image.cropping\" class=\"w-1/7 flex flex-row justify-end\">\n              <button @click=\"$store.dispatch('teacherCreateAssignment/removeSnappedQuestion', key)\"\n                      class=\"w-2/3 focus:outline-none\">\n                <icon-base-two stroke-color=\"purple-secondary\">\n                  <trash-icon/>\n                </icon-base-two>\n              </button>\n            </div>\n          </div>\n\n          <div v-if=\"image.preview\" class=\"mt-5\">\n            <div class=\"w-full py-2 h-full object-cover\">\n              <img :src=\"image.source\"/>\n            </div>\n            <div class=\"flex flex-row items-center mt-2 md:mt-4 \">\n              <button @click=\"$store.dispatch('teacherCreateAssignment/removeSnappedQuestion', key)\"\n                      class=\"flex flex-row items-center w-1/2  py-3 md:py-5 mr-1 rounded-lg bg-red-primary focus:outline-none\">\n                <div class=\"text-white text-sm md:text-lg w-3/4\">\n                  Remove\n                </div>\n                <div class=\"w-1/4\">\n                  <icon-base-two class=\"w-1/2\">\n                    <trash-icon/>\n                  </icon-base-two>\n                </div>\n              </button>\n              <button @click=\"$store.commit('teacherCreateAssignment/toggleCroppingSnappedQuestionMode', key)\"\n                      class=\"flex flex-row items-center  py-3  md:py-5 w-1/2 ml-1 rounded-lg bg-purple-primary focus:outline-none\">\n                <div class=\"text-white text-sm md:text-lg w-3/4\">\n                  Crop\n                </div>\n                <div class=\"w-1/4\">\n                  <icon-base-two class=\"w-1/2\">\n                    <crop-icon/>\n                  </icon-base-two>\n                </div>\n              </button>\n            </div>\n          </div>\n\n          <div v-if=\"image.cropping\"\n               class=\"mt-5\"\n          >\n            <vue-cropper :ref=\"`cropper_${key}`\"\n                         :src=\"image.source\"\n                         alt=\"Source Image\"\n            >\n            </vue-cropper>\n            <div class=\"flex flex-row items-center mt-4 md:mt-4 \">\n              <button @click=\"$store.commit('teacherCreateAssignment/toggleSnappedQuestionPreviewStatus', key)\"\n                      class=\"flex flex-row items-center w-1/2  py-3 md:py-5 mr-1 rounded-lg bg-red-primary focus:outline-none\">\n                <div class=\"text-white text-sm md:text-lg w-full\">\n                  Cancel\n                </div>\n              </button>\n              <button @click=\"saveCroppedSnappedQuestion(key)\"\n                      class=\"flex flex-row items-center  py-3  md:py-5 w-1/2 ml-1 rounded-lg bg-purple-primary focus:outline-none\">\n                <div class=\"text-white text-sm md:text-lg w-3/4\">\n                  Done\n                </div>\n                <div class=\"w-1/4\">\n                  <icon-base-two class=\"w-1/2\">\n                    <crop-icon/>\n                  </icon-base-two>\n                </div>\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- Add More Photo Button       -->\n        <div class=\"flex -mx-1 mb-4\">\n          <label\n              class=\"py-5 pr-2 pl-6 mt-2 w-full text-lg font-normal leading-tight text-center rounded-md border border-none appearance-none focus:outline-none focus:shadow-outline text-red-primary\">\n            + Add more photo\n            <input class=\"hidden\" type=\"file\" accept=\"image/*\" multiple @change=\"handleSnappedQuestion\">\n          </label>\n        </div>\n      </div>\n\n      <!-- FORM: Zoom Question -->\n      <ZoomQuestionForm />\n    </div>\n\n\n    <!-----------------------\n        EDITING QUESTIONS\n     ------------------------>\n    <div v-if=\"$store.getters['teacherCreateAssignment/hasEditableQuestion']\"\n         class=\"px-7\"\n    >\n      <!-- WRITTEN QUESTION     -->\n      <div v-if=\"$store.getters['teacherCreateAssignment/hasWrittenQuestionDraft']\"\n           class=\"flex flex-row items-center py-5 pr-2 pl-6 mt-2 mb-2 w-full text-lg font-normal leading-tight rounded-md border border-none appearance-none bg-gray-secondary text-purple-secondary focus:outline-none focus:shadow-outline placeholder-purple-secondary\"\n      >\n        <div class=\"w-4/5 text-left text-blue-secondary\">\n          <button @click=\"$store.commit('teacherCreateAssignment/beginEditingWrittenQuestionMode')\">\n            Edit Question\n          </button>\n        </div>\n        <div class=\"w-1/5\">\n          <button @click=\"$store.dispatch('teacherCreateAssignment/removeWrittenQuestionDraft')\">\n            <icon-base-two class=\"float-right mr-3 w-1/2\" stroke-color=\"purple-secondary\">\n              <trash-icon/>\n            </icon-base-two>\n          </button>\n        </div>\n      </div>\n    </div>\n\n\n  </div>\n</template>\n\n<script>\nimport IconBaseTwo from \"@/components/IconBaseTwo\";\nimport TrashIcon from \"@/components/icons/TrashIcon\";\nimport CameraIcon from \"@/components/icons/CameraIcon\";\nimport PenIcon from \"@/components/icons/PenIcon\";\nimport CropIcon from \"@/components/icons/CropIcon\";\nimport PhoneIcon from \"@/components/icons/PhoneIcon\";\nimport PlusIcon from \"@/components/icons/PlusIcon\";\nimport ArrowRightIcon from \"@/components/icons/ArrowRightIcon\";\nimport ZoomIcon from \"@/components/icons/ZoomIcon\";\nimport MicrophoneIcon from \"@/components/icons/MicrophoneIcon\";\n\nconst VueCropper = () => import('vue-cropperjs');\n// import VueCropper from 'vue-cropperjs';\nimport 'cropperjs/dist/cropper.css';\nimport ZoomQuestionForm from '@/components/ZoomQuestionForm';\n\n\n\nexport default {\n  name: \"CreateQuestionForm\",\n  computed: { },\n  methods: {\n    handleSnappedQuestion(e) {\n      this.$store.dispatch('teacherCreateAssignment/beginSnappingQuestion')\n      this.$store.dispatch('teacherCreateAssignment/handleSnapQuestion', e)\n    },\n    saveCroppedSnappedQuestion(key) {\n      let cropper = `cropper_${key}`\n\n      let payload = {\n        key: key,\n        dataURL: this.$refs[cropper][0].getCroppedCanvas().toDataURL()\n      }\n\n      this.$store.dispatch('teacherCreateAssignment/saveCroppedSnappedQuestion', payload)\n    },\n  },\n  components: {\n    CropIcon, PenIcon, CameraIcon, TrashIcon, IconBaseTwo,\n    VueCropper, PhoneIcon, PlusIcon, ArrowRightIcon, ZoomIcon,\n    MicrophoneIcon, ZoomQuestionForm,\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"mappings":"AAsOA,OAAOA,WAAU,MAAO,0BAA0B;AAClD,OAAOC,SAAQ,MAAO,8BAA8B;AACpD,OAAOC,UAAS,MAAO,+BAA+B;AACtD,OAAOC,OAAM,MAAO,4BAA4B;AAChD,OAAOC,QAAO,MAAO,6BAA6B;AAClD,OAAOC,SAAQ,MAAO,8BAA8B;AACpD,OAAOC,QAAO,MAAO,6BAA6B;AAClD,OAAOC,cAAa,MAAO,mCAAmC;AAC9D,OAAOC,QAAO,MAAO,6BAA6B;AAClD,OAAOC,cAAa,MAAO,mCAAmC;AAE9D,MAAMC,UAAS,GAAIA,CAAA,KAAM,MAAM,CAAC,eAAe,CAAC;AAChD;AACA,OAAO,4BAA4B;AACnC,OAAOC,gBAAe,MAAO,+BAA+B;AAI5D,eAAe;EACbC,IAAI,EAAE,oBAAoB;EAC1BC,QAAQ,EAAE,CAAE,CAAC;EACbC,OAAO,EAAE;IACPC,qBAAqBA,CAACC,CAAC,EAAE;MACvB,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,+CAA+C;MACpE,IAAI,CAACD,MAAM,CAACC,QAAQ,CAAC,4CAA4C,EAAEF,CAAC;IACtE,CAAC;IACDG,0BAA0BA,CAACC,GAAG,EAAE;MAC9B,IAAIC,OAAM,GAAK,WAAUD,GAAI;MAE7B,IAAIE,OAAM,GAAI;QACZF,GAAG,EAAEA,GAAG;QACRG,OAAO,EAAE,IAAI,CAACC,KAAK,CAACH,OAAO,CAAC,CAAC,CAAC,CAAC,CAACI,gBAAgB,EAAE,CAACC,SAAS;MAC9D;MAEA,IAAI,CAACT,MAAM,CAACC,QAAQ,CAAC,oDAAoD,EAAEI,OAAO;IACpF;EACF,CAAC;EACDK,UAAU,EAAE;IACVvB,QAAQ;IAAED,OAAO;IAAED,UAAU;IAAED,SAAS;IAAED,WAAW;IACrDU,UAAU;IAAEL,SAAS;IAAEC,QAAQ;IAAEC,cAAc;IAAEC,QAAQ;IACzDC,cAAc;IAAEE;EAClB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}