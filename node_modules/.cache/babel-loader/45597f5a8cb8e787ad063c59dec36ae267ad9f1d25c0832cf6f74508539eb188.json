{"ast":null,"code":"import moment from \"moment\";\nimport StopWatchIcon from \"@/components/icons/StopWatchIcon\";\nexport default {\n  name: \"CountdownTimer\",\n  components: {\n    StopWatchIcon\n  },\n  props: {\n    dueDateTime: {\n      type: String,\n      required: true\n    },\n    hasClockIcon: {\n      type: Boolean,\n      default: false\n    },\n    hasTwentyFourHourLimit: {\n      type: Boolean,\n      default: false\n    },\n    hasDynamicBackgroundColor: {\n      type: Boolean,\n      default: false\n    },\n    disableRedAlert: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      timePassed: 0,\n      timerInterval: null,\n      inSeconds: {\n        day: 86400,\n        hour: 3600,\n        minute: 60\n      },\n      customBackgroundColor: null\n    };\n  },\n  computed: {\n    timeTotal() {\n      // Calculate total time based on difference from now to due date\n      let now = moment().toDate();\n      let dueDateTime = moment(this.dueDateTime, 'YYYY-MM-DD HH:mm:ss');\n      let timeDiff = dueDateTime.diff(now);\n      let duration = moment.duration(timeDiff);\n      return Math.floor(duration.asSeconds());\n    },\n    secondsLeft() {\n      return this.timeTotal - this.timePassed;\n    },\n    timeLeft() {\n      let secondsLeft = this.secondsLeft;\n      let value = null;\n      if (this.hasTwentyFourHourLimit && secondsLeft > this.inSeconds.day) {\n        clearInterval(this.timerInterval);\n      } else if (secondsLeft > 0) {\n        // If more than 24 hours, display in terms of days\n        if (secondsLeft > this.inSeconds.day) {\n          let days = Math.floor(secondsLeft / this.inSeconds.day);\n          if (days > 30) {\n            let months = Math.floor(days / 30);\n            value = `${months} ${days === 1 ? 'month' : 'months'}`;\n          } else {\n            value = `> ${days} ${days === 1 ? 'day' : 'days'}`;\n          }\n          this.customBackgroundColor = 'bg-purple-primary';\n        }\n        // Else, display in format hh:mm:ss\n        else {\n          let hours = Math.floor(secondsLeft / this.inSeconds.hour);\n          secondsLeft -= hours * this.inSeconds.hour;\n          let minutes = Math.floor(secondsLeft / this.inSeconds.minute);\n          secondsLeft -= minutes * this.inSeconds.minute;\n          let seconds = secondsLeft % this.inSeconds.minute;\n          hours < 10 ? hours = `0${hours}` : null;\n          minutes < 10 ? minutes = `0${minutes}` : null;\n          seconds < 10 ? seconds = `0${seconds}` : null;\n          value = `${hours}:${minutes}:${seconds}`;\n          if (hours < 1) {\n            this.customBackgroundColor = 'bg-yellow-primary';\n          } else {\n            this.customBackgroundColor = 'bg-purple-primary';\n          }\n        }\n      } else {\n        clearInterval(this.timerInterval);\n        value = '00:00:00';\n        this.customBackgroundColor = this.disableRedAlert ? 'bg-purple-primary' : 'bg-red-primary';\n      }\n      return value;\n    },\n    containerClass() {\n      if (this.hasDynamicBackgroundColor && this.customBackgroundColor) {\n        return this.customBackgroundColor;\n      } else {\n        return 'bg-transparent';\n      }\n    }\n  },\n  methods: {\n    startTimer() {\n      this.timerInterval = setInterval(() => this.timePassed += 1, 1000);\n    }\n  },\n  mounted() {\n    this.startTimer();\n  }\n};","map":{"version":3,"names":["moment","StopWatchIcon","name","components","props","dueDateTime","type","String","required","hasClockIcon","Boolean","default","hasTwentyFourHourLimit","hasDynamicBackgroundColor","disableRedAlert","data","timePassed","timerInterval","inSeconds","day","hour","minute","customBackgroundColor","computed","timeTotal","now","toDate","timeDiff","diff","duration","Math","floor","asSeconds","secondsLeft","timeLeft","value","clearInterval","days","months","hours","minutes","seconds","containerClass","methods","startTimer","setInterval","mounted"],"sources":["/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/src/components/CountdownTimer.vue"],"sourcesContent":["<template>\n  <div v-if=\"timeLeft\" :class=\"containerClass\"\n       class=\"rounded-full text-white tracking-tight flex flex-row items-center justify-center px-1 py-1\">\n    <div v-if=\"hasClockIcon\" class=\"w-1/7 md:w-1/10\">\n      <stop-watch-icon/>\n    </div>\n    <div class=\"w-5/7 truncate px-1\">\n      {{ timeLeft }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport moment from \"moment\";\nimport StopWatchIcon from \"@/components/icons/StopWatchIcon\";\n\nexport default {\n  name: \"CountdownTimer\",\n  components: {StopWatchIcon},\n  props: {\n    dueDateTime: {\n      type: String,\n      required: true,\n    },\n    hasClockIcon: {\n      type: Boolean,\n      default: false\n    },\n    hasTwentyFourHourLimit: {\n      type: Boolean,\n      default: false\n    },\n    hasDynamicBackgroundColor: {\n      type: Boolean,\n      default: false\n    },\n    disableRedAlert: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      timePassed: 0,\n      timerInterval: null,\n      inSeconds: {\n        day: 86400,\n        hour: 3600,\n        minute: 60\n      },\n      customBackgroundColor: null\n    }\n  },\n  computed: {\n\n    timeTotal() {\n      // Calculate total time based on difference from now to due date\n      let now = moment().toDate()\n      let dueDateTime = moment(this.dueDateTime, 'YYYY-MM-DD HH:mm:ss')\n\n      let timeDiff = dueDateTime.diff(now);\n      let duration = moment.duration(timeDiff);\n\n      return Math.floor(duration.asSeconds());\n    },\n    secondsLeft() {\n      return this.timeTotal - this.timePassed\n    },\n    timeLeft() {\n\n      let secondsLeft = this.secondsLeft;\n      let value = null;\n\n      if (this.hasTwentyFourHourLimit && secondsLeft > this.inSeconds.day) {\n        clearInterval(this.timerInterval)\n      } else if (secondsLeft > 0) {\n\n        // If more than 24 hours, display in terms of days\n        if (secondsLeft > this.inSeconds.day) {\n          let days = Math.floor(secondsLeft / this.inSeconds.day);\n\n          if (days > 30) {\n            let months = Math.floor(days / 30);\n            value = `${months} ${days === 1 ? 'month' : 'months'}`\n          } else {\n            value = `> ${days} ${days === 1 ? 'day' : 'days'}`\n          }\n\n          this.customBackgroundColor = 'bg-purple-primary'\n\n        }\n        // Else, display in format hh:mm:ss\n        else {\n          let hours = Math.floor(secondsLeft / this.inSeconds.hour);\n          secondsLeft -= hours * this.inSeconds.hour;\n\n          let minutes = Math.floor(secondsLeft / this.inSeconds.minute)\n          secondsLeft -= minutes * this.inSeconds.minute;\n\n          let seconds = secondsLeft % this.inSeconds.minute\n\n          hours < 10 ? hours = `0${hours}` : null;\n          minutes < 10 ? minutes = `0${minutes}` : null;\n          seconds < 10 ? seconds = `0${seconds}` : null;\n\n          value = `${hours}:${minutes}:${seconds}`\n\n          if (hours < 1) {\n            this.customBackgroundColor = 'bg-yellow-primary'\n          } else {\n            this.customBackgroundColor = 'bg-purple-primary'\n          }\n        }\n\n      } else {\n        clearInterval(this.timerInterval)\n        value = '00:00:00'\n        this.customBackgroundColor = this.disableRedAlert ? 'bg-purple-primary' : 'bg-red-primary'\n      }\n\n      return value\n    },\n    containerClass() {\n      if (this.hasDynamicBackgroundColor && this.customBackgroundColor) {\n        return this.customBackgroundColor;\n      } else {\n        return 'bg-transparent'\n      }\n    }\n  },\n  methods: {\n    startTimer() {\n      this.timerInterval = setInterval(() => (this.timePassed += 1), 1000);\n    }\n  },\n  mounted() {\n    this.startTimer()\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}