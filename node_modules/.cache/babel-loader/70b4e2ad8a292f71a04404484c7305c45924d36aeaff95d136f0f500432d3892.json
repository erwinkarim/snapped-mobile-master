{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport TeacherRepository from \"@/repositories/TeacherRepository\";\nimport StudentRepository from \"@/repositories/StudentRepository\";\nexport default {\n  name: \"SelectSubject\",\n  props: {\n    userRole: {\n      type: String,\n      default: null\n    }\n  },\n  data() {\n    return {\n      subjects: [],\n      selectedSubject: ''\n    };\n  },\n  watch: {\n    'selectedSubject': 'emitSelectedSubject'\n  },\n  methods: {\n    getSubjects() {\n      if (this.userRole === 'teacher') {\n        TeacherRepository.getTeacherSubjects().then(response => {\n          if (response.data.success) {\n            const data = response.data.data;\n            const numOfSubjects = data.length;\n            for (let i = 0; i < numOfSubjects; i++) {\n              let item = data[i];\n              let subjectDetail = {\n                id: item.subject_id,\n                name: item.subject_name\n              };\n              this.subjects.push(subjectDetail);\n            }\n          }\n        });\n      }\n      if (this.userRole === 'student') {\n        StudentRepository.getSubjects().then(response => {\n          if (response.data.success) {\n            const data = response.data.data;\n            const numOfSubjects = data.length;\n            for (let i = 0; i < numOfSubjects; i++) {\n              let item = data[i];\n              let subjectDetail = {\n                id: item.subject_id,\n                name: item.subject_name\n              };\n              this.subjects.push(subjectDetail);\n            }\n          }\n        });\n      }\n    },\n    emitSelectedSubject() {\n      this.$emit('selectedSubject', this.selectedSubject);\n    }\n  },\n  mounted() {\n    this.getSubjects();\n  }\n};","map":{"version":3,"names":["TeacherRepository","StudentRepository","name","props","userRole","type","String","default","data","subjects","selectedSubject","watch","methods","getSubjects","getTeacherSubjects","then","response","success","numOfSubjects","length","i","item","subjectDetail","id","subject_id","subject_name","push","emitSelectedSubject","$emit","mounted"],"sources":["/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/src/components/SelectSubject.vue"],"sourcesContent":["<template>\n  <select v-model=\"selectedSubject\"\n          class=\"pl-6 pr-2 py-5 mt-2  appearance-none border rounded-md border-none w-full bg-gray-secondary text-purple-secondary text-lg font-normal leading-tight focus:outline-none focus:shadow-outline placeholder-purple-secondary\">\n    <option disabled value=\"\">Select subject</option>\n    <option v-for=\"subject in subjects\" :value=\"subject.id\">{{ subject.name }}</option>\n  </select>\n</template>\n\n<script>\nimport TeacherRepository from \"@/repositories/TeacherRepository\";\nimport StudentRepository from \"@/repositories/StudentRepository\";\n\nexport default {\n  name: \"SelectSubject\",\n  props: {\n    userRole: {\n      type: String,\n      default: null\n    }\n  },\n  data() {\n    return {\n      subjects: [],\n      selectedSubject: '',\n    }\n  },\n  watch: {\n    'selectedSubject': 'emitSelectedSubject'\n  },\n  methods: {\n    getSubjects() {\n      if (this.userRole === 'teacher') {\n        TeacherRepository.getTeacherSubjects()\n            .then(response => {\n\n              if (response.data.success) {\n                const data = response.data.data\n\n                const numOfSubjects = data.length\n\n                for (let i = 0; i < numOfSubjects; i++) {\n\n                  let item = data[i];\n\n                  let subjectDetail = {\n                    id: item.subject_id,\n                    name: item.subject_name\n                  }\n\n                  this.subjects.push(subjectDetail)\n                }\n              }\n            })\n      }\n\n      if (this.userRole === 'student') {\n        StudentRepository.getSubjects()\n            .then(response => {\n\n              if (response.data.success) {\n                const data = response.data.data\n\n                const numOfSubjects = data.length\n\n                for (let i = 0; i < numOfSubjects; i++) {\n\n                  let item = data[i];\n\n                  let subjectDetail = {\n                    id: item.subject_id,\n                    name: item.subject_name\n                  }\n\n                  this.subjects.push(subjectDetail)\n                }\n              }\n            })\n      }\n    },\n\n    emitSelectedSubject() {\n      this.$emit('selectedSubject', this.selectedSubject)\n    }\n  },\n  mounted() {\n    this.getSubjects()\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"mappings":";AASA,OAAOA,iBAAgB,MAAO,kCAAkC;AAChE,OAAOC,iBAAgB,MAAO,kCAAkC;AAEhE,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,KAAK,EAAE;IACLC,QAAQ,EAAE;MACRC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE;IACnB;EACF,CAAC;EACDC,KAAK,EAAE;IACL,iBAAiB,EAAE;EACrB,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZ,IAAI,IAAI,CAACT,QAAO,KAAM,SAAS,EAAE;QAC/BJ,iBAAiB,CAACc,kBAAkB,EAAC,CAChCC,IAAI,CAACC,QAAO,IAAK;UAEhB,IAAIA,QAAQ,CAACR,IAAI,CAACS,OAAO,EAAE;YACzB,MAAMT,IAAG,GAAIQ,QAAQ,CAACR,IAAI,CAACA,IAAG;YAE9B,MAAMU,aAAY,GAAIV,IAAI,CAACW,MAAK;YAEhC,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAIF,aAAa,EAAEE,CAAC,EAAE,EAAE;cAEtC,IAAIC,IAAG,GAAIb,IAAI,CAACY,CAAC,CAAC;cAElB,IAAIE,aAAY,GAAI;gBAClBC,EAAE,EAAEF,IAAI,CAACG,UAAU;gBACnBtB,IAAI,EAAEmB,IAAI,CAACI;cACb;cAEA,IAAI,CAAChB,QAAQ,CAACiB,IAAI,CAACJ,aAAa;YAClC;UACF;QACF,CAAC;MACP;MAEA,IAAI,IAAI,CAAClB,QAAO,KAAM,SAAS,EAAE;QAC/BH,iBAAiB,CAACY,WAAW,EAAC,CACzBE,IAAI,CAACC,QAAO,IAAK;UAEhB,IAAIA,QAAQ,CAACR,IAAI,CAACS,OAAO,EAAE;YACzB,MAAMT,IAAG,GAAIQ,QAAQ,CAACR,IAAI,CAACA,IAAG;YAE9B,MAAMU,aAAY,GAAIV,IAAI,CAACW,MAAK;YAEhC,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAIF,aAAa,EAAEE,CAAC,EAAE,EAAE;cAEtC,IAAIC,IAAG,GAAIb,IAAI,CAACY,CAAC,CAAC;cAElB,IAAIE,aAAY,GAAI;gBAClBC,EAAE,EAAEF,IAAI,CAACG,UAAU;gBACnBtB,IAAI,EAAEmB,IAAI,CAACI;cACb;cAEA,IAAI,CAAChB,QAAQ,CAACiB,IAAI,CAACJ,aAAa;YAClC;UACF;QACF,CAAC;MACP;IACF,CAAC;IAEDK,mBAAmBA,CAAA,EAAG;MACpB,IAAI,CAACC,KAAK,CAAC,iBAAiB,EAAE,IAAI,CAAClB,eAAe;IACpD;EACF,CAAC;EACDmB,OAAOA,CAAA,EAAG;IACR,IAAI,CAAChB,WAAW,EAAC;EACnB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}