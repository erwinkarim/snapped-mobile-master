{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport PageTitleTwo from \"@/components/PageTitleTwo\";\nimport NavBack from \"@/components/NavBack\";\nimport IconBaseTwo from \"@/components/IconBaseTwo\";\nimport TrashIcon from \"@/components/icons/TrashIcon\";\nimport Modal from \"@/components/Modal\";\nimport DashboardLayout from \"@/views/layout/DashboardLayout\";\nimport PageHeaderThree from \"@/components/PageHeaderThree\";\nimport router from \"@/router\";\nimport ArrowBackIcon from \"@/components/icons/ArrowBackIcon\";\nimport CropIcon from \"@/components/icons/CropIcon\";\n\n// Vue Cropper\nimport VueCropper from 'vue-cropperjs';\nimport 'cropperjs/dist/cropper.css';\n\n// FONT AWESOME\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\nimport { faTrash, faCropAlt } from \"@fortawesome/free-solid-svg-icons\";\nexport default {\n  name: \"AnswerSave\",\n  props: {\n    answer: Object,\n    assignmentDetails: Object\n  },\n  data() {\n    return {\n      // States\n      isMainPage: true,\n      isPreviewingSnappedAnswer: false,\n      isSubmitting: false,\n      isShowingModal: false,\n      submissionStatus: null,\n      snappedAnswerPreviews: [],\n      remarks: '',\n      snappedAnswers: [],\n      // Icons\n      icons: {\n        crop: faCropAlt,\n        trash: faTrash\n      }\n    };\n  },\n  computed: {\n    hasAnswerContent() {\n      return this.answer.type !== null && this.answer.content !== '';\n    },\n    isWrittenAnswer() {\n      return this.answer.type === 'written';\n    },\n    isSnappedAnswer() {\n      return this.answer.type === 'snapped';\n    }\n  },\n  methods: {\n    toggleSnappedAnswerPreview() {\n      if (this.isPreviewingSnappedAnswer) {\n        this.isMainPage = true;\n        this.isPreviewingSnappedAnswer = false;\n      } else {\n        this.isMainPage = false;\n        this.isPreviewingSnappedAnswer = true;\n      }\n    },\n    onFileSelected(e) {\n      let files = e.target.files || e.dataTransfer.files;\n      if (!files.length) {\n        return;\n      }\n      if (files[0].type.match(\"image.*\")) {\n        this.generateSnappedAnswerPreview(files);\n      }\n      e.target.value = '';\n    },\n    handleVueCropperReady(e) {\n      let cropper = e.target.cropper;\n      cropper.autoCrop = false;\n      cropper.clear();\n      cropper.disable();\n\n      // If this is new photo uploaded, add image to snapped answers array\n      if (!cropper.replaced) {\n        cropper.getCroppedCanvas({\n          maxWidth: 720,\n          maxHeight: 720,\n          fillColor: '#fff'\n        }).toBlob(blob => {\n          this.snappedAnswers.push(blob);\n        }, 'image/jpeg');\n      }\n    },\n    generateSnappedAnswerPreview(files) {\n      files.forEach(f => {\n        if (!f.type.match(\"image.*\")) {\n          return;\n        }\n        let reader = new FileReader();\n        let that = this;\n        reader.onload = function (e) {\n          that.snappedAnswerPreviews.push({\n            source: e.target.result,\n            cropping: false\n          });\n        };\n        reader.readAsDataURL(f);\n      });\n    },\n    toggleSnappedCroppingStatus(key) {\n      this.snappedAnswerPreviews[key].cropping = !this.snappedAnswerPreviews[key].cropping;\n      let cropperKey = `cropper_${key}`;\n      let cropper = this.$refs[cropperKey][0];\n\n      // If cropping, enable\n      if (this.snappedAnswerPreviews[key].cropping) {\n        cropper.enable();\n      } else {\n        cropper.clear();\n        cropper.disable();\n      }\n    },\n    vueCropperContainerStyle(key) {\n      let style = {\n        width: '100%'\n        // display: 'none'\n      };\n\n      if (this.snappedAnswerPreviews[key].cropping) {\n        style.display = 'flex';\n      }\n      return style;\n    },\n    saveCroppedSnappedAnswer(key) {\n      let cropperKey = `cropper_${key}`;\n      let cropper = this.$refs[cropperKey][0];\n      let cropped = cropper.getCroppedCanvas({\n        maxWidth: 720,\n        maxHeight: 720,\n        fillColor: '#fff'\n      });\n      let dataURL = cropped.toDataURL(\"image/jpeg\");\n      cropper.replace(dataURL);\n      this.snappedAnswerPreviews[key].source = dataURL;\n      cropped.toBlob(blob => {\n        this.snappedAnswers[key] = blob;\n      }, 'image/jpeg');\n      this.toggleSnappedCroppingStatus(key);\n    },\n    removeSnappedAnswer(key) {\n      let cropperKey = `cropper_${key}`;\n      let cropper = this.$refs[cropperKey][0];\n      cropper.destroy();\n      this.snappedAnswers.splice(key, 1);\n      this.snappedAnswerPreviews.splice(key, 1);\n    },\n    submit() {\n      if (this.isSnappedAnswer) {\n        if (this.snappedAnswers.length > 0) {\n          this.$emit('snappedAnswer', this.snappedAnswers);\n          this.$emit('submit', this.remarks);\n        } else {\n          this.$emit('error', {\n            status: true,\n            message: 'Please snap an answer!'\n          });\n        }\n      }\n      if (this.isWrittenAnswer) {\n        this.$emit('submit', this.remarks);\n      }\n    }\n  },\n  mounted() {\n    if (this.isSnappedAnswer) {\n      this.generateSnappedAnswerPreview(this.answer.content);\n    }\n  },\n  created() {\n    if (!this.hasAnswerContent) {\n      router.push({\n        name: 'student.assignments.show'\n      });\n    }\n  },\n  components: {\n    CropIcon,\n    ArrowBackIcon,\n    PageHeaderThree,\n    DashboardLayout,\n    Modal,\n    TrashIcon,\n    IconBaseTwo,\n    NavBack,\n    PageTitleTwo,\n    FontAwesomeIcon,\n    VueCropper\n  }\n};","map":{"version":3,"names":["PageTitleTwo","NavBack","IconBaseTwo","TrashIcon","Modal","DashboardLayout","PageHeaderThree","router","ArrowBackIcon","CropIcon","VueCropper","FontAwesomeIcon","faTrash","faCropAlt","name","props","answer","Object","assignmentDetails","data","isMainPage","isPreviewingSnappedAnswer","isSubmitting","isShowingModal","submissionStatus","snappedAnswerPreviews","remarks","snappedAnswers","icons","crop","trash","computed","hasAnswerContent","type","content","isWrittenAnswer","isSnappedAnswer","methods","toggleSnappedAnswerPreview","onFileSelected","e","files","target","dataTransfer","length","match","generateSnappedAnswerPreview","value","handleVueCropperReady","cropper","autoCrop","clear","disable","replaced","getCroppedCanvas","maxWidth","maxHeight","fillColor","toBlob","blob","push","forEach","f","reader","FileReader","that","onload","source","result","cropping","readAsDataURL","toggleSnappedCroppingStatus","key","cropperKey","$refs","enable","vueCropperContainerStyle","style","width","display","saveCroppedSnappedAnswer","cropped","dataURL","toDataURL","replace","removeSnappedAnswer","destroy","splice","submit","$emit","status","message","mounted","created","components"],"sources":["/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/src/views/students/StudentAssignments/Answer/AnswerSave.vue"],"sourcesContent":["<template>\n\n  <dashboard-layout :content-fills-screen=\"isPreviewingSnappedAnswer\"\n                    :has-custom-bottom-bar=\"isMainPage\"\n                    :no-bottom-bar=\" isPreviewingSnappedAnswer\"\n  >\n\n    <template v-slot:pageHeader>\n      <page-header-three>\n\n        <template v-slot:leftAction>\n          <nav-back v-if=\"isMainPage\"\n                    type=\"cancel\"\n                    :to=\"{name: 'student.assignments.show'}\"\n                    class=\"w-2/7\" stroke-color=\"red-primary\"\n          />\n\n          <div @click=\"toggleSnappedAnswerPreview\"\n               v-if=\"isPreviewingSnappedAnswer\"\n          >\n            <icon-base-two class=\"w-2/7 ml-5\">\n              <arrow-back-icon/>\n            </icon-base-two>\n          </div>\n        </template>\n\n        <template v-slot:mini-title>\n          Answer\n        </template>\n\n      </page-header-three>\n    </template>\n\n    <template slot=\"content\" v-if=\"isMainPage\">\n\n      <div class=\"relative pt-40 px-6 h-full text-left text-purple-primary\">\n\n        <!-- SUBMISSION DETAIL -->\n        <div>\n          <div>\n            Your answer will be submitted to\n          </div>\n          <div class=\"font-bold mt-1\">\n            {{ assignmentDetails ? assignmentDetails.title : '' }}\n          </div>\n        </div>\n\n        <!-- VIEW SNAPPED ANSWER -->\n        <div class=\"mt-10\" v-if=\"isSnappedAnswer\">\n          <div class=\"mb-4\">\n            Your Snapped Answer\n          </div>\n          <div class=\"flex flex-col\">\n\n            <div v-for=\"(image,key) in snappedAnswerPreviews\"\n                 class=\"flex flex-col py-5 px-5 mt-2 mb-2 w-full text-lg font-normal leading-tight rounded-md border border-none appearance-none bg-gray-secondary text-purple-secondary focus:outline-none focus:shadow-outline placeholder-purple-secondary\"\n            >\n\n              <div class=\"mt-5 w-full\">\n                {{`cropper_${key}`}}\n                <vue-cropper :ref=\"`cropper_${key}`\"\n                             :container-style=\"vueCropperContainerStyle(key)\"\n                             :src=\"image.source\"\n                             alt=\"Source Image\"\n                             @ready=\"handleVueCropperReady\"\n                >\n                </vue-cropper>\n\n                <div v-if=\"image.cropping\" class=\"flex flex-row items-center mt-4 md:mt-4 \">\n                  <button @click=\"toggleSnappedCroppingStatus(key)\"\n                          class=\"flex flex-row items-center w-1/2  py-3 md:py-5 mr-1 rounded-lg bg-red-primary focus:outline-none\">\n                    <div class=\"text-white text-sm md:text-lg w-full\">\n                      Cancel\n                    </div>\n                  </button>\n                  <button @click=\"saveCroppedSnappedAnswer(key)\"\n                          class=\"flex flex-row items-center  py-3  md:py-5 w-1/2 ml-1 rounded-lg bg-green-400 focus:outline-none\">\n                    <div class=\"text-white text-sm md:text-lg w-3/4\">\n                      Done\n                    </div>\n                    <div class=\"w-1/4\">\n                      <icon-base-two class=\"w-1/2\">\n                        <crop-icon/>\n                      </icon-base-two>\n                    </div>\n                  </button>\n                </div>\n\n                <div v-else class=\"flex flex-row items-center mt-2 md:mt-4 \">\n                  <button @click=\"removeSnappedAnswer(key)\"\n                          class=\"flex flex-row items-center w-1/2  py-3 md:py-5 mr-1 rounded-lg bg-red-primary focus:outline-none\">\n                    <div class=\"text-white text-sm md:text-lg w-3/4\">\n                      Remove\n                    </div>\n                    <div class=\"w-1/4\">\n                      <font-awesome-icon class=\"w-full fa-1x text-white\" :icon=\"icons.trash\"/>\n                    </div>\n                  </button>\n                  <button @click=\"toggleSnappedCroppingStatus(key)\"\n                          class=\"flex flex-row items-center  py-3  md:py-5 w-1/2 ml-1 rounded-lg bg-purple-primary focus:outline-none\">\n                    <div class=\"text-white text-sm md:text-lg w-3/4\">\n                      Crop\n                    </div>\n                    <div class=\"w-1/4\">\n                      <font-awesome-icon class=\"w-full fa-1x text-white\" :icon=\"icons.crop\"/>\n                    </div>\n                  </button>\n                </div>\n              </div>\n\n            </div>\n\n          </div>\n\n\n          <!-- ADD MORE PHOTO -->\n          <div class=\"flex mb-4 -mx-1\">\n            <label\n                class=\"text-center pl-6 pr-2 py-5 mt-2  appearance-none border rounded-md border-none w-full text-lg font-normal leading-tight focus:outline-none focus:shadow-outline text-red-primary\">\n              + Add more photo\n              <input class=\"hidden\" type=\"file\" accept=\"image/*\" multiple @change=\"onFileSelected\">\n            </label>\n          </div>\n        </div>\n\n\n        <div class=\"mt-6\">\n          <div>\n            Your remarks\n          </div>\n          <div class=\"mt-4 h-36 \">\n            <textarea v-model=\"remarks\"\n                      class=\"resize-y text-purple-primary py-4 px-5 h-full w-full bg-gray-secondary rounded focus:outline-none placeholder-purple-secondary\"\n                      placeholder=\"Remarks\"></textarea>\n          </div>\n        </div>\n\n      </div>\n    </template>\n\n\n    <template v-slot:bottomBar>\n      <div class=\"w-full md:max-w-xl px-2\">\n        <button @click=\"submit\"\n                :disabled=\"isSubmitting\"\n                class=\"w-full font-bold rounded-full text-purple-primary text-sm bg-yellow-primary py-4 px-1 flex flex-row justify-center\">\n          Submit Answer\n        </button>\n      </div>\n    </template>\n  </dashboard-layout>\n\n</template>\n\n<script>\nimport PageTitleTwo from \"@/components/PageTitleTwo\";\nimport NavBack from \"@/components/NavBack\";\nimport IconBaseTwo from \"@/components/IconBaseTwo\";\nimport TrashIcon from \"@/components/icons/TrashIcon\";\nimport Modal from \"@/components/Modal\";\nimport DashboardLayout from \"@/views/layout/DashboardLayout\";\nimport PageHeaderThree from \"@/components/PageHeaderThree\";\nimport router from \"@/router\";\nimport ArrowBackIcon from \"@/components/icons/ArrowBackIcon\";\nimport CropIcon from \"@/components/icons/CropIcon\";\n\n// Vue Cropper\nimport VueCropper from 'vue-cropperjs';\nimport 'cropperjs/dist/cropper.css';\n\n// FONT AWESOME\nimport {FontAwesomeIcon} from '@fortawesome/vue-fontawesome'\nimport {faTrash, faCropAlt} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default {\n  name: \"AnswerSave\",\n  props: {\n    answer: Object,\n    assignmentDetails: Object,\n  },\n  data() {\n    return {\n\n      // States\n      isMainPage: true,\n      isPreviewingSnappedAnswer: false,\n      isSubmitting: false,\n      isShowingModal: false,\n      submissionStatus: null,\n\n      snappedAnswerPreviews: [],\n\n      remarks: '',\n\n      snappedAnswers: [],\n\n      // Icons\n      icons: {\n        crop: faCropAlt,\n        trash: faTrash\n      }\n    }\n  },\n  computed: {\n    hasAnswerContent() {\n      return this.answer.type !== null && this.answer.content !== '';\n    },\n    isWrittenAnswer() {\n      return this.answer.type === 'written';\n    },\n    isSnappedAnswer() {\n      return this.answer.type === 'snapped';\n    },\n  },\n  methods: {\n\n    toggleSnappedAnswerPreview() {\n      if (this.isPreviewingSnappedAnswer) {\n        this.isMainPage = true;\n        this.isPreviewingSnappedAnswer = false;\n      } else {\n        this.isMainPage = false;\n        this.isPreviewingSnappedAnswer = true;\n      }\n    },\n\n    onFileSelected(e) {\n      let files = e.target.files || e.dataTransfer.files\n\n      if (!files.length) {\n        return\n      }\n\n      if (files[0].type.match(\"image.*\")) {\n        this.generateSnappedAnswerPreview(files)\n      }\n\n      e.target.value = ''\n\n    },\n\n    handleVueCropperReady(e) {\n      let cropper = e.target.cropper;\n\n      cropper.autoCrop = false;\n\n      cropper.clear();\n      cropper.disable();\n\n      // If this is new photo uploaded, add image to snapped answers array\n      if (!cropper.replaced) {\n        cropper.getCroppedCanvas({\n          maxWidth: 720,\n          maxHeight: 720,\n          fillColor: '#fff'\n        }).toBlob((blob) => {\n          this.snappedAnswers.push(blob)\n        },'image/jpeg');\n      }\n\n\n    },\n\n    generateSnappedAnswerPreview(files) {\n      files.forEach(f => {\n\n        if (!f.type.match(\"image.*\")) {\n          return;\n        }\n\n        let reader = new FileReader();\n        let that = this;\n\n        reader.onload = function (e) {\n\n          that.snappedAnswerPreviews.push({\n            source: e.target.result,\n            cropping: false\n          });\n        }\n\n        reader.readAsDataURL(f);\n      });\n    },\n\n    toggleSnappedCroppingStatus(key) {\n      this.snappedAnswerPreviews[key].cropping = !this.snappedAnswerPreviews[key].cropping;\n\n      let cropperKey = `cropper_${key}`\n      let cropper = this.$refs[cropperKey][0];\n\n      // If cropping, enable\n      if (this.snappedAnswerPreviews[key].cropping) {\n        cropper.enable();\n      } else{\n        cropper.clear();\n        cropper.disable();\n      }\n    },\n\n    vueCropperContainerStyle(key) {\n      let style = {\n        width: '100%',\n        // display: 'none'\n      }\n\n      if (this.snappedAnswerPreviews[key].cropping) {\n        style.display = 'flex'\n      }\n      return  style;\n    },\n\n    saveCroppedSnappedAnswer(key) {\n      let cropperKey = `cropper_${key}`\n\n      let cropper = this.$refs[cropperKey][0];\n\n      let cropped =  cropper.getCroppedCanvas({\n        maxWidth: 720,\n        maxHeight: 720,\n        fillColor: '#fff'\n      });\n\n      let dataURL = cropped.toDataURL(\"image/jpeg\");\n      cropper.replace(dataURL);\n      this.snappedAnswerPreviews[key].source = dataURL;\n\n      cropped.toBlob((blob) => {\n              this.snappedAnswers[key] = blob;\n            },'image/jpeg');\n\n      this.toggleSnappedCroppingStatus(key)\n\n    },\n\n    removeSnappedAnswer(key) {\n\n      let cropperKey = `cropper_${key}`\n\n      let cropper = this.$refs[cropperKey][0];\n      cropper.destroy();\n\n      this.snappedAnswers.splice(key, 1);\n      this.snappedAnswerPreviews.splice(key, 1);\n    },\n\n    submit() {\n      if (this.isSnappedAnswer) {\n        if (this.snappedAnswers.length > 0) {\n          this.$emit('snappedAnswer', this.snappedAnswers)\n          this.$emit('submit', this.remarks)\n        } else {\n          this.$emit('error', {\n            status: true,\n            message: 'Please snap an answer!'\n          })\n        }\n      }\n\n      if (this.isWrittenAnswer) {\n        this.$emit('submit', this.remarks)\n      }\n\n    },\n\n\n  },\n  mounted() {\n\n    if (this.isSnappedAnswer) {\n      this.generateSnappedAnswerPreview(this.answer.content)\n    }\n  },\n  created() {\n    if (!this.hasAnswerContent) {\n      router.push({name: 'student.assignments.show'})\n    }\n  },\n  components: {\n    CropIcon,\n    ArrowBackIcon,\n    PageHeaderThree,\n    DashboardLayout, Modal, TrashIcon, IconBaseTwo, NavBack, PageTitleTwo,\n    FontAwesomeIcon,\n    VueCropper\n  }\n}\n</script>\n\n<style>\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}