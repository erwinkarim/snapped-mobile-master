{"ast":null,"code":"import SubmissionRepository from \"@/repositories/SubmissionRepository\";\nimport Modal from \"@/components/Modal\";\nexport default {\n  name: \"Index\",\n  components: {\n    Modal\n  },\n  props: {\n    assignmentDetails: Object\n  },\n  data() {\n    return {\n      // States\n      isShowingModal: false,\n      isSubmitting: false,\n      submissionStatus: null,\n      error: null,\n      answer: {\n        type: null,\n        content: ''\n      }\n    };\n  },\n  methods: {\n    handleWrittenAnswer(value) {\n      this.answer.type = 'written';\n      this.answer.content = value;\n    },\n    handleSnappedAnswer(value) {\n      this.answer.type = 'snapped';\n      this.answer.content = value;\n    },\n    handleSubmit(remarks) {\n      this.resetError();\n      this.isSubmitting = true;\n      this.toggleModal();\n      SubmissionRepository.store({\n        assignmentID: this.assignmentDetails.id,\n        answerType: this.answer.type,\n        answerContent: this.answer.content,\n        remarks: remarks\n      }).then(response => {\n        this.isSubmitting = false;\n        this.toggleModal();\n        if (response.data.success) {\n          this.submissionStatus = 'success';\n          this.toggleModal();\n        }\n      }).catch(error => {\n        this.isSubmitting = false;\n        this.toggleModal();\n        this.handleError({\n          status: true,\n          message: error\n        });\n      });\n    },\n    handleError(error) {\n      this.submissionStatus = 'error';\n      this.error = error.message;\n      this.toggleModal();\n    },\n    resetError() {\n      this.submissionStatus = null;\n      this.error = null;\n    },\n    toggleModal() {\n      this.isShowingModal = !this.isShowingModal;\n    }\n  }\n};","map":{"version":3,"names":["SubmissionRepository","Modal","name","components","props","assignmentDetails","Object","data","isShowingModal","isSubmitting","submissionStatus","error","answer","type","content","methods","handleWrittenAnswer","value","handleSnappedAnswer","handleSubmit","remarks","resetError","toggleModal","store","assignmentID","id","answerType","answerContent","then","response","success","catch","handleError","status","message"],"sources":["/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/src/views/students/StudentAssignments/Answer/Index.vue"],"sourcesContent":["<template>\n  <div>\n\n    <!-- OVERLAYS -->\n    <div v-if=\"isShowingModal\" @click=\"toggleModal\"\n         class=\"fixed w-full h-screen z-70 flex flex-col justify-center items-center inset-x-0 block top-0 bg-gray-primary bg-opacity-75 \">\n    </div>\n\n\n    <!-- MODAL -->\n    <div v-if=\"isShowingModal\"\n         class=\"fixed left-0 w-full items-center flex flex-col items-center justify-center top-1/4 z-70\"\n    >\n      <modal v-if=\"submissionStatus === 'success'\"\n             :modal-type=\"submissionStatus\"\n             :redirect-route=\"{name: 'student.assignments.show'}\"\n             @toggleModal=\"toggleModal\"\n             class=\"w-4/5 \"\n      >\n        <template slot=\"message\">\n          <div class=\"w-full\">\n            Got something to change? Don't worry! You can always edit your published homework\n          </div>\n        </template>\n        <template slot=\"button\">\n          Okay\n        </template>\n      </modal>\n      <modal v-if=\"submissionStatus === 'error'\"\n             :modal-type=\"submissionStatus\"\n             @toggleModal=\"toggleModal\"\n             class=\"w-4/5 \"\n      >\n        <template slot=\"message\">\n          <div class=\"w-full\">\n            {{ error }}\n          </div>\n        </template>\n        <template slot=\"button\">\n          Okay\n        </template>\n      </modal>\n      <modal v-if=\"isSubmitting\"\n             modal-type=\"no-icon\"\n             :has-button=\"false\"\n             class=\"w-4/5 \"\n      >\n        <p slot=\"message\">\n          Submitting your answer.\n          <br>\n          Please wait...\n        </p>\n      </modal>\n    </div>\n\n\n    <router-view\n        @writtenAnswer=\"handleWrittenAnswer\"\n        @snappedAnswer=\"handleSnappedAnswer\"\n        @error=\"handleError\"\n        @submit=\"handleSubmit\"\n        :assignment-details=\"assignmentDetails\"\n        :answer=\"answer\"\n    />\n  </div>\n\n\n</template>\n\n<script>\nimport SubmissionRepository from \"@/repositories/SubmissionRepository\";\nimport Modal from \"@/components/Modal\";\n\nexport default {\n  name: \"Index\",\n  components: {Modal},\n  props: {\n    assignmentDetails: Object\n  },\n  data() {\n    return {\n\n      // States\n      isShowingModal: false,\n      isSubmitting: false,\n      submissionStatus: null,\n\n      error: null,\n\n      answer: {\n        type: null,\n        content: ''\n      }\n    }\n  },\n  methods: {\n    handleWrittenAnswer(value) {\n      this.answer.type = 'written';\n      this.answer.content = value;\n    },\n    handleSnappedAnswer(value) {\n      this.answer.type = 'snapped';\n      this.answer.content = value;\n    },\n    handleSubmit(remarks) {\n\n      this.resetError();\n\n      this.isSubmitting = true;\n      this.toggleModal();\n\n      SubmissionRepository.store(\n          {\n            assignmentID: this.assignmentDetails.id,\n            answerType: this.answer.type,\n            answerContent: this.answer.content,\n            remarks: remarks,\n          })\n          .then(response => {\n\n            this.isSubmitting = false;\n            this.toggleModal();\n\n            if (response.data.success) {\n              this.submissionStatus = 'success';\n              this.toggleModal();\n            }\n          })\n          .catch(error => {\n            this.isSubmitting = false;\n            this.toggleModal();\n\n            this.handleError({\n              status: true,\n              message: error\n            })\n          })\n\n\n    },\n    handleError(error) {\n      this.submissionStatus = 'error';\n      this.error = error.message;\n      this.toggleModal();\n    },\n\n    resetError() {\n      this.submissionStatus = null;\n      this.error = null;\n    },\n\n    toggleModal() {\n      this.isShowingModal = !this.isShowingModal;\n    }\n  },\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"mappings":"AAsEA,OAAOA,oBAAmB,MAAO,qCAAqC;AACtE,OAAOC,KAAI,MAAO,oBAAoB;AAEtC,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,UAAU,EAAE;IAACF;EAAK,CAAC;EACnBG,KAAK,EAAE;IACLC,iBAAiB,EAAEC;EACrB,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MAEL;MACAC,cAAc,EAAE,KAAK;MACrBC,YAAY,EAAE,KAAK;MACnBC,gBAAgB,EAAE,IAAI;MAEtBC,KAAK,EAAE,IAAI;MAEXC,MAAM,EAAE;QACNC,IAAI,EAAE,IAAI;QACVC,OAAO,EAAE;MACX;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,mBAAmBA,CAACC,KAAK,EAAE;MACzB,IAAI,CAACL,MAAM,CAACC,IAAG,GAAI,SAAS;MAC5B,IAAI,CAACD,MAAM,CAACE,OAAM,GAAIG,KAAK;IAC7B,CAAC;IACDC,mBAAmBA,CAACD,KAAK,EAAE;MACzB,IAAI,CAACL,MAAM,CAACC,IAAG,GAAI,SAAS;MAC5B,IAAI,CAACD,MAAM,CAACE,OAAM,GAAIG,KAAK;IAC7B,CAAC;IACDE,YAAYA,CAACC,OAAO,EAAE;MAEpB,IAAI,CAACC,UAAU,EAAE;MAEjB,IAAI,CAACZ,YAAW,GAAI,IAAI;MACxB,IAAI,CAACa,WAAW,EAAE;MAElBtB,oBAAoB,CAACuB,KAAK,CACtB;QACEC,YAAY,EAAE,IAAI,CAACnB,iBAAiB,CAACoB,EAAE;QACvCC,UAAU,EAAE,IAAI,CAACd,MAAM,CAACC,IAAI;QAC5Bc,aAAa,EAAE,IAAI,CAACf,MAAM,CAACE,OAAO;QAClCM,OAAO,EAAEA;MACX,CAAC,EACAQ,IAAI,CAACC,QAAO,IAAK;QAEhB,IAAI,CAACpB,YAAW,GAAI,KAAK;QACzB,IAAI,CAACa,WAAW,EAAE;QAElB,IAAIO,QAAQ,CAACtB,IAAI,CAACuB,OAAO,EAAE;UACzB,IAAI,CAACpB,gBAAe,GAAI,SAAS;UACjC,IAAI,CAACY,WAAW,EAAE;QACpB;MACF,CAAC,EACAS,KAAK,CAACpB,KAAI,IAAK;QACd,IAAI,CAACF,YAAW,GAAI,KAAK;QACzB,IAAI,CAACa,WAAW,EAAE;QAElB,IAAI,CAACU,WAAW,CAAC;UACfC,MAAM,EAAE,IAAI;UACZC,OAAO,EAAEvB;QACX,CAAC;MACH,CAAC;IAGP,CAAC;IACDqB,WAAWA,CAACrB,KAAK,EAAE;MACjB,IAAI,CAACD,gBAAe,GAAI,OAAO;MAC/B,IAAI,CAACC,KAAI,GAAIA,KAAK,CAACuB,OAAO;MAC1B,IAAI,CAACZ,WAAW,EAAE;IACpB,CAAC;IAEDD,UAAUA,CAAA,EAAG;MACX,IAAI,CAACX,gBAAe,GAAI,IAAI;MAC5B,IAAI,CAACC,KAAI,GAAI,IAAI;IACnB,CAAC;IAEDW,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACd,cAAa,GAAI,CAAC,IAAI,CAACA,cAAc;IAC5C;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}