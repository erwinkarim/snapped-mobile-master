{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"option\", {\n  disabled: \"\",\n  value: \"\"\n}, \"Select subject\", -1 /* HOISTED */);\nconst _hoisted_2 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedSubject = $event),\n    class: \"pl-6 pr-2 py-5 mt-2 appearance-none border rounded-md border-none w-full bg-gray-secondary text-purple-secondary text-lg font-normal leading-tight focus:outline-none focus:shadow-outline placeholder-purple-secondary\"\n  }, [_hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.subjects, subject => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      value: subject.id\n    }, _toDisplayString(subject.name), 9 /* TEXT, PROPS */, _hoisted_2);\n  }), 256 /* UNKEYED_FRAGMENT */))], 512 /* NEED_PATCH */)), [[_vModelSelect, $data.selectedSubject]]);\n}","map":{"version":3,"names":["_createElementVNode","disabled","value","_createElementBlock","$data","selectedSubject","$event","class","_hoisted_1","_Fragment","_renderList","subjects","subject","id","name","_hoisted_2"],"sources":["/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/src/components/SelectSubject.vue"],"sourcesContent":["<template>\n  <select v-model=\"selectedSubject\"\n          class=\"pl-6 pr-2 py-5 mt-2  appearance-none border rounded-md border-none w-full bg-gray-secondary text-purple-secondary text-lg font-normal leading-tight focus:outline-none focus:shadow-outline placeholder-purple-secondary\">\n    <option disabled value=\"\">Select subject</option>\n    <option v-for=\"subject in subjects\" :value=\"subject.id\">{{ subject.name }}</option>\n  </select>\n</template>\n\n<script>\nimport TeacherRepository from \"@/repositories/TeacherRepository\";\nimport StudentRepository from \"@/repositories/StudentRepository\";\n\nexport default {\n  name: \"SelectSubject\",\n  props: {\n    userRole: {\n      type: String,\n      default: null\n    }\n  },\n  data() {\n    return {\n      subjects: [],\n      selectedSubject: '',\n    }\n  },\n  watch: {\n    'selectedSubject': 'emitSelectedSubject'\n  },\n  methods: {\n    getSubjects() {\n      if (this.userRole === 'teacher') {\n        TeacherRepository.getTeacherSubjects()\n            .then(response => {\n\n              if (response.data.success) {\n                const data = response.data.data\n\n                const numOfSubjects = data.length\n\n                for (let i = 0; i < numOfSubjects; i++) {\n\n                  let item = data[i];\n\n                  let subjectDetail = {\n                    id: item.subject_id,\n                    name: item.subject_name\n                  }\n\n                  this.subjects.push(subjectDetail)\n                }\n              }\n            })\n      }\n\n      if (this.userRole === 'student') {\n        StudentRepository.getSubjects()\n            .then(response => {\n\n              if (response.data.success) {\n                const data = response.data.data\n\n                const numOfSubjects = data.length\n\n                for (let i = 0; i < numOfSubjects; i++) {\n\n                  let item = data[i];\n\n                  let subjectDetail = {\n                    id: item.subject_id,\n                    name: item.subject_name\n                  }\n\n                  this.subjects.push(subjectDetail)\n                }\n              }\n            })\n      }\n    },\n\n    emitSelectedSubject() {\n      this.$emit('selectedSubject', this.selectedSubject)\n    }\n  },\n  mounted() {\n    this.getSubjects()\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"mappings":";gCAGIA,mBAAA,CAAiD;EAAzCC,QAAQ,EAAR,EAAQ;EAACC,KAAK,EAAC;GAAG,gBAAc;;;wCAF1CC,mBAAA,CAIS;+DAJQC,KAAA,CAAAC,eAAe,GAAAC,MAAA;IACxBC,KAAK,EAAC;MACZC,UAAiD,G,kBACjDL,mBAAA,CAAmFM,SAAA,QAAAC,WAAA,CAAzDN,KAAA,CAAAO,QAAQ,EAAnBC,OAAO;yBAAtBT,mBAAA,CAAmF;MAA9CD,KAAK,EAAEU,OAAO,CAACC;wBAAOD,OAAO,CAACE,IAAI,wBAAAC,UAAA;8EAHxDX,KAAA,CAAAC,eAAe,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}