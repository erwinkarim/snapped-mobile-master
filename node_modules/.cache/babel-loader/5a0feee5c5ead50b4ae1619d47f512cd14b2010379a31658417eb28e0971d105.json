{"ast":null,"code":"import moment from \"moment\";\nimport TextMultilineTruncate from \"@/components/TextMultilineTruncate\";\nimport CountdownTimer from \"@/components/CountdownTimer\";\nimport CircleProgressBar from \"@/components/CircleProgressBar\";\nexport default {\n  name: \"AssignmentCard\",\n  components: {\n    CircleProgressBar,\n    CountdownTimer,\n    TextMultilineTruncate\n  },\n  props: {\n    route: {\n      type: Object,\n      required: true\n    },\n    descriptionLines: {\n      type: Number,\n      default: 2\n    },\n    assignment: Object,\n    showMarks: {\n      type: Boolean,\n      default: false\n    },\n    userRole: {\n      type: String,\n      default: null\n    },\n    displayCountdownTimer: {\n      type: Boolean,\n      default: true\n    }\n  },\n  computed: {\n    hasMarks() {\n      return this.assignment.marks !== null && this.assignment.marks !== undefined;\n    },\n    assignmentMarks() {\n      return parseInt(this.assignment.marks.value);\n    },\n    isStudent() {\n      return this.userRole === 'student';\n    },\n    redAlertState() {\n      return this.isStudent ? this.assignment.hasSubmitted : false;\n    }\n  },\n  methods: {\n    getHumanDate(datetime) {\n      return moment(datetime, \"YYYY-MM-DD hh:mm:ss\").format(\"DD MMMM YYYY\");\n    },\n    startTimer() {\n      this.timerInterval = setInterval(() => this.timePassed += 1, 1000);\n    }\n  },\n  mounted() {\n    this.startTimer();\n  }\n};","map":{"version":3,"names":["moment","TextMultilineTruncate","CountdownTimer","CircleProgressBar","name","components","props","route","type","Object","required","descriptionLines","Number","default","assignment","showMarks","Boolean","userRole","String","displayCountdownTimer","computed","hasMarks","marks","undefined","assignmentMarks","parseInt","value","isStudent","redAlertState","hasSubmitted","methods","getHumanDate","datetime","format","startTimer","timerInterval","setInterval","timePassed","mounted"],"sources":["/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/src/components/AssignmentCard.vue"],"sourcesContent":["<template>\n  <router-link :to=\"route\"\n               class=\"max-w-sm md:max-w-2xl rounded rounded-xl justify-between overflow-hidden bg-gray-secondary flex flex-row px-3 pt-5 pb-3 mb-3\"\n  >\n\n    <div :class=\"showMarks && hasMarks ? 'w-3/4' : 'w-full' \" class=\"flex flex-col justify-between\">\n      <div class=\"flex flex-row justify-between mb-4 truncate\">\n        <div class=\"text-left text-purple-primary text-xs-plus truncate  pr-10\">\n          {{ assignment.title }}\n        </div>\n        <div class=\"w-1/4 text-right font-bold text-green-primary text-px-12\">\n          <slot name=\"topRightAction\"/>\n        </div>\n      </div>\n\n      <div class=\"flex flex-row justify-between mb-4 pr-10\">\n        <text-multiline-truncate\n            :lines=\"descriptionLines\"\n            class=\"text-left text-purple-primary text-px-10 pr-10 mb-2\"\n        >\n          {{ assignment.description }}\n        </text-multiline-truncate>\n      </div>\n\n\n      <div class=\"flex flex-row justify-around items-baseline\">\n\n        <div :class=\"hasMarks ? 'w-full' : 'w-5/7'\"\n             class=\"flex flex-row text-left text-px-10 text-purple-secondary pr-1\">\n          <div class=\"w-1/4 truncate\"> {{ assignment.subjectName }}</div>\n          <div class=\"w-1/4 truncate mx-1\"> {{ assignment.classroomName }}</div>\n          <div class=\"w-2/4\"> {{ getHumanDate(assignment.dueDatetime) }}</div>\n        </div>\n\n        <div class=\"w-2/7 md:w-1/4\" v-if=\"!hasMarks && displayCountdownTimer\">\n          <countdown-timer :due-date-time=\"assignment.dueDatetime\"\n                           :has-dynamic-background-color=\"true\"\n                           :has-clock-icon=\"true\"\n                           :disable-red-alert=\"redAlertState\"\n                           class=\"text-2xs md:text-xs \"\n          />\n        </div>\n        <div v-else class=\"w-2/7 md:w-1/4\">\n\n        </div>\n      </div>\n\n      <div class=\"flex flex-row justify-around items-baseline\">\n        <div class=\"w-full text-left text-px-10 text-purple-primary pr-1\">{{  assignment.school_name }}</div>\n      </div>\n\n    </div>\n\n\n    <div v-if=\"showMarks && hasMarks\"\n         class=\"w-1/4 text-right flex flex-row justify-end items-center font-bold text-green-primary text-px-12\">\n      <circle-progress-bar\n          :display-value=\"assignmentMarks\" :diameter=\"65\" :completed-steps=\"assignmentMarks\" :total-steps=\"100\"\n          start-color=\"green\" stroke-linecap=\"butt\"\n          inner-stroke-color=\"#F1F3F6\" :stroke-width=\"6\" :inner-stroke-width=\"6\"\n      />\n    </div>\n\n  </router-link>\n</template>\n\n<script>\nimport moment from \"moment\";\nimport TextMultilineTruncate from \"@/components/TextMultilineTruncate\";\nimport CountdownTimer from \"@/components/CountdownTimer\";\nimport CircleProgressBar from \"@/components/CircleProgressBar\";\n\nexport default {\n  name: \"AssignmentCard\",\n  components: {CircleProgressBar, CountdownTimer, TextMultilineTruncate},\n  props: {\n    route: {\n      type: Object,\n      required: true\n    },\n    descriptionLines: {\n      type: Number,\n      default: 2\n    },\n    assignment: Object,\n    showMarks: {\n      type: Boolean,\n      default: false\n    },\n    userRole: {\n      type: String,\n      default: null\n    },\n    displayCountdownTimer: {\n      type: Boolean,\n      default: true,\n    }\n  },\n  computed: {\n    hasMarks() {\n      return this.assignment.marks !== null && this.assignment.marks !== undefined;\n    },\n    assignmentMarks() {\n      return parseInt(this.assignment.marks.value);\n    },\n    isStudent() {\n      return this.userRole === 'student';\n    },\n    redAlertState() {\n      return this.isStudent ? this.assignment.hasSubmitted : false;\n    }\n  },\n  methods: {\n    getHumanDate(datetime) {\n      return moment(datetime, \"YYYY-MM-DD hh:mm:ss\").format(\"DD MMMM YYYY\")\n    },\n    startTimer() {\n      this.timerInterval = setInterval(() => (this.timePassed += 1), 1000);\n    },\n  },\n  mounted() {\n    this.startTimer()\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"mappings":"AAmEA,OAAOA,MAAK,MAAO,QAAQ;AAC3B,OAAOC,qBAAoB,MAAO,oCAAoC;AACtE,OAAOC,cAAa,MAAO,6BAA6B;AACxD,OAAOC,iBAAgB,MAAO,gCAAgC;AAE9D,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE;IAACF,iBAAiB;IAAED,cAAc;IAAED;EAAqB,CAAC;EACtEK,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,gBAAgB,EAAE;MAChBH,IAAI,EAAEI,MAAM;MACZC,OAAO,EAAE;IACX,CAAC;IACDC,UAAU,EAAEL,MAAM;IAClBM,SAAS,EAAE;MACTP,IAAI,EAAEQ,OAAO;MACbH,OAAO,EAAE;IACX,CAAC;IACDI,QAAQ,EAAE;MACRT,IAAI,EAAEU,MAAM;MACZL,OAAO,EAAE;IACX,CAAC;IACDM,qBAAqB,EAAE;MACrBX,IAAI,EAAEQ,OAAO;MACbH,OAAO,EAAE;IACX;EACF,CAAC;EACDO,QAAQ,EAAE;IACRC,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACP,UAAU,CAACQ,KAAI,KAAM,IAAG,IAAK,IAAI,CAACR,UAAU,CAACQ,KAAI,KAAMC,SAAS;IAC9E,CAAC;IACDC,eAAeA,CAAA,EAAG;MAChB,OAAOC,QAAQ,CAAC,IAAI,CAACX,UAAU,CAACQ,KAAK,CAACI,KAAK,CAAC;IAC9C,CAAC;IACDC,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACV,QAAO,KAAM,SAAS;IACpC,CAAC;IACDW,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACD,SAAQ,GAAI,IAAI,CAACb,UAAU,CAACe,YAAW,GAAI,KAAK;IAC9D;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAACC,QAAQ,EAAE;MACrB,OAAOhC,MAAM,CAACgC,QAAQ,EAAE,qBAAqB,CAAC,CAACC,MAAM,CAAC,cAAc;IACtE,CAAC;IACDC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACC,aAAY,GAAIC,WAAW,CAAC,MAAO,IAAI,CAACC,UAAS,IAAK,CAAE,EAAE,IAAI,CAAC;IACtE;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACJ,UAAU,EAAC;EAClB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}