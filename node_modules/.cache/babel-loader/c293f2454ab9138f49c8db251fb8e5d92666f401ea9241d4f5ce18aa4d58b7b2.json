{"ast":null,"code":"import TextMultilineTruncate from \"@/components/TextMultilineTruncate\";\nimport QuestionPreviewSwiper from \"@/components/QuestionPreviewSwiper\";\nimport moment from \"moment\";\nimport IconBaseTwo from \"@/components/IconBaseTwo\";\nimport ExpandImageIcon from \"@/components/icons/ExpandImageIcon\";\nimport VueMarkdown from 'vue-markdown';\nexport default {\n  name: \"AssignmentQuestionCard\",\n  props: {\n    assignment: Object,\n    meta: Object,\n    isPreviewing: Boolean\n  },\n  data() {\n    return {\n      // States\n      isReadingMore: false,\n      // Swiper slides\n      swiperDetails: null\n    };\n  },\n  computed: {\n    hasWrittenQuestion: function () {\n      return this.assignment.written_question.title !== null || this.assignment.written_question.description !== null;\n    },\n    hasSnappedQuestion: function () {\n      return this.assignment.snap_question_paths !== undefined && this.assignment.snap_question_paths.length > 0;\n    },\n    hasZoomQuestion: function () {\n      /*\n      console.log('asking hasZoomQuestion');\n      console.log('recording_path', this.assignment.recording_path);\n      console.log('recording_path is not undefined', this.assignment.recording_path !== undefined);\n      console.log('recording_path.length', this.assignment.recording_path.length > 0);\n      */\n      return this.assignment.recording_path !== undefined && this.assignment.recording_path.length > 0;\n    },\n    hasReadMore() {\n      if (this.assignment.written_question.description !== null) {\n        let screenWidth = window.innerWidth;\n        let characterCount = this.assignment.written_question.description.length;\n        if (screenWidth > 500) {\n          return characterCount > 450;\n        } else {\n          return characterCount > 250;\n        }\n      }\n      return false;\n    },\n    swiperActiveSlideNumber() {\n      return this.swiperDetails ? this.swiperDetails.activeSlideIndex + 1 : '-';\n    },\n    swiperSlidesCount() {\n      return this.swiperDetails ? this.swiperDetails.slidesCount : 0;\n    }\n  },\n  methods: {\n    handleSwiperDetails(data) {\n      this.swiperDetails = data;\n      this.emitSwiperDetails();\n    },\n    toggleReadMore() {\n      this.isReadingMore = !this.isReadingMore;\n    },\n    getHumanDate(datetime) {\n      if (datetime) {\n        return moment(datetime, \"YYYY-MM-DD hh:mm:ss\").format(\"DD MMMM YYYY\");\n      } else {\n        return '';\n      }\n    },\n    togglePreview() {\n      this.$emit('togglePreview');\n    },\n    emitSwiperDetails() {\n      this.$emit('swiperDetails', this.swiperDetails);\n    }\n  },\n  components: {\n    ExpandImageIcon,\n    IconBaseTwo,\n    QuestionPreviewSwiper,\n    TextMultilineTruncate,\n    VueMarkdown\n  }\n};","map":{"version":3,"names":["TextMultilineTruncate","QuestionPreviewSwiper","moment","IconBaseTwo","ExpandImageIcon","VueMarkdown","name","props","assignment","Object","meta","isPreviewing","Boolean","data","isReadingMore","swiperDetails","computed","hasWrittenQuestion","written_question","title","description","hasSnappedQuestion","snap_question_paths","undefined","length","hasZoomQuestion","recording_path","hasReadMore","screenWidth","window","innerWidth","characterCount","swiperActiveSlideNumber","activeSlideIndex","swiperSlidesCount","slidesCount","methods","handleSwiperDetails","emitSwiperDetails","toggleReadMore","getHumanDate","datetime","format","togglePreview","$emit","components"],"sources":["/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/src/components/AssignmentQuestionCard.vue"],"sourcesContent":["<template>\n\t<div :class=\"isPreviewing ? '' : 'px-8'\" class=\"mt-8\">\n\t\t<div :class=\"isPreviewing ? 'bg-white' : 'bg-gray-secondary rounded-2xl text-left py-8 px-6'\">\n\n\t\t\t<div v-if=\"!isPreviewing\">\n\t\t\t\t<!-- TITLE -->\n\t\t\t\t<text-multiline-truncate :lines=\"2\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t class=\"text-2xl font-semibold text-purple-primary\"\n\t\t\t\t>\n\t\t\t\t\t{{ assignment.title }}\n\t\t\t\t</text-multiline-truncate>\n\n\t\t\t\t<!-- DETAILS -->\n\t\t\t\t<div class=\"flex flex-row justify-between mt-4 text-xs-plus text-purple-secondary\">\n\t\t\t\t\t<div class=\"pr-1 w-1/3 truncate\">\n\t\t\t\t\t\t{{ meta.subjectName || '' }}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"px-1 w-1/3 truncate\">\n\t\t\t\t\t\t{{ meta.classroomName || '' }}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"px-1 w-2/5 truncate\">\n\t\t\t\t\t\t{{ getHumanDate(assignment.dueDatetime) }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"flex flex-row justify-between mt-4 text-xs-plus text-purple-secondary\">\n\t\t\t\t\t<div class=\"w-full truncate\">{{  meta.school_name }}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\n\t\t\t<!-- Written Question -->\n\t\t\t<div v-if=\"hasWrittenQuestion && !isPreviewing\"\n\t\t\t\t\t class=\"flex flex-col mt-8 text-purple-primary text-xs-plus\"\n\t\t\t>\n\n\t\t\t\t<!-- WRITTEN QUESTION TITLE -->\n\t\t\t\t<h2 v-if=\"assignment.written_question.title\"\n\t\t\t\t\t\t class=\"mb-2\"\n\t\t\t\t>\n\t\t\t\t\t{{ assignment.written_question.title }}\n\t\t\t\t</h2>\n\n\t\t\t\t<!-- WRITTEN QUESTION DESCRIPTION -->\n\t\t\t\t<div v-if=\"assignment.written_question.description\" id=\"test\" >\n\t\t\t\t\t<strong>Description: </strong><br />\n\t\t\t\t\t<VueMarkdown v-if=\"isReadingMore\" class=\"leading-relaxed\" >\n\t\t\t\t\t\t{{ assignment.written_question.description }}\n\t\t\t\t\t</VueMarkdown>\n\t\t\t\t\t<text-multiline-truncate v-else :lines=\"7\">\n\t\t\t\t\t\t{{ assignment.written_question.description }}\n\t\t\t\t\t</text-multiline-truncate>\n\t\t\t\t</div>\n\n\t\t\t\t<!-- WRITTEN QUESTION READ MORE BUTTON -->\n\t\t\t\t<button v-if=\"assignment.written_question.description && hasReadMore\"\n\t\t\t\t\t\t\t\t@click=\"toggleReadMore\"\n\t\t\t\t\t\t\t\tclass=\"flex flex-row items-center mt-6 w-1/3 text-left md:max-w-sm md:w-1/5 text-red-primary focus:outline-none\"\n\t\t\t\t>\n\t\t\t\t\t<span class=\"font-bold w-6/7\">\n\t\t\t\t\t\t{{ isReadingMore ? 'Read less' : 'Read more' }}\n\t\t\t\t\t</span>\n\t\t\t\t\t<div v-if=\"isReadingMore\" class=\"w-1/7\">\n\t\t\t\t\t\t<svg width=\"100%\" viewBox=\"0 0 10 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\td=\"M1.14511 6L4.85516 2.28995L8.56521 6L9.71021 4.85504L4.85516 -4.24441e-07L0.000117402 4.85504L1.14511 6Z\"\n\t\t\t\t\t\t\t\t\tfill=\"#F53B57\"/>\n\t\t\t\t\t\t</svg>\n\n\t\t\t\t\t</div>\n\t\t\t\t\t<div v-else class=\"w-1/7\">\n\t\t\t\t\t\t<svg width=\"100%\" viewBox=\"0 0 10 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t\t\t\t<path d=\"M8.56509 0L4.85504 3.71005L1.14499 0L0 1.14496L4.85504 6L9.71009 1.14496L8.56509 0Z\"\n\t\t\t\t\t\t\t\t\t\tfill=\"#F53B57\"/>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t</div>\n\t\t\t\t</button>\n\n\t\t\t\t<!-- REMARKS -->\n\t\t\t\t<div class=\"flex flex-col mt-8 text-purple-primary text-xs-plus\">\n\t\t\t\t\t<strong>Remarks: </strong><br />\n\t\t\t\t\t<VueMarkdown> {{ assignment.remarks }} </VueMarkdown>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t\t\t<!-- Snapped Question -->\n\t\t\t<div v-if=\"hasSnappedQuestion\"\n\t\t\t\t\t :class=\"isPreviewing ? 'mb-20' : ''\"\n\t\t\t\t\t class=\"flex flex-col mt-8 text-purple-primary text-xs-plus test\"\n\t\t\t>\n\t\t\t\t<div v-if=\"!isPreviewing\"\n\t\t\t\t\t\t class=\"flex z-30 flex-row justify-between items-center pt-4 pr-4 pb-2 md:py-4 rounded-t-2xl bg-black-primary\"\n\t\t\t\t>\n\t\t\t\t\t<div class=\"pl-4 md:pl-5 w-3/4 text-xs md:text-lg text-white\">\n\t\t\t\t\t\t{{ `Question ${swiperActiveSlideNumber} / ${swiperSlidesCount}` }}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"flex flex-row justify-end\" @click=\"togglePreview\">\n\t\t\t\t\t\t<icon-base-two class=\"w-1/8 md:w-1/8\" >\n\t\t\t\t\t\t\t<expand-image-icon stroke-color=\"white\"/>\n\t\t\t\t\t\t</icon-base-two>\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\t\t\t\t<question-preview-swiper\n\t\t\t\t\t\t:class=\"isPreviewing ? 'h-full' : 'bg-black-primary  rounded-b-2xl pb-6 pt-3 overflow-hidden '\"\n\t\t\t\t\t\t:is-previewing=\"isPreviewing\"\n\t\t\t\t\t\t:snapped-answer-paths=\"assignment.snap_question_paths\"\n\t\t\t\t\t\tv-on:swiperDetails=\"handleSwiperDetails\"\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<!-- Zoom Question -->\n\t\t\t<div v-if=\"hasZoomQuestion\"\n\t\t\t\t\t class=\"flex flex-col mt-8 text-purple-primary text-xs-plus mb-20\"\n\t\t\t>\n\t\t\t\t<div v-if=\"!isPreviewing\"\n\t\t\t\t\t\t class=\"flex z-30 flex-row justify-between items-center pt-4 pr-4 pb-2 md:py-4 rounded-t-2xl bg-black-primary\"\n\t\t\t\t>\n\t\t\t\t\t<video autoplay controls height=\"640\" width=\"854\" crossorigin>\n\t\t\t\t\t\t<!-- must ensure all recordings are in mp4 format -->\n\t\t\t\t\t\t<source :src=\"assignment.recording_path\" type=\"video/mp4\" />\n\t\t\t\t\t\tYour browser don't support video tag.\n\t\t\t\t\t</video>\n\t\t\t\t</div>\n\t\t\t\t<div v-if=\"!isPreviewing\">\n\t\t\t\t\t<p>If you unable to view the video, please try Google Chrome browser.</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport TextMultilineTruncate from \"@/components/TextMultilineTruncate\";\nimport QuestionPreviewSwiper from \"@/components/QuestionPreviewSwiper\";\nimport moment from \"moment\";\nimport IconBaseTwo from \"@/components/IconBaseTwo\";\nimport ExpandImageIcon from \"@/components/icons/ExpandImageIcon\";\nimport VueMarkdown from 'vue-markdown';\n\nexport default {\n\tname: \"AssignmentQuestionCard\",\n\tprops: {\n\t\tassignment: Object,\n\t\tmeta: Object,\n\t\tisPreviewing: Boolean,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\t// States\n\t\t\tisReadingMore: false,\n\n\t\t\t// Swiper slides\n\t\t\tswiperDetails: null\n\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWrittenQuestion: function () {\n\t\t\treturn this.assignment.written_question.title !== null || this.assignment.written_question.description !== null;\n\t\t},\n\n\t\thasSnappedQuestion: function () {\n\t\t\treturn this.assignment.snap_question_paths !== undefined && this.assignment.snap_question_paths.length > 0;\n\t\t},\n\n\t\thasZoomQuestion: function () {\n\t\t\t/*\n\t\t\tconsole.log('asking hasZoomQuestion');\n\t\t\tconsole.log('recording_path', this.assignment.recording_path);\n\t\t\tconsole.log('recording_path is not undefined', this.assignment.recording_path !== undefined);\n\t\t\tconsole.log('recording_path.length', this.assignment.recording_path.length > 0);\n\t\t\t*/\n\t\t\treturn this.assignment.recording_path !== undefined && this.assignment.recording_path.length > 0;\n\t\t},\n\n\t\thasReadMore() {\n\n\t\t\tif (this.assignment.written_question.description !== null) {\n\n\t\t\t\tlet screenWidth = window.innerWidth;\n\t\t\t\tlet characterCount = this.assignment.written_question.description.length;\n\n\t\t\t\tif (screenWidth > 500) {\n\t\t\t\t\treturn characterCount > 450;\n\t\t\t\t} else {\n\t\t\t\t\treturn characterCount > 250;\n\t\t\t\t}\n\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tswiperActiveSlideNumber() {\n\t\t\treturn this.swiperDetails ? this.swiperDetails.activeSlideIndex + 1 : '-';\n\t\t},\n\n\t\tswiperSlidesCount() {\n\t\t\treturn this.swiperDetails ? this.swiperDetails.slidesCount : 0;\n\t\t},\n\n\t},\n\tmethods: {\n\t\thandleSwiperDetails(data) {\n\t\t\tthis.swiperDetails = data\n\t\t\tthis.emitSwiperDetails()\n\t\t},\n\t\ttoggleReadMore() {\n\t\t\tthis.isReadingMore = !this.isReadingMore;\n\t\t},\n\t\tgetHumanDate(datetime) {\n\n\t\t\tif (datetime) {\n\t\t\t\treturn moment(datetime, \"YYYY-MM-DD hh:mm:ss\").format(\"DD MMMM YYYY\")\n\t\t\t} else {\n\t\t\t\treturn ''\n\t\t\t}\n\t\t},\n\t\ttogglePreview() {\n\t\t\tthis.$emit('togglePreview')\n\t\t},\n\t\temitSwiperDetails() {\n\t\t\tthis.$emit('swiperDetails', this.swiperDetails)\n\t\t}\n\t},\n\tcomponents: {ExpandImageIcon, IconBaseTwo, QuestionPreviewSwiper, TextMultilineTruncate, VueMarkdown }\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}