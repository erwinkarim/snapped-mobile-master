{"ast":null,"code":"import { renderSlot as _renderSlot, resolveComponent as _resolveComponent, normalizeStyle as _normalizeStyle, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_VueMarkdown = _resolveComponent(\"VueMarkdown\");\n  return _openBlock(), _createBlock(_component_VueMarkdown, {\n    class: \"leading-relaxed\",\n    style: _normalizeStyle($options.style)\n  }, {\n    default: _withCtx(() => [_renderSlot(_ctx.$slots, \"default\", {}, undefined, true)], undefined, true),\n    _: 3 /* FORWARDED */\n  }, 8 /* PROPS */, [\"style\"]);\n}","map":{"version":3,"names":["_createBlock","_component_VueMarkdown","class","style","_normalizeStyle","$options","_renderSlot","_ctx","$slots","undefined"],"sources":["/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/src/components/TextMultilineTruncate.vue"],"sourcesContent":["<template>\n  <VueMarkdown class=\"leading-relaxed\" :style=\"style\">\n    <slot/>\n  </VueMarkdown>\n</template>\n\n<script>\nimport VueMarkdown from 'vue-markdown';\n\nexport default {\n  name: \"TextMultilineTruncate\",\n  props: {\n    text: String,\n    lines: {\n      type: Number,\n      default: 2\n    }\n  },\n  computed: {\n    style () {\n      let value = '';\n\n      value += ' display: -webkit-box;';\n      value += ' -webkit-box-orient: vertical;';\n      value += ' overflow: hidden;';\n\n      value += ` -webkit-line-clamp: ${this.lines};`;\n\n      return value;\n    }\n  },\n  components: {\n    VueMarkdown,\n  },\n}\n</script>\n\n<style scoped>\n.multi-line-truncate {\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n</style>\n"],"mappings":";;;uBACEA,YAAA,CAEcC,sBAAA;IAFDC,KAAK,EAAC,iBAAiB;IAAEC,KAAK,EAAAC,eAAA,CAAEC,QAAA,CAAAF,KAAK;;sBAChD,MAAO,CAAPG,WAAA,CAAOC,IAAA,CAAAC,MAAA,iBAAAC,SAAA,Q"},"metadata":{},"sourceType":"module","externalDependencies":[]}