{"ast":null,"code":"import Repository from \"@/repositories/Repository\";\nconst resource = '/students';\nconst token = localStorage.getItem('token');\nexport default {\n  getStudentDetails() {\n    return Repository.post('/details', {\n      headers: {\n        Accept: \"application/json\",\n        Authorization: 'Bearer ' + token\n      }\n    });\n  },\n  getOverview(studentID) {\n    return Repository.get(`${resource}/${studentID}/overview`);\n  },\n  getRanking(studentID) {\n    return Repository.get(`${resource}/${studentID}/ranking`);\n  },\n  getMarkedAssignments(studentID) {\n    return Repository.get(`${resource}/${studentID}/assignments/marks`);\n  },\n  getBatchRanking({\n    pageNum: pageNum,\n    perPage: perPage,\n    search: search\n  }) {\n    if (!pageNum) pageNum = 1;\n    if (!perPage) perPage = 50;\n    if (!search) search = '';\n    return Repository.get(`/rankings?page=${pageNum}&per_page=${perPage}&search=${search}`);\n  },\n  getNationalRanking({\n    pageNum: pageNum,\n    perPage: perPage,\n    search: search\n  }) {\n    if (!pageNum) pageNum = 1;\n    if (!perPage) perPage = 50;\n    if (!search) search = '';\n    return Repository.get(`/national-rankings?page=${pageNum}&per_page=${perPage}&search=${search}`);\n  },\n  getClassRanking() {\n    return Repository.get(`${resource}/class-ranking`);\n  },\n  getClassTeachers({\n    pageNum: pageNum,\n    perPage: perPage\n  }) {\n    if (!pageNum) pageNum = 1;\n    if (!perPage) perPage = 50;\n    return Repository.get(`${resource}/teachers?page=${pageNum}&per_page=${perPage}`);\n  },\n  getClassmates() {\n    return Repository.get(`${resource}/classmates`);\n  },\n  getSubjects() {\n    return Repository.get(`/subjects`);\n  },\n  getUnsubmittedAssignmentSummary() {\n    return Repository.get(`${resource}/unsubmitted-assignments`);\n  }\n};","map":{"version":3,"names":["Repository","resource","token","localStorage","getItem","getStudentDetails","post","headers","Accept","Authorization","getOverview","studentID","get","getRanking","getMarkedAssignments","getBatchRanking","pageNum","perPage","search","getNationalRanking","getClassRanking","getClassTeachers","getClassmates","getSubjects","getUnsubmittedAssignmentSummary"],"sources":["/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/src/repositories/StudentRepository.js"],"sourcesContent":["import Repository from \"@/repositories/Repository\";\n\nconst resource = '/students'\nconst token = localStorage.getItem('token')\n\nexport default {\n\n\tgetStudentDetails() {\n\t\treturn Repository.post('/details', {\n\t\t\theaders: {\n\t\t\t\tAccept: \"application/json\",\n\t\t\t\tAuthorization: 'Bearer ' + token,\n\t\t\t}\n\t\t})\n\t},\n\n\tgetOverview(studentID) {\n\t\treturn Repository.get(`${resource}/${studentID}/overview`)\n\t},\n\n\tgetRanking(studentID) {\n\t\treturn Repository.get(`${resource}/${studentID}/ranking`)\n\t},\n\n\tgetMarkedAssignments(studentID) {\n\t\treturn Repository.get(`${resource}/${studentID}/assignments/marks`)\n\t},\n\n\tgetBatchRanking({pageNum: pageNum, perPage: perPage, search: search}) {\n\n\t\tif (!pageNum) pageNum = 1;\n\t\tif (!perPage) perPage = 50;\n\t\tif (!search) search = '';\n\n\t\treturn Repository.get(`/rankings?page=${pageNum}&per_page=${perPage}&search=${search}`)\n\t},\n\n\tgetNationalRanking({pageNum: pageNum, perPage: perPage, search: search}) {\n\n\t\tif (!pageNum) pageNum = 1;\n\t\tif (!perPage) perPage = 50;\n\t\tif (!search) search = '';\n\n\t\treturn Repository.get(`/national-rankings?page=${pageNum}&per_page=${perPage}&search=${search}`)\n\t},\n\n\tgetClassRanking() {\n\t\treturn Repository.get(`${resource}/class-ranking`)\n\t},\n\n\tgetClassTeachers({pageNum: pageNum, perPage: perPage}) {\n\n\t\tif (!pageNum) pageNum = 1;\n\t\tif (!perPage) perPage = 50;\n\n\t\treturn Repository.get(`${resource}/teachers?page=${pageNum}&per_page=${perPage}`)\n\t},\n\n\tgetClassmates() {\n\t\treturn Repository.get(`${resource}/classmates`)\n\t},\n\n\tgetSubjects(){\n\t\treturn Repository.get(`/subjects`)\n\t},\n\n\tgetUnsubmittedAssignmentSummary() {\n\t\treturn Repository.get(`${resource}/unsubmitted-assignments`)\n\t},\n\n}\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,2BAA2B;AAElD,MAAMC,QAAQ,GAAG,WAAW;AAC5B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AAE3C,eAAe;EAEdC,iBAAiBA,CAAA,EAAG;IACnB,OAAOL,UAAU,CAACM,IAAI,CAAC,UAAU,EAAE;MAClCC,OAAO,EAAE;QACRC,MAAM,EAAE,kBAAkB;QAC1BC,aAAa,EAAE,SAAS,GAAGP;MAC5B;IACD,CAAC,CAAC;EACH,CAAC;EAEDQ,WAAWA,CAACC,SAAS,EAAE;IACtB,OAAOX,UAAU,CAACY,GAAG,CAAE,GAAEX,QAAS,IAAGU,SAAU,WAAU,CAAC;EAC3D,CAAC;EAEDE,UAAUA,CAACF,SAAS,EAAE;IACrB,OAAOX,UAAU,CAACY,GAAG,CAAE,GAAEX,QAAS,IAAGU,SAAU,UAAS,CAAC;EAC1D,CAAC;EAEDG,oBAAoBA,CAACH,SAAS,EAAE;IAC/B,OAAOX,UAAU,CAACY,GAAG,CAAE,GAAEX,QAAS,IAAGU,SAAU,oBAAmB,CAAC;EACpE,CAAC;EAEDI,eAAeA,CAAC;IAACC,OAAO,EAAEA,OAAO;IAAEC,OAAO,EAAEA,OAAO;IAAEC,MAAM,EAAEA;EAAM,CAAC,EAAE;IAErE,IAAI,CAACF,OAAO,EAAEA,OAAO,GAAG,CAAC;IACzB,IAAI,CAACC,OAAO,EAAEA,OAAO,GAAG,EAAE;IAC1B,IAAI,CAACC,MAAM,EAAEA,MAAM,GAAG,EAAE;IAExB,OAAOlB,UAAU,CAACY,GAAG,CAAE,kBAAiBI,OAAQ,aAAYC,OAAQ,WAAUC,MAAO,EAAC,CAAC;EACxF,CAAC;EAEDC,kBAAkBA,CAAC;IAACH,OAAO,EAAEA,OAAO;IAAEC,OAAO,EAAEA,OAAO;IAAEC,MAAM,EAAEA;EAAM,CAAC,EAAE;IAExE,IAAI,CAACF,OAAO,EAAEA,OAAO,GAAG,CAAC;IACzB,IAAI,CAACC,OAAO,EAAEA,OAAO,GAAG,EAAE;IAC1B,IAAI,CAACC,MAAM,EAAEA,MAAM,GAAG,EAAE;IAExB,OAAOlB,UAAU,CAACY,GAAG,CAAE,2BAA0BI,OAAQ,aAAYC,OAAQ,WAAUC,MAAO,EAAC,CAAC;EACjG,CAAC;EAEDE,eAAeA,CAAA,EAAG;IACjB,OAAOpB,UAAU,CAACY,GAAG,CAAE,GAAEX,QAAS,gBAAe,CAAC;EACnD,CAAC;EAEDoB,gBAAgBA,CAAC;IAACL,OAAO,EAAEA,OAAO;IAAEC,OAAO,EAAEA;EAAO,CAAC,EAAE;IAEtD,IAAI,CAACD,OAAO,EAAEA,OAAO,GAAG,CAAC;IACzB,IAAI,CAACC,OAAO,EAAEA,OAAO,GAAG,EAAE;IAE1B,OAAOjB,UAAU,CAACY,GAAG,CAAE,GAAEX,QAAS,kBAAiBe,OAAQ,aAAYC,OAAQ,EAAC,CAAC;EAClF,CAAC;EAEDK,aAAaA,CAAA,EAAG;IACf,OAAOtB,UAAU,CAACY,GAAG,CAAE,GAAEX,QAAS,aAAY,CAAC;EAChD,CAAC;EAEDsB,WAAWA,CAAA,EAAE;IACZ,OAAOvB,UAAU,CAACY,GAAG,CAAE,WAAU,CAAC;EACnC,CAAC;EAEDY,+BAA+BA,CAAA,EAAG;IACjC,OAAOxB,UAAU,CAACY,GAAG,CAAE,GAAEX,QAAS,0BAAyB,CAAC;EAC7D;AAED,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}