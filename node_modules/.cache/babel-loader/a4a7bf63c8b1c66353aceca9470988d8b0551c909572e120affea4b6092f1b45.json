{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport DashboardLayout from \"@/views/layout/DashboardLayout\";\nimport NavBack from \"@/components/NavBack\";\nimport IconBase from \"@/components/IconBase\";\nimport ProfilePhoto from \"@/components/icons/ProfilePhoto\";\nimport moment from \"moment\";\nimport StudentRepository from \"@/repositories/StudentRepository\";\nimport CircleProgressBar from \"@/components/CircleProgressBar\";\nimport RankingPanel from \"@/views/students/StudentDetails/components/RankingPanel\";\nimport router from \"@/router\";\nimport PageTitleTwo from \"@/components/PageTitleTwo\";\nimport PageHeaderThree from \"@/components/PageHeaderThree\";\nimport TabBar from \"@/views/students/StudentDetails/components/TabBar\";\nimport IconBaseTwo from \"@/components/IconBaseTwo\";\nexport default {\n  name: \"StudentDetails\",\n  props: {\n    studentID: [String, Number]\n  },\n  data() {\n    return {\n      // Status\n      isLoading: false,\n      authUser: null,\n      studentDetails: '',\n      studentOverview: '',\n      path: '',\n      navBackRoute: 'home'\n    };\n  },\n  watch: {\n    '$route': 'handleRouteChange'\n  },\n  computed: {\n    handleNavBackRoute() {\n      if (this.navBackRoute === 'home') {\n        if (this.userRole === 'Student') {\n          return {\n            name: 'student.home'\n          };\n        }\n        if (this.userRole === 'Teacher') {\n          return {\n            name: 'teacher.home'\n          };\n        }\n      } else {\n        return {\n          name: this.navBackRoute.name,\n          params: this.navBackRoute.params\n        };\n      }\n    },\n    userRole() {\n      return this.authUser.role;\n    },\n    isAuthStudent() {\n      if (this.authUser.role === 'Student') {\n        return parseInt(this.authUser.id) === parseInt(this.studentID);\n      } else {\n        return null;\n      }\n    },\n    nowDate() {\n      const date = moment(this.nowDatetime, \"YYYY-MM-DD hh:mm:ss\").format('YYYY-MM-DD');\n      return date === 'Invalid date' ? moment().format('DD MMMM YYYY') : date;\n    },\n    nowTime() {\n      const time = moment(this.nowDatetime, \"YYYY-MM-DD hh:mm:ss\").format('hh:mm A');\n      return time === 'Invalid date' ? moment().format('hh:mm A') : time;\n    }\n  },\n  methods: {\n    handleRouteChange() {\n      if (this.userRole !== 'Teacher' && !this.isAuthStudent) {\n        if (this.$route.name !== 'student.profile.show') {\n          router.push({\n            name: 'student.profile.show'\n          });\n        }\n      }\n    },\n    fetchData() {\n      StudentRepository.getOverview(this.studentID).then(response => {\n        if (response.data.success) {\n          let data = response.data.data;\n          this.studentDetails = {\n            studentName: data.student_details.student_name,\n            gender: data.student_details.gender,\n            className: data.student_details.student_class,\n            contactNum: data.personal_details.contact_number,\n            email: data.personal_details.email\n          };\n          this.isLoading = true;\n        }\n      });\n    },\n    getRouteParams() {\n      this.path = this.$route.path;\n    },\n    getAuthUser() {\n      let user = this.$store.getters.getAuthUser;\n      this.authUser = {\n        id: user.id,\n        role: user.role\n      };\n    }\n  },\n  beforeRouteEnter(to, from, next) {\n    return next(vm => {\n      vm.prevRoute = from;\n    });\n  },\n  created() {\n    if (this.$route.name !== 'student.profile.show') {\n      router.push({\n        name: 'student.profile.show'\n      });\n    }\n    this.fetchData();\n    this.getAuthUser();\n  },\n  mounted() {\n    if (this.prevRoute.name) {\n      this.navBackRoute = {\n        name: this.prevRoute.name,\n        params: this.prevRoute.params\n      };\n    } else {\n      this.navBackRoute = 'home';\n    }\n  },\n  components: {\n    IconBaseTwo,\n    TabBar,\n    PageHeaderThree,\n    PageTitleTwo,\n    RankingPanel,\n    CircleProgressBar,\n    ProfilePhoto,\n    IconBase,\n    NavBack,\n    DashboardLayout\n  }\n};","map":{"version":3,"names":["DashboardLayout","NavBack","IconBase","ProfilePhoto","moment","StudentRepository","CircleProgressBar","RankingPanel","router","PageTitleTwo","PageHeaderThree","TabBar","IconBaseTwo","name","props","studentID","String","Number","data","isLoading","authUser","studentDetails","studentOverview","path","navBackRoute","watch","computed","handleNavBackRoute","userRole","params","role","isAuthStudent","parseInt","id","nowDate","date","nowDatetime","format","nowTime","time","methods","handleRouteChange","$route","push","fetchData","getOverview","then","response","success","studentName","student_details","student_name","gender","className","student_class","contactNum","personal_details","contact_number","email","getRouteParams","getAuthUser","user","$store","getters","beforeRouteEnter","to","from","next","vm","prevRoute","created","mounted","components"],"sources":["/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/src/views/students/StudentDetails/StudentDetails.vue"],"sourcesContent":["<template>\n  <dashboard-layout>\n\n    <template v-slot:pageHeader>\n      <page-header-three>\n        <template v-slot:leftAction>\n          <nav-back :to=\"handleNavBackRoute\" class=\"w-2/7\" stroke-color=\"red-primary\"/>\n        </template>\n      </page-header-three>\n    </template>\n\n    <template v-slot:content>\n      <div\n          class=\"fixed top-20 md:top-24 px-5 pt-4 z-40 bg-white w-full md:max-w-xl border-b-1/4 border-opacity-10 border-gray-100 shadow-md-soft md:shadow-none pb-4\">\n\n        <!-- SECTION: STUDENT DETAILS -->\n        <div v-if=\"isLoading\" class=\"flex flex-row items-center items-center px-2\">\n\n          <div class=\"w-3/12 mr-2\">\n            <icon-base-two>\n              <profile-photo :gender=\"studentDetails.gender\"/>\n            </icon-base-two>\n          </div>\n\n          <div class=\"flex flex-col w-full text-left w-3/5  truncate\">\n            <h1 class=\"text-purple-primary font-bold \">\n              {{ studentDetails.studentName }}\n            </h1>\n\n            <div class=\"flex flex-row text-purple-secondary text-px-13 mt-1\">\n              <span class=\"pr-6\">{{ studentDetails.className || '' }}</span>\n              <span>{{ nowDate || '' }}</span>\n            </div>\n          </div>\n        </div>\n\n        <ranking-panel class=\"mt-5\"/>\n\n        <!-- SECTION: TABS -->\n        <tab-bar\n            :user-role=\"authUser.role\"\n            :is-auth-student=\"isAuthStudent\"\n        />\n\n      </div>\n\n      <router-view class=\"top-98 relative mb-24\"\n                   :user-role=\"authUser.role\"\n                   :is-auth-student=\"isAuthStudent\"\n      />\n\n    </template>\n\n\n  </dashboard-layout>\n</template>\n\n<script>\nimport DashboardLayout from \"@/views/layout/DashboardLayout\";\nimport NavBack from \"@/components/NavBack\";\nimport IconBase from \"@/components/IconBase\";\nimport ProfilePhoto from \"@/components/icons/ProfilePhoto\";\nimport moment from \"moment\";\nimport StudentRepository from \"@/repositories/StudentRepository\";\nimport CircleProgressBar from \"@/components/CircleProgressBar\";\nimport RankingPanel from \"@/views/students/StudentDetails/components/RankingPanel\";\nimport router from \"@/router\";\nimport PageTitleTwo from \"@/components/PageTitleTwo\";\nimport PageHeaderThree from \"@/components/PageHeaderThree\";\nimport TabBar from \"@/views/students/StudentDetails/components/TabBar\";\nimport IconBaseTwo from \"@/components/IconBaseTwo\";\n\nexport default {\n  name: \"StudentDetails\",\n  props: {\n    studentID: [String, Number]\n  },\n  data() {\n    return {\n\n      // Status\n      isLoading: false,\n\n      authUser: null,\n      studentDetails: '',\n      studentOverview: '',\n      path: '',\n      navBackRoute: 'home'\n    }\n  },\n  watch: {\n    '$route': 'handleRouteChange',\n  },\n  computed: {\n    handleNavBackRoute() {\n      if (this.navBackRoute === 'home') {\n        if (this.userRole === 'Student') {\n          return {name: 'student.home'}\n        }\n        if (this.userRole === 'Teacher') {\n          return {name: 'teacher.home'}\n        }\n      } else {\n        return {name: this.navBackRoute.name, params: this.navBackRoute.params}\n      }\n    },\n    userRole() {\n      return this.authUser.role;\n    },\n    isAuthStudent() {\n      if (this.authUser.role === 'Student') {\n        return parseInt(this.authUser.id) === parseInt(this.studentID)\n      } else {\n        return null\n      }\n    },\n\n    nowDate() {\n      const date = moment(this.nowDatetime, \"YYYY-MM-DD hh:mm:ss\").format('YYYY-MM-DD')\n      return date === 'Invalid date' ? moment().format('DD MMMM YYYY') : date\n    },\n    nowTime() {\n      const time = moment(this.nowDatetime, \"YYYY-MM-DD hh:mm:ss\").format('hh:mm A')\n      return time === 'Invalid date' ? moment().format('hh:mm A') : time\n    },\n  },\n\n  methods: {\n\n    handleRouteChange() {\n      if (this.userRole !== 'Teacher' && !this.isAuthStudent) {\n        if (this.$route.name !== 'student.profile.show') {\n          router.push({name: 'student.profile.show'})\n        }\n      }\n    },\n    fetchData() {\n\n      StudentRepository.getOverview(this.studentID)\n          .then(response => {\n\n            if (response.data.success) {\n\n              let data = response.data.data;\n\n              this.studentDetails = {\n                studentName: data.student_details.student_name,\n                gender: data.student_details.gender,\n                className: data.student_details.student_class,\n                contactNum: data.personal_details.contact_number,\n                email: data.personal_details.email\n              }\n\n              this.isLoading = true;\n            }\n          })\n    },\n\n    getRouteParams() {\n      this.path = this.$route.path\n    },\n\n\n    getAuthUser() {\n      let user = this.$store.getters.getAuthUser\n\n      this.authUser = {\n        id: user.id,\n        role: user.role\n      }\n    }\n\n  },\n\n  beforeRouteEnter(to, from, next) {\n    return next(vm => {\n      vm.prevRoute = from\n    })\n  },\n\n  created() {\n    if (this.$route.name !== 'student.profile.show') {\n      router.push({name: 'student.profile.show'})\n    }\n    this.fetchData()\n    this.getAuthUser()\n  },\n  mounted() {\n    if (this.prevRoute.name) {\n      this.navBackRoute = {\n        name: this.prevRoute.name,\n        params: this.prevRoute.params\n      };\n    } else {\n      this.navBackRoute = 'home'\n    }\n  },\n  components: {\n    IconBaseTwo,\n    TabBar,\n    PageHeaderThree,\n    PageTitleTwo, RankingPanel, CircleProgressBar, ProfilePhoto, IconBase, NavBack, DashboardLayout\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}