{"ast":null,"code":"import \"core-js/modules/esnext.typed-array.to-reversed.js\";\nimport \"core-js/modules/esnext.typed-array.to-sorted.js\";\nimport \"core-js/modules/esnext.typed-array.with.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport IconBaseTwo from \"@/components/IconBaseTwo\";\nimport TrashIcon from \"@/components/icons/TrashIcon\";\nimport CameraIcon from \"@/components/icons/CameraIcon\";\nimport PenIcon from \"@/components/icons/PenIcon\";\nimport CropIcon from \"@/components/icons/CropIcon\";\nimport PhoneIcon from \"@/components/icons/PhoneIcon\";\nimport PlusIcon from \"@/components/icons/PlusIcon\";\nimport ArrowRightIcon from \"@/components/icons/ArrowRightIcon\";\nimport ZoomIcon from \"@/components/icons/ZoomIcon\";\nimport MicrophoneIcon from \"@/components/icons/MicrophoneIcon\";\nimport MicrophoneSlashIcon from \"@/components/icons/MicrophoneSlashIcon\";\nimport StopIcon from \"@/components/icons/StopIcon\";\nimport CircleIcon from \"@/components/icons/CircleIcon\";\nimport PersonToDoorIcon from \"@/components/icons/PersonToDoorIcon\";\nimport DisplayIcon from \"@/components/icons/DisplayIcon\";\nimport DisplaySlashIcon from \"@/components/icons/DisplaySlashIcon\";\nimport VideoIcon from \"@/components/icons/VideoIcon\";\nimport VideoSlashIcon from \"@/components/icons/VideoSlashIcon\";\nimport VueCropper from 'vue-cropperjs';\nimport 'cropperjs/dist/cropper.css';\nimport ZoomVideo from '@zoom/videosdk';\nimport KJUR from 'jsrsasign';\nconst genRanHex = size => [...Array(size)].map(() => Math.floor(Math.random() * 16).toString(16)).join('');\nlet stream; // zoom stream\nconst client = ZoomVideo.createClient(); // zoom client\n\nlet canvasHandler = null; // canvas / video tag to be loaded to show video cam\nlet screenHandler = null; // canvas / video tag to show screen share\nlet audioCanvas = null;\nlet audioCanvasCtx = null;\nlet mcstream = null; // canvas stream\nlet mc = null; // local media record to record zoom stream (theorically)\nlet mcMimeType = !!window.safari ? \"video/mp4\" : \"video/webm\";\nlet ms = null; // local media stream representing the canvas/video\nlet micTrack = null; // local media stream representing user's mic\nlet chunks = [];\nlet safariAudioDecode;\nlet safariAudioEncode;\nlet sessionTopic = genRanHex(6);\nlet sessionPassword = genRanHex(6);\n\n// final rending place\nlet canvasRenderHandle = null;\nlet canvasRenderHandleStream = null;\nlet canvasRenderHandleCtx = null;\n\n/*\n  some issues / features\n  1. picture-in-picture when starting zoom & share screen\n  2. mic feedback problem on chrome\n    - problem when starting recording\n  3. scope display when recording only sound\n  4. media recorder state, something get lost after a recording session.\n\n  // new plan: rebuilding the mediarecorder and zoom controls\n  1. mediarecorder needs streams \n  2. tie video/canvas tag to stream, record anything on that\n  3. tie mic as a new stream, record anything on that. (find if can resolve the feedback problem)\n*/\n\nexport default {\n  name: \"ZoomQuestionForm\",\n  data() {\n    return {\n      status: 'Ready',\n      sessionTopic,\n      sessionPassword\n    };\n  },\n  async updated() {\n    // called everytime the form gets updated. wanted to do mounted, but that will only called once.\n\n    console.log('ZoomQuestionForm updated');\n    console.log(`Using Zoom VIDEO SDK version ${ZoomVideo.VERSION}`);\n\n    /*\n      plan: \n      - check if canvas is there; if not there:\n      - to add canvas(es) or video tag based on browser\n      - setup audio waveform draw fn\n      - setup composite draw fn\n      - setup media recorder to record the composite canvas / mic\n    */\n\n    // if there already there, skip checking\n    let canvasCheck = document.querySelector('#self-view-canvas');\n    let videoCheck = document.querySelector('#self-view-video');\n\n    // check if canvas is already there, if already there, skip the rest of the step \n    if (canvasCheck !== null || videoCheck !== null) {\n      return;\n    }\n\n    // ---- SETUP THE CANVAS / MEDIA RECORDER IF IT'S NOT THERE ----\n\n    // setup the composite canvas , which will be later use for recording.\n    canvasRenderHandle = document.querySelector('#canvas-render');\n    canvasRenderHandleCtx = canvasRenderHandle.getContext('2d');\n    canvasRenderHandleStream = canvasRenderHandle.captureStream();\n\n    // add video / canvas tag based on browser and there's shared array buffer disabled\n    let theView = document.querySelector('#the-view');\n    //if(!!window.chrome && !(typeof SharedArrayBuffer === 'function')){\n    /*\n    if(navigator.userAgent.toLowerCase().indexOf('firefox') > -1){\n      // debug: trying to force firefox to use canvas\n      canvasHandler = document.createElement('canvas');\n      canvasHandler.id='self-view-canvas';\n    } else if(typeof SharedArrayBuffer === 'function'){\n    */\n    if (typeof SharedArrayBuffer === 'function') {\n      // have shared array buffer enabled\n      canvasHandler = document.createElement('canvas');\n      canvasHandler.id = 'self-view-canvas';\n    } else {\n      // doesn't have shared array buffer enable (like chrome)\n      canvasHandler = document.createElement('video');\n      canvasHandler.id = 'self-view-video';\n    }\n    canvasHandler.height = '325';\n    canvasHandler.width = '576';\n    canvasHandler.className = 'border-2 border-black h-auto h-20 w-full md:w-screen max-w-xl';\n    theView.textContent = '';\n    theView.appendChild(canvasHandler);\n\n    // add video / canvas tag for the screen share based on browser\n    let theScreen = document.querySelector('#the-screen');\n    if (!!window.chrome) {\n      screenHandler = document.createElement('video');\n      screenHandler.id = 'screen-share-video';\n    } else {\n      screenHandler = document.createElement('canvas');\n      screenHandler.id = 'screen-share-canvas';\n      screenHandler.onplay = () => {\n        console.log('screen share detected');\n      };\n    }\n    screenHandler.className = 'border-2 border-black h-auto h-20 w-full md:w-screen max-w-xl';\n    theScreen.appendChild(screenHandler);\n\n    // test: capture everything from share screen video / canvas\n    // canvasRenderHandleStream = screenHandler.captureStream();\n\n    // capture the mic, and put it in a audioContext, so we can analyse and draw\n    // also, put the stream in the final render stream, so can record things. \n    const audioContext = new AudioContext();\n    micTrack = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    micTrack.getAudioTracks()[0].enabled = false;\n    canvasRenderHandleStream.addTrack(micTrack.getAudioTracks()[0]);\n    const source = audioContext.createMediaStreamSource(micTrack);\n    const analyser = audioContext.createAnalyser();\n    analyser.fftSize = 2048;\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    analyser.getByteTimeDomainData(dataArray);\n\n    // Connect the source to be analysed\n    source.connect(analyser);\n\n    // canvas to draw the sound\n    audioCanvas = document.querySelector('#the-audio');\n    audioCanvasCtx = audioCanvas.getContext('2d');\n\n    // debug, check audio Context\n    // console.log('audioContext', audioContext);\n\n    // draw the waveform\n    function draw() {\n      requestAnimationFrame(draw);\n      analyser.getByteTimeDomainData(dataArray);\n      audioCanvasCtx.fillStyle = \"rgb(200, 200, 200)\";\n      audioCanvasCtx.fillRect(0, 0, audioCanvas.width, audioCanvas.height);\n      audioCanvasCtx.lineWidth = 2;\n      audioCanvasCtx.strokeStyle = \"rgb(0, 0, 0)\";\n      audioCanvasCtx.beginPath();\n      const sliceWidth = audioCanvas.width * 1.0 / bufferLength;\n      let x = 0;\n      for (let i = 0; i < bufferLength; i++) {\n        const v = dataArray[i] / 128.0;\n        const y = v * audioCanvas.height / 2;\n        if (i === 0) {\n          audioCanvasCtx.moveTo(x, y);\n        } else {\n          audioCanvasCtx.lineTo(x, y);\n        }\n        x += sliceWidth;\n      }\n      audioCanvasCtx.lineTo(audioCanvas.width, audioCanvas.height / 2);\n      audioCanvasCtx.stroke();\n    }\n    draw();\n\n    // draw composite based on source canvas/video\n    let drawComposite = () => {\n      //requestAnimationFrame(drawComposite);\n\n      let micOn = this.$store.state.teacherCreateAssignment.states.isMicOn;\n      let videoOn = this.$store.state.teacherCreateAssignment.states.isVideoOn;\n      let screenShareOn = this.$store.state.teacherCreateAssignment.states.isScreenShare;\n\n      // clear the picture first\n      //canvasRenderHandleCtx.clearRect(0,0, canvasRenderHandle.width, canvasRenderHandle.height);\n\n      if (videoOn && !screenShareOn) {\n        // camera on, but not screen share\n        canvasRenderHandleCtx.drawImage(canvasHandler, 0, 0, canvasRenderHandle.width, canvasRenderHandle.height);\n      } else if (!videoOn && screenShareOn) {\n        // camera off, but screen is shared\n        // need to figure out a way that doesn't produced clipping when recording\n        // canvasRenderHandleCtx.drawImage(screenHandler, 0,0 , canvasRenderHandle.width, canvasRenderHandle.height)\n        //canvasRenderHandleCtx.drawImage(screenHandler, 0, 0);\n        canvasRenderHandleCtx.drawImage(screenHandler, 0, 0, canvasRenderHandle.width, canvasRenderHandle.height);\n      } else if (videoOn && screenShareOn) {\n        // both video and screen share is on, do PiP\n        // canvasRenderHandleCtx.clearRect(0,0, canvasRenderHandle.width, canvasRenderHandle.height);\n        canvasRenderHandleCtx.drawImage(screenHandler, 0, 0, canvasRenderHandle.width, canvasRenderHandle.height);\n        canvasRenderHandleCtx.drawImage(canvasHandler, 0, 0, canvasHandler.width, canvasHandler.height, canvasRenderHandle.width * 3 / 4, canvasRenderHandle.height * 3 / 4, canvasRenderHandle.width / 4, canvasRenderHandle.height / 4);\n      } else if (micOn && !videoOn && !screenShareOn) {\n        // only the mic is on\n        canvasRenderHandleCtx.drawImage(audioCanvas, 0, 0, canvasRenderHandle.width, canvasRenderHandle.height);\n      } else {\n        // default, no input\n        canvasRenderHandleCtx.fillText(\"NO INPUT\", canvasRenderHandle.width / 2, canvasRenderHandle.height / 2);\n      }\n    };\n    // drawComposite();\n    // redraw the composite canvas 60 times / second. would like to use requestAnimationFrame, \n    // but it pauses if the browser is off focus. \n    setInterval(drawComposite, 1000 / 60);\n\n    // start building the media recorder\n    // capture what's going on in the render canvas and the mic\n    mc = new MediaRecorder(canvasRenderHandleStream, {\n      type: mcMimeType\n    });\n    mc.onstart = () => {\n      // start recording\n      console.log('mc onstart');\n    };\n    mc.onstop = e => {\n      console.log('mc onstop');\n\n      //collect all data and dump it\n      //const blob = new Blob(chunks, {type: 'video/webm'});\n      // each browser has different idea what mimeType is supported. so safari: video/mp4, firefox & chrome: video/webm\n      const blob = new Blob(chunks, {\n        type: mcMimeType\n      });\n      chunks = [];\n\n      //put the blob in a video gallery\n      console.log('pushing new blob with memeType', mcMimeType);\n      var url = URL.createObjectURL(blob);\n      // console.log('url', url);\n      var videoTag = document.createElement('video');\n      videoTag.autoplay = true;\n      videoTag.controls = true;\n      videoTag.height = 480;\n      videoTag.width = 854;\n      videoTag.src = url;\n\n      //always replace what's ever in the preview gallery\n      document.querySelector('#video-preview-gallery').textContent = '';\n      document.querySelector('#video-preview-gallery').appendChild(videoTag);\n\n      //trigger to push video content to questionDetails.zoomMeetings\n      this.$store.dispatch('teacherCreateAssignment/handleZoomQuestion', url);\n      // URL.revokeObjectURL(url);\n\n      // for debug, video content for debugging\n      // console.log('record url dump', url);\n    };\n\n    mc.ondataavailable = e => {\n      // move data from buffer to array\n      console.log('mc ondataavailable');\n\n      //pump data in the chunks array.\n      chunks.push(e.data);\n\n      // after stop `dataavilable` event run one more time\n      if (mc.state === 'recording') {\n        mc.stop();\n      }\n      this.status = \"Recording. Pushing data to cache ...\";\n    };\n  },\n  methods: {\n    async createZoomMeeting(e) {\n      //happens when create a zoom meeting clicked\n\n      console.log('create a zoom meeting');\n      this.status = \"Joining meeting ...\";\n      client.init('en-US', 'CDN');\n\n      //create session\n      // 1. generate jwt\n\n      //console.log('generate jwt');\n      const iat = Math.round((new Date().getTime() - 30000) / 1000);\n      const exp = iat + 60 * 60 * 2;\n      const oHeader = {\n        alg: 'HS256',\n        typ: 'JWT'\n      };\n      const oPayload = {\n        app_key: process.env.VUE_APP_ZOOM_VIDEO_SDK_KEY,\n        tpc: sessionTopic,\n        version: 1,\n        role_type: 1,\n        iat: iat,\n        exp: exp,\n        pwd: sessionPassword\n      };\n      const sHeader = JSON.stringify(oHeader);\n      const sPayload = JSON.stringify(oPayload);\n      const signature = KJUR.jws.JWS.sign('HS256', sHeader, sPayload, process.env.VUE_APP_ZOOM_VIDEO_SDK_SECRET);\n      //console.log('signature:', signature);\n\n      // 2. actually create the session\n      console.log('create a zoom session');\n      // await client.join('session', signature, 'erwinkarim@gmail.com', 'password').then((res) => {\n      await client.join(sessionTopic, signature, this.$store.state.authUser.email, sessionPassword).then(res => {\n        stream = client.getMediaStream();\n        console.log('res', res);\n        this.status = `Join successful. Session ID: ${sessionTopic}, Password: ${sessionPassword}`;\n\n        /*\n        console.log('stream', stream);\n        console.log('client', client);\n        console.log('sessionInfo', client.getSessionInfo());\n        console.log('clientinfo', client.getCurrentUserInfo().userId);\n        */\n      }).catch(error => {\n        this.status = \"Join Failed. Check if ad-blocker is active.\";\n        console.log('join failed; check connection or ad-blocks');\n        console.log(error);\n      });\n\n      // event listener to see when desktop Safari audio has been initialized\n      client.on('media-sdk-change', payload => {\n        if (payload.type === 'audio' && payload.result === 'success') {\n          if (payload.action === 'encode') {\n            // encode for sending audio stream (speak)\n            safariAudioEncode = true;\n          } else if (payload.action === 'decode') {\n            // decode for receiving audio stream (hear)\n            safariAudioDecode = true;\n          }\n        }\n        ;\n        if (window.safari !== undefined) {\n          // desktop Safari, check if desktop Safari audio has been initialized\n          if (safariAudioEncode && safariAudioDecode) {\n            // desktop Safari audio has been initialized\n            try {\n              // try to start audio automatically in Safari\n              stream.startAudio({\n                autoStartAudioInSafari: true\n              });\n            } catch (error) {\n              // starting audio automatically in Safari failed, retry or handle error\n              console.log(error);\n            }\n          } else {\n            // desktop Safari audio has not been initialized, retry or handle error\n            console.log('safari audio has not finished initializing');\n          }\n        }\n        ;\n      });\n      console.log('join success');\n      this.$store.commit('teacherCreateAssignment/toggleIsInZoomMeeting');\n\n      // detect 'stop sharing' controlled by the browser\n      client.on('passively-stop-share', payload => {\n        console.log('detected screen share is off', payload);\n        this.toggleShareScreenButton();\n      });\n    },\n    leaveZoomMeeting(e) {\n      // switch off camera, mic, screen share and recording if they are on\n      if (this.$store.state.teacherCreateAssignment.states.isVideoOn) {\n        this.toggleVideoButton();\n      }\n      if (this.$store.state.teacherCreateAssignment.states.isMicOn) {\n        this.toggleMicButton();\n      }\n      if (this.$store.state.teacherCreateAssignment.states.isScreenShare) {\n        this.toggleShareScreenButton();\n      }\n      if (this.$store.state.teacherCreateAssignment.states.isRecording) {\n        this.stopRecording();\n      }\n\n      // leave zoom meeting\n      client.leave(true);\n      console.log('leave success');\n      this.status = \"Left the meeting.\";\n      this.$store.commit('teacherCreateAssignment/toggleIsInZoomMeeting');\n    },\n    async toggleVideoButton() {\n      var videoState = this.$store.state.teacherCreateAssignment.states.isVideoOn;\n      if (videoState) {\n        // video is on, stop video\n        this.status = 'Camera turned off';\n        stream.stopVideo();\n        canvasRenderHandleCtx.clearRect(0, 0, canvasRenderHandle.width, canvasRenderHandle.height);\n      } else {\n        // video is off, start video\n        this.status = 'Camera turned on';\n        console.log('checking SharedArrayBuffer', typeof SharedArrayBuffer);\n        if (!!window.chrome && !(typeof SharedArrayBuffer === 'function')) {\n          // if(!(typeof SharedArrayBuffer === 'function')) {\n          // if desktop Chrome or Edge (Chromium) with SharedArrayBuffer not enabled\n          console.log('site is chrome and w/o SharedArrayBuffer');\n          console.log('trying to put video on ', canvasHandler);\n          stream.startVideo({\n            videoElement: canvasHandler\n          });\n        } else {\n          // all other browsers and desktop Chrome or Edge (Chromium) with SharedArrayBuffer enabled\n\n          console.log('other browsers or chrome w/ SharedArrayBuffer');\n          console.log('trying to put video on ', canvasHandler);\n\n          /*\n          stream.startVideo(() => {\n            stream.renderVideo(canvasHandler, client.getCurrentUserInfo().userId, 300, 200, 0, 0, 3);\n          })\n          */\n          stream.startVideo().then(() => {\n            stream.renderVideo(canvasHandler, client.getCurrentUserInfo().userId, canvasHandler.width, canvasHandler.height, 0, 0, 3).then(() => {\n              console.log('succesfully rendered video');\n            }).catch(e => {\n              console.log('error render video', e);\n            });\n          });\n        }\n        canvasRenderHandle.width = canvasHandler.width;\n        canvasRenderHandle.height = canvasHandler.height;\n      }\n      this.$store.commit('teacherCreateAssignment/toggleVideo');\n    },\n    async toggleShareScreenButton(e) {\n      /*\n        have to figure out how to do PiP when starting both video and share screen.\n        - see if i can use renderVideo fn to do this.\n      */\n      console.log('toggle share screen button pressed');\n      var screenShareState = this.$store.state.teacherCreateAssignment.states.isScreenShare;\n      if (screenShareState) {\n        console.log('turning screen share off');\n        // screen share is on, toggle off\n        stream.stopShareScreen();\n        canvasRenderHandleCtx.clearRect(0, 0, canvasRenderHandle.width, canvasRenderHandle.height);\n        this.status = 'Screen share turned off';\n      } else {\n        // screen share is off, toggle on\n        console.log('starting screen share on', screenHandler);\n        stream.startShareScreen(screenHandler).then(() => {\n          console.log(`setting the render screen to ${screenHandler.width} x ${screenHandler.height}`);\n          if (screenHandler.width == 0) {\n            canvasRenderHandle.width = 1024;\n            canvasRenderHandle.height = 800;\n          } else {\n            canvasRenderHandle.width = screenHandler.width;\n            canvasRenderHandle.height = screenHandler.height;\n          }\n        }).catch(e => {\n          console.log('error sharing screen', e);\n        });\n        this.status = 'Screen share turned on';\n      }\n\n      // update the toggle state\n      this.$store.commit('teacherCreateAssignment/toggleShareScreen');\n    },\n    async toggleMicButton(e) {\n      console.log('toggle the mic');\n      var micState = this.$store.state.teacherCreateAssignment.states.isMicOn;\n      if (micState) {\n        // mic is on, turn it off\n        stream.stopAudio();\n        micTrack.getAudioTracks()[0].enabled = false;\n        canvasRenderHandleCtx.clearRect(0, 0, canvasRenderHandle.width, canvasRenderHandle.height);\n        this.status = 'Microphone is turned off';\n      } else {\n        // mic is off, turn it on\n        stream.startAudio();\n        micTrack.getAudioTracks()[0].enabled = true;\n        this.status = 'Microphone is turned on';\n      }\n\n      // toggle the mic state\n      this.$store.commit('teacherCreateAssignment/toggleMic');\n    },\n    async startRecording() {\n      console.log('start record');\n      mc.start();\n      this.$store.commit('teacherCreateAssignment/toggleRecording');\n      this.status = 'Recording started';\n    },\n    stopRecording() {\n      console.log('stop record');\n      mc.stop();\n      this.$store.commit('teacherCreateAssignment/toggleRecording');\n      this.status = 'Recording stopped';\n    }\n  },\n  components: {\n    CropIcon,\n    PenIcon,\n    CameraIcon,\n    TrashIcon,\n    IconBaseTwo,\n    VueCropper,\n    PhoneIcon,\n    PlusIcon,\n    ArrowRightIcon,\n    ZoomIcon,\n    MicrophoneIcon,\n    MicrophoneSlashIcon,\n    StopIcon,\n    CircleIcon,\n    PersonToDoorIcon,\n    DisplayIcon,\n    DisplaySlashIcon,\n    VideoIcon,\n    VideoSlashIcon\n  }\n};","map":{"version":3,"names":["IconBaseTwo","TrashIcon","CameraIcon","PenIcon","CropIcon","PhoneIcon","PlusIcon","ArrowRightIcon","ZoomIcon","MicrophoneIcon","MicrophoneSlashIcon","StopIcon","CircleIcon","PersonToDoorIcon","DisplayIcon","DisplaySlashIcon","VideoIcon","VideoSlashIcon","VueCropper","ZoomVideo","KJUR","genRanHex","size","Array","map","Math","floor","random","toString","join","stream","client","createClient","canvasHandler","screenHandler","audioCanvas","audioCanvasCtx","mcstream","mc","mcMimeType","window","safari","ms","micTrack","chunks","safariAudioDecode","safariAudioEncode","sessionTopic","sessionPassword","canvasRenderHandle","canvasRenderHandleStream","canvasRenderHandleCtx","name","data","status","updated","console","log","VERSION","canvasCheck","document","querySelector","videoCheck","getContext","captureStream","theView","SharedArrayBuffer","createElement","id","height","width","className","textContent","appendChild","theScreen","chrome","onplay","audioContext","AudioContext","navigator","mediaDevices","getUserMedia","audio","getAudioTracks","enabled","addTrack","source","createMediaStreamSource","analyser","createAnalyser","fftSize","bufferLength","frequencyBinCount","dataArray","Uint8Array","getByteTimeDomainData","connect","draw","requestAnimationFrame","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","sliceWidth","x","i","v","y","moveTo","lineTo","stroke","drawComposite","micOn","$store","state","teacherCreateAssignment","states","isMicOn","videoOn","isVideoOn","screenShareOn","isScreenShare","drawImage","fillText","setInterval","MediaRecorder","type","onstart","onstop","e","blob","Blob","url","URL","createObjectURL","videoTag","autoplay","controls","src","dispatch","ondataavailable","push","stop","methods","createZoomMeeting","init","iat","round","Date","getTime","exp","oHeader","alg","typ","oPayload","app_key","process","env","VUE_APP_ZOOM_VIDEO_SDK_KEY","tpc","version","role_type","pwd","sHeader","JSON","stringify","sPayload","signature","jws","JWS","sign","VUE_APP_ZOOM_VIDEO_SDK_SECRET","authUser","email","then","res","getMediaStream","catch","error","on","payload","result","action","undefined","startAudio","autoStartAudioInSafari","commit","toggleShareScreenButton","leaveZoomMeeting","toggleVideoButton","toggleMicButton","isRecording","stopRecording","leave","videoState","stopVideo","clearRect","startVideo","videoElement","renderVideo","getCurrentUserInfo","userId","screenShareState","stopShareScreen","startShareScreen","micState","stopAudio","startRecording","start","components"],"sources":["/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/src/components/ZoomQuestionForm.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- FORM: Zoom Question -->\n    <div v-if=\"$store.state.teacherCreateAssignment.states.isCreatingZoomQuestion\">\n      <p>Works best in Google Chrome. Some features may not be available in other browsers.</p>\n\n      <!-- Join / leave meeting -->\n      <div class=\"flex -mx-1 mb-4\" >\n        <div class=\"px-1 w-1/2 h-28\">\n          <button @click=\"createZoomMeeting\"\n            class=\"mt-2 w-full text-lg font-normal leading-tight rounded-md border border-none appearance-none bg-gray-secondary text-purple-secondary focus:outline-none focus:shadow-outline\"\n          >\n            <div class=\"flex col-span-1 row-span-1 justify-center py-4\">\n              <icon-base-two class=\"w-12\">\n                <phone-icon class=\"w-12\"/>\n              </icon-base-two>\n            </div>\n            <div class=\"flex col-span-1 row-span-2 justify-center py-2\">\n              Join\n            </div>\n          </button>\n        </div>\n        <div class=\"px-1 w-1/2 h-28\">\n          <button @click=\"leaveZoomMeeting\"\n                  class=\"mt-2 w-full text-lg font-normal leading-tight rounded-md border border-none appearance-none bg-gray-secondary text-purple-secondary focus:outline-none focus:shadow-outline\"\n          >\n            <div class=\"flex col-span-1 row-span-1 justify-center py-4\">\n              <icon-base-two class=\"w-12\">\n                <person-to-door-icon class=\"w-12\"/>\n              </icon-base-two>\n            </div>\n            <div class=\"flex col-span-1 row-span-2 justify-center py-2\">\n              Leave\n            </div>\n          </button>\n        </div>\n      </div>\n\n      <!-- Status Bar -->\n      <div class=\"flex -mx-1 mb-4\" >\n        <div class=\"py-2 mt-2 w-full text-lg font-normal leading-tight rounded-md border border-none appearance-none bg-gray-secondary text-purple-secondary focus:outline-none focus:shadow-outline\">\n          Status: {{ status }}\n        </div>\n\n      </div>\n\n      <!-- video canvas -->\n      <p>Video panel</p>\n      <div class=\"flex -mx-1 mb-4\" >\n        <div id=\"the-view\" class=\"px-1 w-full\">\n        </div>\n      </div>\n\n      <p>Audio Waveform</p>\n      <div class=\"flex -mx-1 mb-4\">\n        <canvas id=\"the-audio\" class=\"px-1 w-full border-2 border-solid\"> </canvas>\n      </div>\n\n      <!-- screen share  video test -->\n      <p>Screen Share Panel</p>\n      <div class=\"flex -mx-1 mb-4\">\n        <div id=\"the-screen\" class=\"px-1 w-full\">\n        </div>\n      </div>\n\n      <!-- final render test -->\n      <p>Final render test</p>\n      <div class=\"flex -mx-1 mb-4\">\n        <canvas width=\"300\" height=\"150\" id=\"canvas-render\" class=\"border-2 border-black h-auto h-20 w-full md:w-screen max-w-xl \"></canvas>\n      </div>\n\n      <!-- camera and mic controls -->\n      <div class=\"flex -mx-1 mb-4\" >\n        <div class=\"px-1 w-1/3 h-28\">\n          <button @click=\"toggleVideoButton\"\n            id=\"video-button\"\n            class=\"mt-2 w-full text-lg font-normal leading-tight rounded-md border border-none appearance-none bg-gray-secondary text-purple-secondary focus:outline-none focus:shadow-outline\"\n            :disabled=\"!$store.getters['teacherCreateAssignment/hasZoomMeeting']\"\n          >\n            <div class=\"flex col-span-1 row-span-1 justify-center py-4\">\n              <icon-base-two class=\"w-12\">\n                <video-icon v-if=\"$store.state.teacherCreateAssignment.states.isVideoOn\" class=\"w-12\" />\n                <video-slash-icon v-else class=\"w-12\" />\n              </icon-base-two>\n            </div>\n            <div class=\"flex col-span-1 row-span-2 justify-center py-2\">\n              Camera\n            </div>\n          </button>\n        </div>\n        <div class=\"px-1 w-1/3 h-28\">\n          <button @click=\"toggleMicButton\"\n            id=\"mic-button\"\n            class=\"mt-2 w-full text-lg font-normal leading-tight rounded-md border border-none appearance-none bg-gray-secondary text-purple-secondary focus:outline-none focus:shadow-outline\"\n            :disabled=\"!$store.getters['teacherCreateAssignment/hasZoomMeeting']\"\n          >\n            <div class=\"flex col-span-1 row-span-1 justify-center py-4\">\n              <icon-base-two class=\"w-12\">\n                <microphone-icon v-if=\"$store.state.teacherCreateAssignment.states.isMicOn\" class=\"w-12\"/>\n                <microphone-slash-icon v-else class=\"w-12\"/>\n              </icon-base-two>\n            </div>\n            <div class=\"flex col-span-1 row-span-2 justify-center py-2\">\n              Microphone \n            </div>\n          </button>\n        </div>\n        <div class=\"px-1 w-1/3 h-28\">\n          <button @click=\"toggleShareScreenButton\"\n            id=\"screen-button\"\n            class=\"mt-2 w-full text-lg font-normal leading-tight rounded-md border border-none appearance-none bg-gray-secondary text-purple-secondary focus:outline-none focus:shadow-outline\"\n            :disabled=\"!$store.getters['teacherCreateAssignment/hasZoomMeeting']\"\n          >\n            <div class=\"flex col-span-1 row-span-1 justify-center py-4\">\n              <icon-base-two class=\"w-12\">\n                <display-icon v-if=\"$store.state.teacherCreateAssignment.states.isScreenShare\" class=\"w-12\" />\n                <display-slash-icon v-else class=\"w-12\"/>\n              </icon-base-two>\n            </div>\n            <div class=\"flex col-span-1 row-span-2 justify-center py-2\">\n              Screen\n            </div>\n          </button>\n        </div>\n      </div>\n\n      <!-- recording controls -->\n      <div class=\"flex -mx-1 mb-4\" >\n        <div class=\"px-1 w-1/2 h-28\">\n          <button @click=\"startRecording\"\n            class=\"mt-2 w-full text-lg font-normal leading-tight rounded-md border border-none appearance-none bg-gray-secondary text-purple-secondary focus:outline-none focus:shadow-outline\"\n            :disabled=\"!$store.getters['teacherCreateAssignment/hasZoomMeeting'] || $store.getters['teacherCreateAssignment/hasZoomRecording']\"\n          >\n            <div class=\"flex col-span-1 row-span-1 justify-center py-4\" :class=\"{ 'text-red-500': $store.getters['teacherCreateAssignment/hasZoomRecording'] }\">\n              <icon-base-two class=\"w-12\">\n                <circle-icon class=\"w-12\"/>\n              </icon-base-two>\n            </div>\n            <div class=\"flex col-span-1 row-span-2 justify-center py-2\">\n              Rec Start\n            </div>\n          </button>\n        </div>\n        <div class=\"px-1 w-1/2 h-28\">\n          <button @click=\"stopRecording\"\n            class=\"mt-2 w-full text-lg font-normal leading-tight rounded-md border border-none appearance-none bg-gray-secondary text-purple-secondary focus:outline-none focus:shadow-outline\"\n            :disabled=\"!$store.getters['teacherCreateAssignment/hasZoomMeeting'] || !$store.getters['teacherCreateAssignment/hasZoomRecording']\"\n          >\n            <div class=\"flex col-span-1 row-span-1 justify-center py-4\">\n              <icon-base-two class=\"w-12\">\n                <stop-icon class=\"w-12\"/>\n              </icon-base-two>\n            </div>\n            <div class=\"flex col-span-1 row-span-2 justify-center py-2\">\n              Rec Stop\n            </div>\n          </button>\n        </div>\n      </div>\n\n\n      <!-- recording gallery-->\n      <div class=\"flex -mx-1 mb-4\" >\n        <p>recording gallery here</p>\n      </div>\n      <div id=\"video-preview-gallery\" class=\"flex -mx-1 mb-4\" >\n        <div v-if=\"$store.state.teacherCreateAssignment.creatingQuestionDetails.zoomMeetings\">\n          <video\n            width=\"854\" height=\"480\"\n            controls=\"\" :src=\"$store.state.teacherCreateAssignment.creatingQuestionDetails.zoomMeetings\">\n          </video>\n        </div>\n      </div>\n\n      <div class=\"flex -mx-1 mb-4\" >\n        <p>A session by {{ $store.state.authUser.fullname }} ({{ $store.state.authUser.email }}). Session topic: {{ sessionTopic }} / session pasword: {{ sessionPassword }}</p>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport IconBaseTwo from \"@/components/IconBaseTwo\";\nimport TrashIcon from \"@/components/icons/TrashIcon\";\nimport CameraIcon from \"@/components/icons/CameraIcon\";\nimport PenIcon from \"@/components/icons/PenIcon\";\nimport CropIcon from \"@/components/icons/CropIcon\";\nimport PhoneIcon from \"@/components/icons/PhoneIcon\";\nimport PlusIcon from \"@/components/icons/PlusIcon\";\nimport ArrowRightIcon from \"@/components/icons/ArrowRightIcon\";\nimport ZoomIcon from \"@/components/icons/ZoomIcon\";\nimport MicrophoneIcon from \"@/components/icons/MicrophoneIcon\";\nimport MicrophoneSlashIcon from \"@/components/icons/MicrophoneSlashIcon\";\nimport StopIcon from \"@/components/icons/StopIcon\";\nimport CircleIcon from \"@/components/icons/CircleIcon\";\nimport PersonToDoorIcon from \"@/components/icons/PersonToDoorIcon\";\nimport DisplayIcon from \"@/components/icons/DisplayIcon\";\nimport DisplaySlashIcon from \"@/components/icons/DisplaySlashIcon\";\nimport VideoIcon from \"@/components/icons/VideoIcon\";\nimport VideoSlashIcon from \"@/components/icons/VideoSlashIcon\";\nimport VueCropper from 'vue-cropperjs';\nimport 'cropperjs/dist/cropper.css';\nimport ZoomVideo from '@zoom/videosdk';\nimport KJUR from 'jsrsasign';\n\nconst genRanHex = size => [...Array(size)].map(() => Math.floor(Math.random() * 16).toString(16)).join('');\nlet stream; // zoom stream\nconst client = ZoomVideo.createClient(); // zoom client\n\nlet canvasHandler = null; // canvas / video tag to be loaded to show video cam\nlet screenHandler = null; // canvas / video tag to show screen share\nlet audioCanvas = null;\nlet audioCanvasCtx = null;\n\nlet mcstream = null; // canvas stream\nlet mc = null; // local media record to record zoom stream (theorically)\nlet mcMimeType = !!window.safari ? \"video/mp4\" : \"video/webm\";\nlet ms = null; // local media stream representing the canvas/video\nlet micTrack = null; // local media stream representing user's mic\nlet chunks = [];\nlet safariAudioDecode;\nlet safariAudioEncode;\nlet sessionTopic = genRanHex(6);\nlet sessionPassword = genRanHex(6);\n\n// final rending place\nlet canvasRenderHandle = null;\nlet canvasRenderHandleStream = null;\nlet canvasRenderHandleCtx = null; \n\n/*\n  some issues / features\n  1. picture-in-picture when starting zoom & share screen\n  2. mic feedback problem on chrome\n    - problem when starting recording\n  3. scope display when recording only sound\n  4. media recorder state, something get lost after a recording session.\n\n  // new plan: rebuilding the mediarecorder and zoom controls\n  1. mediarecorder needs streams \n  2. tie video/canvas tag to stream, record anything on that\n  3. tie mic as a new stream, record anything on that. (find if can resolve the feedback problem)\n*/\n\nexport default {\n  name: \"ZoomQuestionForm\",\n  data () {\n    return { status: 'Ready', sessionTopic, sessionPassword };\n  }, \n  async updated() { \n    // called everytime the form gets updated. wanted to do mounted, but that will only called once.\n\n    console.log('ZoomQuestionForm updated');\n    console.log(`Using Zoom VIDEO SDK version ${ZoomVideo.VERSION}`);\n\n    /*\n      plan: \n      - check if canvas is there; if not there:\n      - to add canvas(es) or video tag based on browser\n      - setup audio waveform draw fn\n      - setup composite draw fn\n      - setup media recorder to record the composite canvas / mic\n    */\n\n    // if there already there, skip checking\n    let canvasCheck = document.querySelector('#self-view-canvas');\n    let videoCheck = document.querySelector('#self-view-video');\n\n\n    // check if canvas is already there, if already there, skip the rest of the step \n    if(canvasCheck !== null || videoCheck !== null){\n      return;\n    }\n\n    // ---- SETUP THE CANVAS / MEDIA RECORDER IF IT'S NOT THERE ----\n\n    // setup the composite canvas , which will be later use for recording.\n    canvasRenderHandle = document.querySelector('#canvas-render');\n    canvasRenderHandleCtx = canvasRenderHandle.getContext('2d');\n    canvasRenderHandleStream = canvasRenderHandle.captureStream();\n\n    // add video / canvas tag based on browser and there's shared array buffer disabled\n    let theView = document.querySelector('#the-view')\n    //if(!!window.chrome && !(typeof SharedArrayBuffer === 'function')){\n    /*\n    if(navigator.userAgent.toLowerCase().indexOf('firefox') > -1){\n      // debug: trying to force firefox to use canvas\n      canvasHandler = document.createElement('canvas');\n      canvasHandler.id='self-view-canvas';\n    } else if(typeof SharedArrayBuffer === 'function'){\n    */\n    if(typeof SharedArrayBuffer === 'function'){\n      // have shared array buffer enabled\n      canvasHandler = document.createElement('canvas');\n      canvasHandler.id='self-view-canvas';\n    } else {\n      // doesn't have shared array buffer enable (like chrome)\n      canvasHandler = document.createElement('video');\n      canvasHandler.id='self-view-video';\n    }\n    canvasHandler.height='325';\n    canvasHandler.width='576';\n    canvasHandler.className='border-2 border-black h-auto h-20 w-full md:w-screen max-w-xl';\n    theView.textContent = '';\n    theView.appendChild(canvasHandler);\n\n    // add video / canvas tag for the screen share based on browser\n    let theScreen = document.querySelector('#the-screen');\n    if(!!window.chrome){\n      screenHandler = document.createElement('video');\n      screenHandler.id = 'screen-share-video';\n    } else {\n      screenHandler = document.createElement('canvas');\n      screenHandler.id = 'screen-share-canvas';\n      screenHandler.onplay = () => {\n        console.log('screen share detected');\n      }\n    }\n    screenHandler.className='border-2 border-black h-auto h-20 w-full md:w-screen max-w-xl';\n    theScreen.appendChild(screenHandler);\n\n    // test: capture everything from share screen video / canvas\n    // canvasRenderHandleStream = screenHandler.captureStream();\n\n    // capture the mic, and put it in a audioContext, so we can analyse and draw\n    // also, put the stream in the final render stream, so can record things. \n    const audioContext = new AudioContext();\n    micTrack = await navigator.mediaDevices.getUserMedia({ audio: true });\n    micTrack.getAudioTracks()[0].enabled = false;\n    canvasRenderHandleStream.addTrack(micTrack.getAudioTracks()[0]);\n\n    const source = audioContext.createMediaStreamSource(micTrack)\n    const analyser = audioContext.createAnalyser();\n    analyser.fftSize = 2048;\n\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    analyser.getByteTimeDomainData(dataArray);\n\n    // Connect the source to be analysed\n    source.connect(analyser);\n\n    // canvas to draw the sound\n    audioCanvas = document.querySelector('#the-audio');\n    audioCanvasCtx = audioCanvas.getContext('2d');\n\n    // debug, check audio Context\n    // console.log('audioContext', audioContext);\n\n    // draw the waveform\n    function draw() {\n      requestAnimationFrame(draw);\n\n      analyser.getByteTimeDomainData(dataArray);\n\n      audioCanvasCtx.fillStyle = \"rgb(200, 200, 200)\";\n      audioCanvasCtx.fillRect(0, 0, audioCanvas.width, audioCanvas.height);\n\n      audioCanvasCtx.lineWidth = 2;\n      audioCanvasCtx.strokeStyle = \"rgb(0, 0, 0)\";\n\n      audioCanvasCtx.beginPath();\n\n      const sliceWidth = (audioCanvas.width * 1.0) / bufferLength;\n      let x = 0;\n\n      for (let i = 0; i < bufferLength; i++) {\n        const v = dataArray[i] / 128.0;\n        const y = (v * audioCanvas.height) / 2;\n\n        if (i === 0) {\n          audioCanvasCtx.moveTo(x, y);\n        } else {\n          audioCanvasCtx.lineTo(x, y);\n        }\n\n        x += sliceWidth;\n      }\n\n      audioCanvasCtx.lineTo(audioCanvas.width, audioCanvas.height / 2);\n      audioCanvasCtx.stroke();\n    }\n    draw();\n\n    // draw composite based on source canvas/video\n    let drawComposite = () => {\n      //requestAnimationFrame(drawComposite);\n\n      let micOn = this.$store.state.teacherCreateAssignment.states.isMicOn;\n      let videoOn = this.$store.state.teacherCreateAssignment.states.isVideoOn;\n      let screenShareOn = this.$store.state.teacherCreateAssignment.states.isScreenShare;\n\n      // clear the picture first\n      //canvasRenderHandleCtx.clearRect(0,0, canvasRenderHandle.width, canvasRenderHandle.height);\n\n      if (videoOn && !screenShareOn) {\n        // camera on, but not screen share\n        canvasRenderHandleCtx.drawImage(canvasHandler, 0,0, \n          canvasRenderHandle.width, canvasRenderHandle.height);\n      } else if (!videoOn && screenShareOn) {\n        // camera off, but screen is shared\n        // need to figure out a way that doesn't produced clipping when recording\n        // canvasRenderHandleCtx.drawImage(screenHandler, 0,0 , canvasRenderHandle.width, canvasRenderHandle.height)\n        //canvasRenderHandleCtx.drawImage(screenHandler, 0, 0);\n        canvasRenderHandleCtx.drawImage(screenHandler, 0,0 ,\n          canvasRenderHandle.width, canvasRenderHandle.height);\n      } else if (videoOn && screenShareOn) {\n        // both video and screen share is on, do PiP\n        // canvasRenderHandleCtx.clearRect(0,0, canvasRenderHandle.width, canvasRenderHandle.height);\n        canvasRenderHandleCtx.drawImage(screenHandler, 0,0 ,\n          canvasRenderHandle.width, canvasRenderHandle.height);\n        canvasRenderHandleCtx.drawImage(canvasHandler, \n          0,0, canvasHandler.width, canvasHandler.height,\n          canvasRenderHandle.width*3/4, canvasRenderHandle.height*3/4,\n          canvasRenderHandle.width/4, canvasRenderHandle.height/4\n        );\n      } else if (micOn && !videoOn && !screenShareOn) {\n        // only the mic is on\n        canvasRenderHandleCtx.drawImage(audioCanvas, \n          0,0, canvasRenderHandle.width, canvasRenderHandle.height\n        );\n      } else {\n        // default, no input\n        canvasRenderHandleCtx.fillText(\"NO INPUT\", canvasRenderHandle.width/2, canvasRenderHandle.height/2);\n      }\n    }; \n    // drawComposite();\n    // redraw the composite canvas 60 times / second. would like to use requestAnimationFrame, \n    // but it pauses if the browser is off focus. \n    setInterval(drawComposite, 1000/60);\n\n    // start building the media recorder\n    // capture what's going on in the render canvas and the mic\n    mc = new MediaRecorder(canvasRenderHandleStream, { type: mcMimeType });\n    mc.onstart = () => {\n      // start recording\n      console.log('mc onstart');\n    }\n    mc.onstop = (e) => {\n      console.log('mc onstop');\n\n      //collect all data and dump it\n      //const blob = new Blob(chunks, {type: 'video/webm'});\n      // each browser has different idea what mimeType is supported. so safari: video/mp4, firefox & chrome: video/webm\n      const blob = new Blob(chunks, { type: mcMimeType });\n      chunks = [];\n\n      //put the blob in a video gallery\n      console.log('pushing new blob with memeType', mcMimeType );\n      var url = URL.createObjectURL(blob);\n      // console.log('url', url);\n      var videoTag = document.createElement('video');\n      videoTag.autoplay = true;\n      videoTag.controls = true;\n      videoTag.height = 480;\n      videoTag.width = 854;\n      videoTag.src = url;\n\n      //always replace what's ever in the preview gallery\n      document.querySelector('#video-preview-gallery').textContent = '';\n      document.querySelector('#video-preview-gallery').appendChild(videoTag);\n\n\n      //trigger to push video content to questionDetails.zoomMeetings\n      this.$store.dispatch('teacherCreateAssignment/handleZoomQuestion', url);\n      // URL.revokeObjectURL(url);\n\n      // for debug, video content for debugging\n      // console.log('record url dump', url);\n    }\n    mc.ondataavailable = (e) => {\n      // move data from buffer to array\n      console.log('mc ondataavailable');\n\n      //pump data in the chunks array.\n      chunks.push(e.data);\n\n      // after stop `dataavilable` event run one more time\n      if (mc.state === 'recording') {\n          mc.stop();\n      }\n      this.status = \"Recording. Pushing data to cache ...\";\n    }\n\n  },\n  methods: {\n    async createZoomMeeting(e) {\n      //happens when create a zoom meeting clicked\n\n      console.log('create a zoom meeting');\n      this.status = \"Joining meeting ...\"\n      client.init('en-US', 'CDN');\n\n      //create session\n      // 1. generate jwt\n\n      //console.log('generate jwt');\n      const iat = Math.round((new Date().getTime() - 30000) / 1000)\n      const exp = iat + 60 * 60 * 2\n\n      const oHeader = { alg: 'HS256', typ: 'JWT' }\n\n      const oPayload = {\n        app_key: process.env.VUE_APP_ZOOM_VIDEO_SDK_KEY,\n        tpc: sessionTopic,\n        version: 1,\n        role_type: 1,\n        iat: iat,\n        exp: exp,\n        pwd: sessionPassword,\n      }\n\n      const sHeader = JSON.stringify(oHeader)\n      const sPayload = JSON.stringify(oPayload)\n      const signature = KJUR.jws.JWS.sign('HS256', sHeader, sPayload, process.env.VUE_APP_ZOOM_VIDEO_SDK_SECRET);\n      //console.log('signature:', signature);\n\n      // 2. actually create the session\n      console.log('create a zoom session');\n      // await client.join('session', signature, 'erwinkarim@gmail.com', 'password').then((res) => {\n      await client.join(sessionTopic, signature, this.$store.state.authUser.email, sessionPassword).then((res) => {\n        stream = client.getMediaStream();\n        console.log('res', res);\n        this.status = `Join successful. Session ID: ${sessionTopic}, Password: ${sessionPassword}`;\n\n        /*\n        console.log('stream', stream);\n        console.log('client', client);\n        console.log('sessionInfo', client.getSessionInfo());\n        console.log('clientinfo', client.getCurrentUserInfo().userId);\n        */\n      }).catch((error) => {\n        this.status = \"Join Failed. Check if ad-blocker is active.\";\n        console.log('join failed; check connection or ad-blocks');\n        console.log(error)\n      })\n\n      // event listener to see when desktop Safari audio has been initialized\n      client.on('media-sdk-change', (payload) => {\n        if (payload.type === 'audio' && payload.result === 'success') {\n          if (payload.action === 'encode') {\n            // encode for sending audio stream (speak)\n            safariAudioEncode = true\n          } else if (payload.action === 'decode') {\n            // decode for receiving audio stream (hear)\n            safariAudioDecode = true\n          }\n        };\n\n        if(window.safari !== undefined) {\n          // desktop Safari, check if desktop Safari audio has been initialized\n          if (safariAudioEncode && safariAudioDecode) {\n            // desktop Safari audio has been initialized\n            try {\n              // try to start audio automatically in Safari\n              stream.startAudio({ autoStartAudioInSafari: true })\n            } catch (error) {\n              // starting audio automatically in Safari failed, retry or handle error\n              console.log(error)\n            }\n          } else {\n            // desktop Safari audio has not been initialized, retry or handle error\n            console.log('safari audio has not finished initializing')\n          }\n        };\n      })\n\n      console.log('join success');\n      this.$store.commit('teacherCreateAssignment/toggleIsInZoomMeeting');\n\n      // detect 'stop sharing' controlled by the browser\n      client.on('passively-stop-share', (payload) => {\n        console.log('detected screen share is off', payload);\n        this.toggleShareScreenButton();\n      });\n\n    },\n    leaveZoomMeeting(e) {\n      // switch off camera, mic, screen share and recording if they are on\n      if(this.$store.state.teacherCreateAssignment.states.isVideoOn){\n          this.toggleVideoButton();\n      }\n      if(this.$store.state.teacherCreateAssignment.states.isMicOn){\n        this.toggleMicButton();\n      }\n      if(this.$store.state.teacherCreateAssignment.states.isScreenShare){\n        this.toggleShareScreenButton();\n      }\n      if(this.$store.state.teacherCreateAssignment.states.isRecording){\n        this.stopRecording();\n      }\n\n      // leave zoom meeting\n      client.leave(true);\n\n      console.log('leave success');\n      this.status = \"Left the meeting.\";\n      this.$store.commit('teacherCreateAssignment/toggleIsInZoomMeeting');\n    },\n    async toggleVideoButton() {\n      var videoState = this.$store.state.teacherCreateAssignment.states.isVideoOn;\n\n      if (videoState){\n        // video is on, stop video\n        this.status = 'Camera turned off';\n        stream.stopVideo();\n        canvasRenderHandleCtx.clearRect(0,0, canvasRenderHandle.width, canvasRenderHandle.height);\n      } else {\n        // video is off, start video\n        this.status = 'Camera turned on';\n\n        console.log('checking SharedArrayBuffer', typeof SharedArrayBuffer);\n        if(!!window.chrome && !(typeof SharedArrayBuffer === 'function')) {\n        // if(!(typeof SharedArrayBuffer === 'function')) {\n          // if desktop Chrome or Edge (Chromium) with SharedArrayBuffer not enabled\n          console.log('site is chrome and w/o SharedArrayBuffer');\n          console.log('trying to put video on ', canvasHandler);\n\n          stream.startVideo({ videoElement: canvasHandler });\n\n        } else {\n          // all other browsers and desktop Chrome or Edge (Chromium) with SharedArrayBuffer enabled\n\n          console.log('other browsers or chrome w/ SharedArrayBuffer')\n          console.log('trying to put video on ', canvasHandler);\n\n          /*\n          stream.startVideo(() => {\n            stream.renderVideo(canvasHandler, client.getCurrentUserInfo().userId, 300, 200, 0, 0, 3);\n          })\n          */\n         stream.startVideo().then(() => {\n          stream.renderVideo(canvasHandler, client.getCurrentUserInfo().userId,\n            canvasHandler.width, canvasHandler.height, 0, 0, 3\n          ).then(() => {\n            console.log('succesfully rendered video');\n          }).catch((e) => {\n            console.log('error render video', e);\n          });\n         })\n        }\n\n        canvasRenderHandle.width = canvasHandler.width;\n        canvasRenderHandle.height = canvasHandler.height;\n      }\n      this.$store.commit('teacherCreateAssignment/toggleVideo');\n    },\n    async toggleShareScreenButton(e) {\n      /*\n        have to figure out how to do PiP when starting both video and share screen.\n        - see if i can use renderVideo fn to do this.\n      */\n      console.log('toggle share screen button pressed');\n\n      var screenShareState = this.$store.state.teacherCreateAssignment.states.isScreenShare;\n\n      if (screenShareState) {\n        console.log('turning screen share off');\n        // screen share is on, toggle off\n        stream.stopShareScreen();\n        canvasRenderHandleCtx.clearRect(0,0, canvasRenderHandle.width, canvasRenderHandle.height);\n        this.status = 'Screen share turned off';\n      } else {\n        // screen share is off, toggle on\n        console.log('starting screen share on', screenHandler);\n        stream.startShareScreen(screenHandler).then(() => {\n          console.log(`setting the render screen to ${screenHandler.width} x ${screenHandler.height}`)\n          if(screenHandler.width == 0) {\n            canvasRenderHandle.width=1024;\n            canvasRenderHandle.height=800;\n\n          } else {\n            canvasRenderHandle.width = screenHandler.width;\n            canvasRenderHandle.height = screenHandler.height;\n          }\n        }).catch((e) => {\n          console.log('error sharing screen', e);\n        });\n        this.status = 'Screen share turned on';\n\n      }\n\n      // update the toggle state\n      this.$store.commit('teacherCreateAssignment/toggleShareScreen');\n\n    },\n    async toggleMicButton(e){\n      console.log('toggle the mic');\n\n      var micState = this.$store.state.teacherCreateAssignment.states.isMicOn;\n\n      if (micState) {\n        // mic is on, turn it off\n        stream.stopAudio();\n        micTrack.getAudioTracks()[0].enabled = false;\n        canvasRenderHandleCtx.clearRect(0,0, canvasRenderHandle.width, canvasRenderHandle.height);\n        this.status = 'Microphone is turned off';\n      } else {\n        // mic is off, turn it on\n        stream.startAudio();\n        micTrack.getAudioTracks()[0].enabled = true;\n        this.status = 'Microphone is turned on';\n      }\n\n      // toggle the mic state\n      this.$store.commit('teacherCreateAssignment/toggleMic');\n    },\n    async startRecording(){\n      console.log('start record');\n\n      mc.start();\n\n      this.$store.commit('teacherCreateAssignment/toggleRecording');\n      this.status = 'Recording started';\n    },\n    stopRecording(){\n      console.log('stop record');\n\n      mc.stop();\n\n      this.$store.commit('teacherCreateAssignment/toggleRecording');\n      this.status = 'Recording stopped';\n    },\n  },\n  components: {\n    CropIcon, PenIcon, CameraIcon, TrashIcon, IconBaseTwo,\n    VueCropper, PhoneIcon, PlusIcon, ArrowRightIcon, ZoomIcon,\n    MicrophoneIcon, MicrophoneSlashIcon, StopIcon, CircleIcon, PersonToDoorIcon, \n    DisplayIcon, DisplaySlashIcon, VideoIcon, VideoSlashIcon,\n  },\n\n};\n\n</script>\n\n<style scoped>\n\n</style>\n"],"mappings":";;;;AAuLA,OAAOA,WAAU,MAAO,0BAA0B;AAClD,OAAOC,SAAQ,MAAO,8BAA8B;AACpD,OAAOC,UAAS,MAAO,+BAA+B;AACtD,OAAOC,OAAM,MAAO,4BAA4B;AAChD,OAAOC,QAAO,MAAO,6BAA6B;AAClD,OAAOC,SAAQ,MAAO,8BAA8B;AACpD,OAAOC,QAAO,MAAO,6BAA6B;AAClD,OAAOC,cAAa,MAAO,mCAAmC;AAC9D,OAAOC,QAAO,MAAO,6BAA6B;AAClD,OAAOC,cAAa,MAAO,mCAAmC;AAC9D,OAAOC,mBAAkB,MAAO,wCAAwC;AACxE,OAAOC,QAAO,MAAO,6BAA6B;AAClD,OAAOC,UAAS,MAAO,+BAA+B;AACtD,OAAOC,gBAAe,MAAO,qCAAqC;AAClE,OAAOC,WAAU,MAAO,gCAAgC;AACxD,OAAOC,gBAAe,MAAO,qCAAqC;AAClE,OAAOC,SAAQ,MAAO,8BAA8B;AACpD,OAAOC,cAAa,MAAO,mCAAmC;AAC9D,OAAOC,UAAS,MAAO,eAAe;AACtC,OAAO,4BAA4B;AACnC,OAAOC,SAAQ,MAAO,gBAAgB;AACtC,OAAOC,IAAG,MAAO,WAAW;AAE5B,MAAMC,SAAQ,GAAIC,IAAG,IAAK,CAAC,GAAGC,KAAK,CAACD,IAAI,CAAC,CAAC,CAACE,GAAG,CAAC,MAAMC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAC,GAAI,EAAE,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;AAC1G,IAAIC,MAAM,EAAE;AACZ,MAAMC,MAAK,GAAIZ,SAAS,CAACa,YAAY,EAAE,EAAE;;AAEzC,IAAIC,aAAY,GAAI,IAAI,EAAE;AAC1B,IAAIC,aAAY,GAAI,IAAI,EAAE;AAC1B,IAAIC,WAAU,GAAI,IAAI;AACtB,IAAIC,cAAa,GAAI,IAAI;AAEzB,IAAIC,QAAO,GAAI,IAAI,EAAE;AACrB,IAAIC,EAAC,GAAI,IAAI,EAAE;AACf,IAAIC,UAAS,GAAI,CAAC,CAACC,MAAM,CAACC,MAAK,GAAI,WAAU,GAAI,YAAY;AAC7D,IAAIC,EAAC,GAAI,IAAI,EAAE;AACf,IAAIC,QAAO,GAAI,IAAI,EAAE;AACrB,IAAIC,MAAK,GAAI,EAAE;AACf,IAAIC,iBAAiB;AACrB,IAAIC,iBAAiB;AACrB,IAAIC,YAAW,GAAI1B,SAAS,CAAC,CAAC,CAAC;AAC/B,IAAI2B,eAAc,GAAI3B,SAAS,CAAC,CAAC,CAAC;;AAElC;AACA,IAAI4B,kBAAiB,GAAI,IAAI;AAC7B,IAAIC,wBAAuB,GAAI,IAAI;AACnC,IAAIC,qBAAoB,GAAI,IAAI;;AAEhC;;;;;;;;;;;;AAYA;;AAEA,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,IAAGA,CAAA,EAAK;IACN,OAAO;MAAEC,MAAM,EAAE,OAAO;MAAEP,YAAY;MAAEC;IAAgB,CAAC;EAC3D,CAAC;EACD,MAAMO,OAAOA,CAAA,EAAG;IACd;;IAEAC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACvCD,OAAO,CAACC,GAAG,CAAE,gCAA+BtC,SAAS,CAACuC,OAAQ,EAAC,CAAC;;IAEhE;;;;;;;;;IASA;IACA,IAAIC,WAAU,GAAIC,QAAQ,CAACC,aAAa,CAAC,mBAAmB,CAAC;IAC7D,IAAIC,UAAS,GAAIF,QAAQ,CAACC,aAAa,CAAC,kBAAkB,CAAC;;IAG3D;IACA,IAAGF,WAAU,KAAM,IAAG,IAAKG,UAAS,KAAM,IAAI,EAAC;MAC7C;IACF;;IAEA;;IAEA;IACAb,kBAAiB,GAAIW,QAAQ,CAACC,aAAa,CAAC,gBAAgB,CAAC;IAC7DV,qBAAoB,GAAIF,kBAAkB,CAACc,UAAU,CAAC,IAAI,CAAC;IAC3Db,wBAAuB,GAAID,kBAAkB,CAACe,aAAa,EAAE;;IAE7D;IACA,IAAIC,OAAM,GAAIL,QAAQ,CAACC,aAAa,CAAC,WAAW;IAChD;IACA;;;;;;;IAOA,IAAG,OAAOK,iBAAgB,KAAM,UAAU,EAAC;MACzC;MACAjC,aAAY,GAAI2B,QAAQ,CAACO,aAAa,CAAC,QAAQ,CAAC;MAChDlC,aAAa,CAACmC,EAAE,GAAC,kBAAkB;IACrC,OAAO;MACL;MACAnC,aAAY,GAAI2B,QAAQ,CAACO,aAAa,CAAC,OAAO,CAAC;MAC/ClC,aAAa,CAACmC,EAAE,GAAC,iBAAiB;IACpC;IACAnC,aAAa,CAACoC,MAAM,GAAC,KAAK;IAC1BpC,aAAa,CAACqC,KAAK,GAAC,KAAK;IACzBrC,aAAa,CAACsC,SAAS,GAAC,+DAA+D;IACvFN,OAAO,CAACO,WAAU,GAAI,EAAE;IACxBP,OAAO,CAACQ,WAAW,CAACxC,aAAa,CAAC;;IAElC;IACA,IAAIyC,SAAQ,GAAId,QAAQ,CAACC,aAAa,CAAC,aAAa,CAAC;IACrD,IAAG,CAAC,CAACrB,MAAM,CAACmC,MAAM,EAAC;MACjBzC,aAAY,GAAI0B,QAAQ,CAACO,aAAa,CAAC,OAAO,CAAC;MAC/CjC,aAAa,CAACkC,EAAC,GAAI,oBAAoB;IACzC,OAAO;MACLlC,aAAY,GAAI0B,QAAQ,CAACO,aAAa,CAAC,QAAQ,CAAC;MAChDjC,aAAa,CAACkC,EAAC,GAAI,qBAAqB;MACxClC,aAAa,CAAC0C,MAAK,GAAI,MAAM;QAC3BpB,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACtC;IACF;IACAvB,aAAa,CAACqC,SAAS,GAAC,+DAA+D;IACvFG,SAAS,CAACD,WAAW,CAACvC,aAAa,CAAC;;IAEpC;IACA;;IAEA;IACA;IACA,MAAM2C,YAAW,GAAI,IAAIC,YAAY,EAAE;IACvCnC,QAAO,GAAI,MAAMoC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACrEvC,QAAQ,CAACwC,cAAc,EAAE,CAAC,CAAC,CAAC,CAACC,OAAM,GAAI,KAAK;IAC5ClC,wBAAwB,CAACmC,QAAQ,CAAC1C,QAAQ,CAACwC,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC;IAE/D,MAAMG,MAAK,GAAIT,YAAY,CAACU,uBAAuB,CAAC5C,QAAQ;IAC5D,MAAM6C,QAAO,GAAIX,YAAY,CAACY,cAAc,EAAE;IAC9CD,QAAQ,CAACE,OAAM,GAAI,IAAI;IAEvB,MAAMC,YAAW,GAAIH,QAAQ,CAACI,iBAAiB;IAC/C,MAAMC,SAAQ,GAAI,IAAIC,UAAU,CAACH,YAAY,CAAC;IAC9CH,QAAQ,CAACO,qBAAqB,CAACF,SAAS,CAAC;;IAEzC;IACAP,MAAM,CAACU,OAAO,CAACR,QAAQ,CAAC;;IAExB;IACArD,WAAU,GAAIyB,QAAQ,CAACC,aAAa,CAAC,YAAY,CAAC;IAClDzB,cAAa,GAAID,WAAW,CAAC4B,UAAU,CAAC,IAAI,CAAC;;IAE7C;IACA;;IAEA;IACA,SAASkC,IAAIA,CAAA,EAAG;MACdC,qBAAqB,CAACD,IAAI,CAAC;MAE3BT,QAAQ,CAACO,qBAAqB,CAACF,SAAS,CAAC;MAEzCzD,cAAc,CAAC+D,SAAQ,GAAI,oBAAoB;MAC/C/D,cAAc,CAACgE,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEjE,WAAW,CAACmC,KAAK,EAAEnC,WAAW,CAACkC,MAAM,CAAC;MAEpEjC,cAAc,CAACiE,SAAQ,GAAI,CAAC;MAC5BjE,cAAc,CAACkE,WAAU,GAAI,cAAc;MAE3ClE,cAAc,CAACmE,SAAS,EAAE;MAE1B,MAAMC,UAAS,GAAKrE,WAAW,CAACmC,KAAI,GAAI,GAAG,GAAIqB,YAAY;MAC3D,IAAIc,CAAA,GAAI,CAAC;MAET,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAIf,YAAY,EAAEe,CAAC,EAAE,EAAE;QACrC,MAAMC,CAAA,GAAId,SAAS,CAACa,CAAC,IAAI,KAAK;QAC9B,MAAME,CAAA,GAAKD,CAAA,GAAIxE,WAAW,CAACkC,MAAM,GAAI,CAAC;QAEtC,IAAIqC,CAAA,KAAM,CAAC,EAAE;UACXtE,cAAc,CAACyE,MAAM,CAACJ,CAAC,EAAEG,CAAC,CAAC;QAC7B,OAAO;UACLxE,cAAc,CAAC0E,MAAM,CAACL,CAAC,EAAEG,CAAC,CAAC;QAC7B;QAEAH,CAAA,IAAKD,UAAU;MACjB;MAEApE,cAAc,CAAC0E,MAAM,CAAC3E,WAAW,CAACmC,KAAK,EAAEnC,WAAW,CAACkC,MAAK,GAAI,CAAC,CAAC;MAChEjC,cAAc,CAAC2E,MAAM,EAAE;IACzB;IACAd,IAAI,EAAE;;IAEN;IACA,IAAIe,aAAY,GAAIA,CAAA,KAAM;MACxB;;MAEA,IAAIC,KAAI,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,uBAAuB,CAACC,MAAM,CAACC,OAAO;MACpE,IAAIC,OAAM,GAAI,IAAI,CAACL,MAAM,CAACC,KAAK,CAACC,uBAAuB,CAACC,MAAM,CAACG,SAAS;MACxE,IAAIC,aAAY,GAAI,IAAI,CAACP,MAAM,CAACC,KAAK,CAACC,uBAAuB,CAACC,MAAM,CAACK,aAAa;;MAElF;MACA;;MAEA,IAAIH,OAAM,IAAK,CAACE,aAAa,EAAE;QAC7B;QACAtE,qBAAqB,CAACwE,SAAS,CAAC1F,aAAa,EAAE,CAAC,EAAC,CAAC,EAChDgB,kBAAkB,CAACqB,KAAK,EAAErB,kBAAkB,CAACoB,MAAM,CAAC;MACxD,OAAO,IAAI,CAACkD,OAAM,IAAKE,aAAa,EAAE;QACpC;QACA;QACA;QACA;QACAtE,qBAAqB,CAACwE,SAAS,CAACzF,aAAa,EAAE,CAAC,EAAC,GAC/Ce,kBAAkB,CAACqB,KAAK,EAAErB,kBAAkB,CAACoB,MAAM,CAAC;MACxD,OAAO,IAAIkD,OAAM,IAAKE,aAAa,EAAE;QACnC;QACA;QACAtE,qBAAqB,CAACwE,SAAS,CAACzF,aAAa,EAAE,CAAC,EAAC,GAC/Ce,kBAAkB,CAACqB,KAAK,EAAErB,kBAAkB,CAACoB,MAAM,CAAC;QACtDlB,qBAAqB,CAACwE,SAAS,CAAC1F,aAAa,EAC3C,CAAC,EAAC,CAAC,EAAEA,aAAa,CAACqC,KAAK,EAAErC,aAAa,CAACoC,MAAM,EAC9CpB,kBAAkB,CAACqB,KAAK,GAAC,CAAC,GAAC,CAAC,EAAErB,kBAAkB,CAACoB,MAAM,GAAC,CAAC,GAAC,CAAC,EAC3DpB,kBAAkB,CAACqB,KAAK,GAAC,CAAC,EAAErB,kBAAkB,CAACoB,MAAM,GAAC,EACvD;MACH,OAAO,IAAI4C,KAAI,IAAK,CAACM,OAAM,IAAK,CAACE,aAAa,EAAE;QAC9C;QACAtE,qBAAqB,CAACwE,SAAS,CAACxF,WAAW,EACzC,CAAC,EAAC,CAAC,EAAEc,kBAAkB,CAACqB,KAAK,EAAErB,kBAAkB,CAACoB,MAAK,CACxD;MACH,OAAO;QACL;QACAlB,qBAAqB,CAACyE,QAAQ,CAAC,UAAU,EAAE3E,kBAAkB,CAACqB,KAAK,GAAC,CAAC,EAAErB,kBAAkB,CAACoB,MAAM,GAAC,CAAC,CAAC;MACrG;IACF,CAAC;IACD;IACA;IACA;IACAwD,WAAW,CAACb,aAAa,EAAE,IAAI,GAAC,EAAE,CAAC;;IAEnC;IACA;IACA1E,EAAC,GAAI,IAAIwF,aAAa,CAAC5E,wBAAwB,EAAE;MAAE6E,IAAI,EAAExF;IAAW,CAAC,CAAC;IACtED,EAAE,CAAC0F,OAAM,GAAI,MAAM;MACjB;MACAxE,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IAC3B;IACAnB,EAAE,CAAC2F,MAAK,GAAKC,CAAC,IAAK;MACjB1E,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;;MAExB;MACA;MACA;MACA,MAAM0E,IAAG,GAAI,IAAIC,IAAI,CAACxF,MAAM,EAAE;QAAEmF,IAAI,EAAExF;MAAW,CAAC,CAAC;MACnDK,MAAK,GAAI,EAAE;;MAEX;MACAY,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAElB,UAAS,CAAG;MAC1D,IAAI8F,GAAE,GAAIC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;MACnC;MACA,IAAIK,QAAO,GAAI5E,QAAQ,CAACO,aAAa,CAAC,OAAO,CAAC;MAC9CqE,QAAQ,CAACC,QAAO,GAAI,IAAI;MACxBD,QAAQ,CAACE,QAAO,GAAI,IAAI;MACxBF,QAAQ,CAACnE,MAAK,GAAI,GAAG;MACrBmE,QAAQ,CAAClE,KAAI,GAAI,GAAG;MACpBkE,QAAQ,CAACG,GAAE,GAAIN,GAAG;;MAElB;MACAzE,QAAQ,CAACC,aAAa,CAAC,wBAAwB,CAAC,CAACW,WAAU,GAAI,EAAE;MACjEZ,QAAQ,CAACC,aAAa,CAAC,wBAAwB,CAAC,CAACY,WAAW,CAAC+D,QAAQ,CAAC;;MAGtE;MACA,IAAI,CAACtB,MAAM,CAAC0B,QAAQ,CAAC,4CAA4C,EAAEP,GAAG,CAAC;MACvE;;MAEA;MACA;IACF;;IACA/F,EAAE,CAACuG,eAAc,GAAKX,CAAC,IAAK;MAC1B;MACA1E,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;;MAEjC;MACAb,MAAM,CAACkG,IAAI,CAACZ,CAAC,CAAC7E,IAAI,CAAC;;MAEnB;MACA,IAAIf,EAAE,CAAC6E,KAAI,KAAM,WAAW,EAAE;QAC1B7E,EAAE,CAACyG,IAAI,EAAE;MACb;MACA,IAAI,CAACzF,MAAK,GAAI,sCAAsC;IACtD;EAEF,CAAC;EACD0F,OAAO,EAAE;IACP,MAAMC,iBAAiBA,CAACf,CAAC,EAAE;MACzB;;MAEA1E,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpC,IAAI,CAACH,MAAK,GAAI,qBAAoB;MAClCvB,MAAM,CAACmH,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC;;MAE3B;MACA;;MAEA;MACA,MAAMC,GAAE,GAAI1H,IAAI,CAAC2H,KAAK,CAAC,CAAC,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAC,GAAI,KAAK,IAAI,IAAI;MAC5D,MAAMC,GAAE,GAAIJ,GAAE,GAAI,EAAC,GAAI,EAAC,GAAI;MAE5B,MAAMK,OAAM,GAAI;QAAEC,GAAG,EAAE,OAAO;QAAEC,GAAG,EAAE;MAAM;MAE3C,MAAMC,QAAO,GAAI;QACfC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,0BAA0B;QAC/CC,GAAG,EAAEjH,YAAY;QACjBkH,OAAO,EAAE,CAAC;QACVC,SAAS,EAAE,CAAC;QACZf,GAAG,EAAEA,GAAG;QACRI,GAAG,EAAEA,GAAG;QACRY,GAAG,EAAEnH;MACP;MAEA,MAAMoH,OAAM,GAAIC,IAAI,CAACC,SAAS,CAACd,OAAO;MACtC,MAAMe,QAAO,GAAIF,IAAI,CAACC,SAAS,CAACX,QAAQ;MACxC,MAAMa,SAAQ,GAAIpJ,IAAI,CAACqJ,GAAG,CAACC,GAAG,CAACC,IAAI,CAAC,OAAO,EAAEP,OAAO,EAAEG,QAAQ,EAAEV,OAAO,CAACC,GAAG,CAACc,6BAA6B,CAAC;MAC1G;;MAEA;MACApH,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpC;MACA,MAAM1B,MAAM,CAACF,IAAI,CAACkB,YAAY,EAAEyH,SAAS,EAAE,IAAI,CAACtD,MAAM,CAACC,KAAK,CAAC0D,QAAQ,CAACC,KAAK,EAAE9H,eAAe,CAAC,CAAC+H,IAAI,CAAEC,GAAG,IAAK;QAC1GlJ,MAAK,GAAIC,MAAM,CAACkJ,cAAc,EAAE;QAChCzH,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEuH,GAAG,CAAC;QACvB,IAAI,CAAC1H,MAAK,GAAK,gCAA+BP,YAAa,eAAcC,eAAgB,EAAC;;QAE1F;;;;;;MAMF,CAAC,CAAC,CAACkI,KAAK,CAAEC,KAAK,IAAK;QAClB,IAAI,CAAC7H,MAAK,GAAI,6CAA6C;QAC3DE,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;QACzDD,OAAO,CAACC,GAAG,CAAC0H,KAAK;MACnB,CAAC;;MAED;MACApJ,MAAM,CAACqJ,EAAE,CAAC,kBAAkB,EAAGC,OAAO,IAAK;QACzC,IAAIA,OAAO,CAACtD,IAAG,KAAM,OAAM,IAAKsD,OAAO,CAACC,MAAK,KAAM,SAAS,EAAE;UAC5D,IAAID,OAAO,CAACE,MAAK,KAAM,QAAQ,EAAE;YAC/B;YACAzI,iBAAgB,GAAI,IAAG;UACzB,OAAO,IAAIuI,OAAO,CAACE,MAAK,KAAM,QAAQ,EAAE;YACtC;YACA1I,iBAAgB,GAAI,IAAG;UACzB;QACF;QAAC;QAED,IAAGL,MAAM,CAACC,MAAK,KAAM+I,SAAS,EAAE;UAC9B;UACA,IAAI1I,iBAAgB,IAAKD,iBAAiB,EAAE;YAC1C;YACA,IAAI;cACF;cACAf,MAAM,CAAC2J,UAAU,CAAC;gBAAEC,sBAAsB,EAAE;cAAK,CAAC;YACpD,EAAE,OAAOP,KAAK,EAAE;cACd;cACA3H,OAAO,CAACC,GAAG,CAAC0H,KAAK;YACnB;UACF,OAAO;YACL;YACA3H,OAAO,CAACC,GAAG,CAAC,4CAA4C;UAC1D;QACF;QAAC;MACH,CAAC;MAEDD,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC3B,IAAI,CAACyD,MAAM,CAACyE,MAAM,CAAC,+CAA+C,CAAC;;MAEnE;MACA5J,MAAM,CAACqJ,EAAE,CAAC,sBAAsB,EAAGC,OAAO,IAAK;QAC7C7H,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAE4H,OAAO,CAAC;QACpD,IAAI,CAACO,uBAAuB,EAAE;MAChC,CAAC,CAAC;IAEJ,CAAC;IACDC,gBAAgBA,CAAC3D,CAAC,EAAE;MAClB;MACA,IAAG,IAAI,CAAChB,MAAM,CAACC,KAAK,CAACC,uBAAuB,CAACC,MAAM,CAACG,SAAS,EAAC;QAC1D,IAAI,CAACsE,iBAAiB,EAAE;MAC5B;MACA,IAAG,IAAI,CAAC5E,MAAM,CAACC,KAAK,CAACC,uBAAuB,CAACC,MAAM,CAACC,OAAO,EAAC;QAC1D,IAAI,CAACyE,eAAe,EAAE;MACxB;MACA,IAAG,IAAI,CAAC7E,MAAM,CAACC,KAAK,CAACC,uBAAuB,CAACC,MAAM,CAACK,aAAa,EAAC;QAChE,IAAI,CAACkE,uBAAuB,EAAE;MAChC;MACA,IAAG,IAAI,CAAC1E,MAAM,CAACC,KAAK,CAACC,uBAAuB,CAACC,MAAM,CAAC2E,WAAW,EAAC;QAC9D,IAAI,CAACC,aAAa,EAAE;MACtB;;MAEA;MACAlK,MAAM,CAACmK,KAAK,CAAC,IAAI,CAAC;MAElB1I,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5B,IAAI,CAACH,MAAK,GAAI,mBAAmB;MACjC,IAAI,CAAC4D,MAAM,CAACyE,MAAM,CAAC,+CAA+C,CAAC;IACrE,CAAC;IACD,MAAMG,iBAAiBA,CAAA,EAAG;MACxB,IAAIK,UAAS,GAAI,IAAI,CAACjF,MAAM,CAACC,KAAK,CAACC,uBAAuB,CAACC,MAAM,CAACG,SAAS;MAE3E,IAAI2E,UAAU,EAAC;QACb;QACA,IAAI,CAAC7I,MAAK,GAAI,mBAAmB;QACjCxB,MAAM,CAACsK,SAAS,EAAE;QAClBjJ,qBAAqB,CAACkJ,SAAS,CAAC,CAAC,EAAC,CAAC,EAAEpJ,kBAAkB,CAACqB,KAAK,EAAErB,kBAAkB,CAACoB,MAAM,CAAC;MAC3F,OAAO;QACL;QACA,IAAI,CAACf,MAAK,GAAI,kBAAkB;QAEhCE,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAE,OAAOS,iBAAiB,CAAC;QACnE,IAAG,CAAC,CAAC1B,MAAM,CAACmC,MAAK,IAAK,EAAE,OAAOT,iBAAgB,KAAM,UAAU,CAAC,EAAE;UAClE;UACE;UACAV,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;UACvDD,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAExB,aAAa,CAAC;UAErDH,MAAM,CAACwK,UAAU,CAAC;YAAEC,YAAY,EAAEtK;UAAc,CAAC,CAAC;QAEpD,OAAO;UACL;;UAEAuB,OAAO,CAACC,GAAG,CAAC,+CAA+C;UAC3DD,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAExB,aAAa,CAAC;;UAErD;;;;;UAKDH,MAAM,CAACwK,UAAU,EAAE,CAACvB,IAAI,CAAC,MAAM;YAC9BjJ,MAAM,CAAC0K,WAAW,CAACvK,aAAa,EAAEF,MAAM,CAAC0K,kBAAkB,EAAE,CAACC,MAAM,EAClEzK,aAAa,CAACqC,KAAK,EAAErC,aAAa,CAACoC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,EAClD,CAAC0G,IAAI,CAAC,MAAM;cACXvH,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;YAC3C,CAAC,CAAC,CAACyH,KAAK,CAAEhD,CAAC,IAAK;cACd1E,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEyE,CAAC,CAAC;YACtC,CAAC,CAAC;UACH,CAAC;QACF;QAEAjF,kBAAkB,CAACqB,KAAI,GAAIrC,aAAa,CAACqC,KAAK;QAC9CrB,kBAAkB,CAACoB,MAAK,GAAIpC,aAAa,CAACoC,MAAM;MAClD;MACA,IAAI,CAAC6C,MAAM,CAACyE,MAAM,CAAC,qCAAqC,CAAC;IAC3D,CAAC;IACD,MAAMC,uBAAuBA,CAAC1D,CAAC,EAAE;MAC/B;;;;MAIA1E,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;MAEjD,IAAIkJ,gBAAe,GAAI,IAAI,CAACzF,MAAM,CAACC,KAAK,CAACC,uBAAuB,CAACC,MAAM,CAACK,aAAa;MAErF,IAAIiF,gBAAgB,EAAE;QACpBnJ,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;QACvC;QACA3B,MAAM,CAAC8K,eAAe,EAAE;QACxBzJ,qBAAqB,CAACkJ,SAAS,CAAC,CAAC,EAAC,CAAC,EAAEpJ,kBAAkB,CAACqB,KAAK,EAAErB,kBAAkB,CAACoB,MAAM,CAAC;QACzF,IAAI,CAACf,MAAK,GAAI,yBAAyB;MACzC,OAAO;QACL;QACAE,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEvB,aAAa,CAAC;QACtDJ,MAAM,CAAC+K,gBAAgB,CAAC3K,aAAa,CAAC,CAAC6I,IAAI,CAAC,MAAM;UAChDvH,OAAO,CAACC,GAAG,CAAE,gCAA+BvB,aAAa,CAACoC,KAAK,MAAMpC,aAAa,CAACmC,MAAO,EAAC;UAC3F,IAAGnC,aAAa,CAACoC,KAAI,IAAK,CAAC,EAAE;YAC3BrB,kBAAkB,CAACqB,KAAK,GAAC,IAAI;YAC7BrB,kBAAkB,CAACoB,MAAM,GAAC,GAAG;UAE/B,OAAO;YACLpB,kBAAkB,CAACqB,KAAI,GAAIpC,aAAa,CAACoC,KAAK;YAC9CrB,kBAAkB,CAACoB,MAAK,GAAInC,aAAa,CAACmC,MAAM;UAClD;QACF,CAAC,CAAC,CAAC6G,KAAK,CAAEhD,CAAC,IAAK;UACd1E,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEyE,CAAC,CAAC;QACxC,CAAC,CAAC;QACF,IAAI,CAAC5E,MAAK,GAAI,wBAAwB;MAExC;;MAEA;MACA,IAAI,CAAC4D,MAAM,CAACyE,MAAM,CAAC,2CAA2C,CAAC;IAEjE,CAAC;IACD,MAAMI,eAAeA,CAAC7D,CAAC,EAAC;MACtB1E,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAE7B,IAAIqJ,QAAO,GAAI,IAAI,CAAC5F,MAAM,CAACC,KAAK,CAACC,uBAAuB,CAACC,MAAM,CAACC,OAAO;MAEvE,IAAIwF,QAAQ,EAAE;QACZ;QACAhL,MAAM,CAACiL,SAAS,EAAE;QAClBpK,QAAQ,CAACwC,cAAc,EAAE,CAAC,CAAC,CAAC,CAACC,OAAM,GAAI,KAAK;QAC5CjC,qBAAqB,CAACkJ,SAAS,CAAC,CAAC,EAAC,CAAC,EAAEpJ,kBAAkB,CAACqB,KAAK,EAAErB,kBAAkB,CAACoB,MAAM,CAAC;QACzF,IAAI,CAACf,MAAK,GAAI,0BAA0B;MAC1C,OAAO;QACL;QACAxB,MAAM,CAAC2J,UAAU,EAAE;QACnB9I,QAAQ,CAACwC,cAAc,EAAE,CAAC,CAAC,CAAC,CAACC,OAAM,GAAI,IAAI;QAC3C,IAAI,CAAC9B,MAAK,GAAI,yBAAyB;MACzC;;MAEA;MACA,IAAI,CAAC4D,MAAM,CAACyE,MAAM,CAAC,mCAAmC,CAAC;IACzD,CAAC;IACD,MAAMqB,cAAcA,CAAA,EAAE;MACpBxJ,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAE3BnB,EAAE,CAAC2K,KAAK,EAAE;MAEV,IAAI,CAAC/F,MAAM,CAACyE,MAAM,CAAC,yCAAyC,CAAC;MAC7D,IAAI,CAACrI,MAAK,GAAI,mBAAmB;IACnC,CAAC;IACD2I,aAAaA,CAAA,EAAE;MACbzI,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAE1BnB,EAAE,CAACyG,IAAI,EAAE;MAET,IAAI,CAAC7B,MAAM,CAACyE,MAAM,CAAC,yCAAyC,CAAC;MAC7D,IAAI,CAACrI,MAAK,GAAI,mBAAmB;IACnC;EACF,CAAC;EACD4J,UAAU,EAAE;IACV9M,QAAQ;IAAED,OAAO;IAAED,UAAU;IAAED,SAAS;IAAED,WAAW;IACrDkB,UAAU;IAAEb,SAAS;IAAEC,QAAQ;IAAEC,cAAc;IAAEC,QAAQ;IACzDC,cAAc;IAAEC,mBAAmB;IAAEC,QAAQ;IAAEC,UAAU;IAAEC,gBAAgB;IAC3EC,WAAW;IAAEC,gBAAgB;IAAEC,SAAS;IAAEC;EAC5C;AAEF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}