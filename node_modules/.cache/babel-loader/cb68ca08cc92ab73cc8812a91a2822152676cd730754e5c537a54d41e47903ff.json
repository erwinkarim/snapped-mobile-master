{"ast":null,"code":"import Repository from \"@/repositories/Repository\";\nconst token = localStorage.getItem('token');\nexport default {\n  storeIndex() {\n    // get all the stores\n    return Repository.get('/stores', {});\n  },\n  storeDetail(storeID) {\n    // get all the stores\n    return Repository.get(`/stores/${storeID}`, {});\n  },\n  storeRecentProducts() {\n    // get a list of recent products, \n    console.log('get all products');\n    return Repository.get('/store-products');\n  },\n  storeProducts(storeID) {\n    // set all products  of a store\n    console.log('get products of a store');\n    return Repository.get(`/stores/${storeID}/storeProducts`, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  },\n  storeProduct(storeID, productID) {\n    // get product info \n    return Repository.get(`/stores/${storeID}/storeProducts/${productID}`, {\n      headers: {\n        Accept: \"application/json\",\n        Authorization: 'Bearer ' + token\n      }\n    });\n  },\n  storeNewOrder(orderDetail) {\n    // make a new order\n    return Repository.post(`/orders`, {\n      orderDetail\n    });\n  },\n  storeOrders() {\n    // get your orders\n    return Repository.get(`/orders/`, {\n      headers: {\n        Accept: \"application/json\",\n        Authorization: 'Bearer ' + token\n      }\n    });\n  },\n  storeGetOrder(orderID) {\n    // get a specific orders\n    return Repository.get(`/orders/${orderID}`, {\n      headers: {\n        Accept: \"application/json\",\n        Authorization: 'Bearer ' + token\n      }\n    });\n  }\n};","map":{"version":3,"names":["Repository","token","localStorage","getItem","storeIndex","get","storeDetail","storeID","storeRecentProducts","console","log","storeProducts","headers","storeProduct","productID","Accept","Authorization","storeNewOrder","orderDetail","post","storeOrders","storeGetOrder","orderID"],"sources":["/Users/erwinkarim/Websites/Snapped/snapped-mobile-master/src/repositories/StoresRepository.js"],"sourcesContent":["import Repository from \"@/repositories/Repository\";\n\nconst token = localStorage.getItem('token');\n\nexport default {\n  storeIndex(){\n    // get all the stores\n    return Repository.get('/stores', {\n    });\n  },\n  storeDetail(storeID){\n    // get all the stores\n    return Repository.get(`/stores/${storeID}`, {\n    });\n  },\n  storeRecentProducts(){\n    // get a list of recent products, \n    console.log('get all products');\n    return Repository.get('/store-products');\n  },\n  storeProducts(storeID){\n    // set all products  of a store\n    console.log('get products of a store');\n    return Repository.get(`/stores/${storeID}/storeProducts`, {\n      headers: { \n        'Content-Type': 'application/json'\n      }\n    });\n  },\n  storeProduct(storeID, productID){\n    // get product info \n    return Repository.get(`/stores/${storeID}/storeProducts/${productID}`, {\n        headers: {\n            Accept: \"application/json\",\n            Authorization: 'Bearer ' + token,\n        }\n    });\n  },\n  storeNewOrder(orderDetail){\n    // make a new order\n    return Repository.post(`/orders`, {\n      orderDetail,\n    });\n  },\n  storeOrders(){\n    // get your orders\n    return Repository.get(`/orders/`, {\n        headers: {\n            Accept: \"application/json\",\n            Authorization: 'Bearer ' + token,\n        }\n    });\n  },\n  storeGetOrder(orderID){\n    // get a specific orders\n    return Repository.get(`/orders/${orderID}`, {\n        headers: {\n            Accept: \"application/json\",\n            Authorization: 'Bearer ' + token,\n        }\n    });\n  },\n\n}"],"mappings":"AAAA,OAAOA,UAAU,MAAM,2BAA2B;AAElD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AAE3C,eAAe;EACbC,UAAUA,CAAA,EAAE;IACV;IACA,OAAOJ,UAAU,CAACK,GAAG,CAAC,SAAS,EAAE,CACjC,CAAC,CAAC;EACJ,CAAC;EACDC,WAAWA,CAACC,OAAO,EAAC;IAClB;IACA,OAAOP,UAAU,CAACK,GAAG,CAAE,WAAUE,OAAQ,EAAC,EAAE,CAC5C,CAAC,CAAC;EACJ,CAAC;EACDC,mBAAmBA,CAAA,EAAE;IACnB;IACAC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/B,OAAOV,UAAU,CAACK,GAAG,CAAC,iBAAiB,CAAC;EAC1C,CAAC;EACDM,aAAaA,CAACJ,OAAO,EAAC;IACpB;IACAE,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtC,OAAOV,UAAU,CAACK,GAAG,CAAE,WAAUE,OAAQ,gBAAe,EAAE;MACxDK,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;EACJ,CAAC;EACDC,YAAYA,CAACN,OAAO,EAAEO,SAAS,EAAC;IAC9B;IACA,OAAOd,UAAU,CAACK,GAAG,CAAE,WAAUE,OAAQ,kBAAiBO,SAAU,EAAC,EAAE;MACnEF,OAAO,EAAE;QACLG,MAAM,EAAE,kBAAkB;QAC1BC,aAAa,EAAE,SAAS,GAAGf;MAC/B;IACJ,CAAC,CAAC;EACJ,CAAC;EACDgB,aAAaA,CAACC,WAAW,EAAC;IACxB;IACA,OAAOlB,UAAU,CAACmB,IAAI,CAAE,SAAQ,EAAE;MAChCD;IACF,CAAC,CAAC;EACJ,CAAC;EACDE,WAAWA,CAAA,EAAE;IACX;IACA,OAAOpB,UAAU,CAACK,GAAG,CAAE,UAAS,EAAE;MAC9BO,OAAO,EAAE;QACLG,MAAM,EAAE,kBAAkB;QAC1BC,aAAa,EAAE,SAAS,GAAGf;MAC/B;IACJ,CAAC,CAAC;EACJ,CAAC;EACDoB,aAAaA,CAACC,OAAO,EAAC;IACpB;IACA,OAAOtB,UAAU,CAACK,GAAG,CAAE,WAAUiB,OAAQ,EAAC,EAAE;MACxCV,OAAO,EAAE;QACLG,MAAM,EAAE,kBAAkB;QAC1BC,aAAa,EAAE,SAAS,GAAGf;MAC/B;IACJ,CAAC,CAAC;EACJ;AAEF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}